body {
	padding: 0;
    margin: 0;
    overflow: hidden;
    user-select: none;
    --row-height: 20px;
    --digit-width: 10px;
    --digits: 2;
    --num-columns: 16;
}

span {
    overflow: hidden;
    height: 100%;
}

.container {
    overflow-x: hidden;
    overflow-y: scroll;
    width: 100vw;
    height: 100vh;
    scrollbar-width: none;
}

.hexview {
    position:   relative;
    display:    flex;
    overflow:   hidden;
    column-gap: 10px;
    font-family: var(--vscode-editor-font-family),'Segoe UI Emoji';
    font-size:  var(--vscode-editor-font-size);
    color:      var(--vscode-foreground);

    &::before {
        content: '';
        position: absolute;
        left:   0;
        top:    0;
        width:  100%;
        height: inherit;
        background-color: var(--vscode-list-hoverBackground);
        mask:       url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1 2"%3E%3Crect width="1" height="1" fill="currentColor"/%3E%3C/svg%3E') repeat;
        mask-size:  var(--row-height);
        z-index:    -1;
    }
}

.data {
    display: contents;
}

.placeholder {
    display: contents;
    text-align:right;
    & span {
        width: 0;
        height: 0;
        overflow: hidden;
        visibility: hidden;
    }
}

.addr {
    width: auto;
    overflow: hidden;
    display: grid;
    grid-auto-rows: var(--row-height);

    & span {
        color: var(--vscode-editorLineNumber-foreground);
        &:hover {
            background-color: var(--vscode-editor-hoverHighlightBackground);
        }
    }
}

.hex {
    flex: calc(var(--digits) + 1);
    overflow: hidden;
    position: relative;
    scrollbar-width: none;
    text-align:right;

    --width: calc((var(--digits) + 1) * var(--digit-width));
    display: grid;
    grid-template-columns: repeat(var(--num-columns), var(--width));
    grid-auto-rows: var(--row-height);

    & .placeholder span::before {
        visibility: visible;
        position: absolute;
        content: '--';
    }

    & span:hover {
        background-color: var(--vscode-editor-hoverHighlightBackground);
    }
}

.text {
    flex: 2;
    /*overflow: hidden;*/
    position: relative;
    text-align:left;

    --width: calc(2 * var(--digit-width));
    display: grid;
    grid-template-columns: repeat(var(--num-columns), var(--width));
    grid-auto-rows: var(--row-height);

    & .placeholder span::before {
        visibility: visible;
        position: absolute;
        content: '.';
    }

    & span:hover {
        background-color: var(--vscode-editor-hoverHighlightBackground);
    }
}

.selection {
    position: absolute;
    background-color: var(--vscode-editor-selectionBackground);
    /*pointer-events: none;*/
    z-index: -1;

    &[data-multi-row="false"] {
        top:    calc(var(--start-y) * var(--row-height));
        height: var(--row-height);
        left:   calc(var(--start-x) * var(--width));
        width:  calc((var(--end-x) - var(--start-x)) * var(--width));
    }

    &[data-multi-row="true"] {
        top:    calc((var(--start-y) + 1) * var(--row-height));
        height: calc((var(--end-y) - var(--start-y) - 1) * var(--row-height));
        width:  calc(var(--width) * var(--num-columns));

        &::before, &::after {
            content: '';
            position: absolute;
            background-color: inherit;
            pointer-events: inherit;
            height: var(--row-height);
        }
        &::before {
            top: calc(-1 * var(--row-height));
            left: calc(var(--start-x) * var(--width));
            width: calc(var(--width) * (var(--num-columns) - var(--start-x)));

        }
        &::after {
            left: 0;
            bottom: calc(-1 * var(--row-height));
            width: calc(var(--end-x) * var(--width));
        }
    }
}


.color-picker {
    position: absolute;
    cursor: pointer;
    z-index: 1;
    padding: 0;
    transition: opacity .2s linear;

    &.invisible {
        opacity: 0;
    }

    /*
    opacity: 0;
    pointer-events: auto;
    top:    calc(round(var(--picker-offset) / var(--num-columns) - 0.5) * var(--row-height));
    left:   calc(mod(var(--picker-offset), var(--num-columns)) * var(--width));
    top:    calc(var(--picker-y) * var(--row-height));
    left:   calc(var(--picker-x) * var(--width));
    */
    height: var(--row-height);
    width:  var(--width);

}

.tooltip {
	position: absolute;
    display:    none;
    padding:    .5em;
    z-index:    1000;
	overflow:   hidden;
	background: var(--vscode-editorHoverWidget-background);
	color:      var(--vscode-editorHoverWidget-foreground);
	border:     1px solid var(--vscode-editorHoverWidget-border);
	border-radius: 3px;
	box-shadow: 0 2px 8px var(--vscode-widget-shadow);
    white-space: pre-wrap;
    pointer-events: none;
}
