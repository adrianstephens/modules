{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://modules/./node_modules/@microsoft/1ds-core-js/dist-es5/AppInsightsCore.js","webpack://modules/./node_modules/@microsoft/1ds-core-js/dist-es5/Enums.js","webpack://modules/./node_modules/@microsoft/1ds-core-js/dist-es5/ValueSanitizer.js","webpack://modules/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK.Interfaces/IChannelControls.js","webpack://modules/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK.Enums/LoggingEnums.js","webpack://modules/./node_modules/@microsoft/1ds-core-js/dist-es5/InternalConstants.js","webpack://modules/./node_modules/@microsoft/1ds-core-js/dist-es5/Utils.js","webpack://modules/./node_modules/@microsoft/1ds-core-js/dist-es5/__DynamicConstants.js","webpack://modules/./node_modules/@microsoft/1ds-post-js/dist-es5/DataModels.js","webpack://modules/./node_modules/@microsoft/1ds-post-js/dist-es5/InternalConstants.js","webpack://modules/./node_modules/@microsoft/1ds-post-js/dist-es5/__DynamicConstants.js","webpack://modules/./node_modules/@microsoft/1ds-post-js/dist-es5/EventBatch.js","webpack://modules/./node_modules/@microsoft/1ds-post-js/dist-es5/ClockSkewManager.js","webpack://modules/./node_modules/@microsoft/1ds-post-js/dist-es5/KillSwitch.js","webpack://modules/./node_modules/@microsoft/1ds-post-js/dist-es5/RetryPolicy.js","webpack://modules/./node_modules/@microsoft/1ds-post-js/dist-es5/Serializer.js","webpack://modules/./node_modules/@microsoft/1ds-post-js/dist-es5/HttpManager.js","webpack://modules/./node_modules/@microsoft/1ds-post-js/dist-es5/TimeoutOverrideWrapper.js","webpack://modules/./node_modules/@microsoft/1ds-post-js/dist-es5/PostChannel.js","webpack://modules/./node_modules/@microsoft/applicationinsights-common/dist-es5/ConnectionStringParser.js","webpack://modules/./node_modules/@microsoft/applicationinsights-common/dist-es5/Constants.js","webpack://modules/./node_modules/@microsoft/applicationinsights-common/dist-es5/Enums.js","webpack://modules/./node_modules/@microsoft/applicationinsights-common/dist-es5/HelperFuncs.js","webpack://modules/./node_modules/@microsoft/applicationinsights-common/dist-es5/Interfaces/Contracts/ContextTagKeys.js","webpack://modules/./node_modules/@microsoft/applicationinsights-common/dist-es5/Interfaces/Contracts/SeverityLevel.js","webpack://modules/./node_modules/@microsoft/applicationinsights-common/dist-es5/Interfaces/PartAExtensions.js","webpack://modules/./node_modules/@microsoft/applicationinsights-common/dist-es5/Offline.js","webpack://modules/./node_modules/@microsoft/applicationinsights-common/dist-es5/RequestResponseHeaders.js","webpack://modules/./node_modules/@microsoft/applicationinsights-common/dist-es5/StorageHelperFuncs.js","webpack://modules/./node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/Common/Data.js","webpack://modules/./node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/Common/DataSanitizer.js","webpack://modules/./node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/Common/Envelope.js","webpack://modules/./node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/Event.js","webpack://modules/./node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/Exception.js","webpack://modules/./node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/Common/DataPoint.js","webpack://modules/./node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/Metric.js","webpack://modules/./node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/PageView.js","webpack://modules/./node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/PageViewPerformance.js","webpack://modules/./node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/RemoteDependencyData.js","webpack://modules/./node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/Trace.js","webpack://modules/./node_modules/@microsoft/applicationinsights-common/dist-es5/UrlHelperFuncs.js","webpack://modules/./node_modules/@microsoft/applicationinsights-common/dist-es5/Util.js","webpack://modules/./node_modules/@microsoft/applicationinsights-common/dist-es5/__DynamicConstants.js","webpack://modules/./node_modules/@microsoft/applicationinsights-common/dist-es5/ThrottleMgr.js","webpack://modules/./node_modules/@microsoft/applicationinsights-common/dist-es5/Interfaces/IConfig.js","webpack://modules/./node_modules/@microsoft/applicationinsights-common/dist-es5/TelemetryItemCreator.js","webpack://modules/./node_modules/@microsoft/applicationinsights-common/dist-es5/DomHelperFuncs.js","webpack://modules/./node_modules/@microsoft/applicationinsights-common/dist-es5/applicationinsights-common.js","webpack://modules/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/Config/ConfigDefaultHelpers.js","webpack://modules/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/Config/ConfigDefaults.js","webpack://modules/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/AggregationError.js","webpack://modules/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/Config/DynamicProperty.js","webpack://modules/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/Config/DynamicState.js","webpack://modules/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/Config/DynamicConfig.js","webpack://modules/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/Config/DynamicSupport.js","webpack://modules/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK.Enums/EnumHelperFuncs.js","webpack://modules/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK.Enums/EventsDiscardedReason.js","webpack://modules/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK.Enums/InitActiveStatusEnum.js","webpack://modules/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/AppInsightsCore.js","webpack://modules/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/TelemetryInitializerPlugin.js","webpack://modules/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/AsyncUtils.js","webpack://modules/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/BaseTelemetryPlugin.js","webpack://modules/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/Constants.js","webpack://modules/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/CookieMgr.js","webpack://modules/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/CoreUtils.js","webpack://modules/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/DataCacheHelper.js","webpack://modules/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/DbgExtensionUtils.js","webpack://modules/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/DiagnosticLogger.js","webpack://modules/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/EnvUtils.js","webpack://modules/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/EventHelpers.js","webpack://modules/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/HelperFuncs.js","webpack://modules/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/InternalConstants.js","webpack://modules/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/NotificationManager.js","webpack://modules/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/PerfManager.js","webpack://modules/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/ProcessTelemetryContext.js","webpack://modules/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/RandomHelper.js","webpack://modules/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/ResponseHelpers.js","webpack://modules/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/SenderPostManager.js","webpack://modules/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/TelemetryHelpers.js","webpack://modules/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/UnloadHandlerContainer.js","webpack://modules/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/UnloadHookContainer.js","webpack://modules/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/W3cTraceParent.js","webpack://modules/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/__DynamicConstants.js","webpack://modules/./node_modules/@microsoft/applicationinsights-shims/dist-es5/Constants.js","webpack://modules/./node_modules/@microsoft/applicationinsights-shims/dist-es5/TsLibShims.js","webpack://modules/./node_modules/@microsoft/applicationinsights-channel-js/dist-es5/InternalConstants.js","webpack://modules/./node_modules/@microsoft/applicationinsights-channel-js/dist-es5/__DynamicConstants.js","webpack://modules/./node_modules/@microsoft/applicationinsights-channel-js/dist-es5/EnvelopeCreator.js","webpack://modules/./node_modules/@microsoft/applicationinsights-channel-js/dist-es5/SendBuffer.js","webpack://modules/./node_modules/@microsoft/applicationinsights-channel-js/dist-es5/Sender.js","webpack://modules/./node_modules/@microsoft/applicationinsights-channel-js/dist-es5/Serializer.js","webpack://modules/./node_modules/@microsoft/applicationinsights-channel-js/dist-es5/TelemetryProcessors/SamplingScoreGenerators/HashCodeScoreGenerator.js","webpack://modules/./node_modules/@microsoft/applicationinsights-channel-js/dist-es5/TelemetryProcessors/SamplingScoreGenerators/SamplingScoreGenerator.js","webpack://modules/./node_modules/@microsoft/applicationinsights-channel-js/dist-es5/TelemetryProcessors/Sample.js","webpack://modules/./node_modules/@microsoft/applicationinsights-web-basic/dist-es5/index.js","webpack://modules/./node_modules/@microsoft/applicationinsights-web-basic/dist-es5/__DynamicConstants.js","webpack://modules/./node_modules/@microsoft/dynamicproto-js/dist-es5/DynamicProto.js","webpack://modules/./node_modules/@nevware21/ts-async/dist/es5/mod/ts-async.js","webpack://modules/./node_modules/@nevware21/ts-utils/dist/es5/mod/ts-utils.js","webpack://modules/./node_modules/@vscode/extension-telemetry/dist/node/common/1dsClientFactory.js","webpack://modules/./node_modules/@vscode/extension-telemetry/dist/node/common/appInsightsClientFactory.js","webpack://modules/./node_modules/@vscode/extension-telemetry/dist/node/common/baseTelemetryReporter.js","webpack://modules/./node_modules/@vscode/extension-telemetry/dist/node/common/baseTelemetrySender.js","webpack://modules/./node_modules/@vscode/extension-telemetry/dist/node/common/util.js","webpack://modules/./node_modules/@vscode/extension-telemetry/dist/node/node/telemetryReporter.js","webpack://modules/./src/ModulesView.tsx","webpack://modules/./src/extension.ts","webpack://modules/./src/modules/jsx.tsx","webpack://modules/./src/modules/utils.ts","webpack://modules/external commonjs \"vscode\"","webpack://modules/external node-commonjs \"https\"","webpack://modules/external node-commonjs \"os\"","webpack://modules/external node-commonjs \"path\"","webpack://modules/webpack/bootstrap","webpack://modules/webpack/runtime/define property getters","webpack://modules/webpack/runtime/hasOwnProperty shorthand","webpack://modules/webpack/runtime/make namespace object","webpack://modules/webpack/startup"],"sourcesContent":["/*\n * 1DS JS SDK Core, 4.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\n/**\r\n* AppInsightsCore.ts\r\n* @author Abhilash Panwar (abpanwar) Hector Hernandez (hectorh)\r\n* @copyright Microsoft 2018\r\n*/\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { AppInsightsCore as InternalCore, _throwInternal, createDynamicConfig, doPerf, dumpObj, throwError } from \"@microsoft/applicationinsights-core-js\";\r\nimport { objDeepFreeze } from \"@nevware21/ts-utils\";\r\nimport { STR_DEFAULT_ENDPOINT_URL, STR_EMPTY, STR_PROPERTIES, STR_VERSION } from \"./InternalConstants\";\r\nimport { FullVersionString, getTime, isLatency } from \"./Utils\";\r\nimport { _DYN_INDEX_OF, _DYN_INITIALIZE, _DYN_LOGGER, _DYN_POLL_INTERNAL_LOGS, _DYN_TIMINGS } from \"./__DynamicConstants\";\r\n/**\r\n * The default settings for the config.\r\n * WE MUST include all defaults here to ensure that the config is created with all of the properties\r\n * defined as dynamic.\r\n */\r\nvar defaultConfig = objDeepFreeze({\r\n    endpointUrl: STR_DEFAULT_ENDPOINT_URL,\r\n    propertyStorageOverride: { isVal: _chkPropOverride }\r\n});\r\nfunction _chkPropOverride(propertyStorageOverride) {\r\n    // Validate property storage override\r\n    if (propertyStorageOverride && (!propertyStorageOverride.getProperty || !propertyStorageOverride.setProperty)) {\r\n        throwError(\"Invalid property storage override passed.\");\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * @group Classes\r\n * @group Entrypoint\r\n */\r\nvar AppInsightsCore = /** @class */ (function (_super) {\r\n    __extends(AppInsightsCore, _super);\r\n    function AppInsightsCore() {\r\n        var _this = _super.call(this) || this;\r\n        dynamicProto(AppInsightsCore, _this, function (_self, _base) {\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (config, extensions, logger, notificationManager) {\r\n                doPerf(_self, function () { return \"AppInsightsCore.initialize\"; }, function () {\r\n                    try {\r\n                        _base[_DYN_INITIALIZE /* @min:%2einitialize */](createDynamicConfig(config, defaultConfig, logger || _self[_DYN_LOGGER /* @min:%2elogger */], false).cfg, extensions, logger, notificationManager);\r\n                    }\r\n                    catch (e) {\r\n                        var logger_1 = _self[_DYN_LOGGER /* @min:%2elogger */];\r\n                        var message = dumpObj(e);\r\n                        if (message[_DYN_INDEX_OF /* @min:%2eindexOf */](\"channels\") !== -1) {\r\n                            // Add some additional context to the underlying reported error\r\n                            message += \"\\n - Channels must be provided through config.channels only!\";\r\n                        }\r\n                        _throwInternal(logger_1, 1 /* eLoggingSeverity.CRITICAL */, 514 /* _eExtendedInternalMessageId.FailedToInitializeSDK */, \"SDK Initialization Failed - no telemetry will be sent: \" + message);\r\n                    }\r\n                }, function () { return ({ config: config, extensions: extensions, logger: logger, notificationManager: notificationManager }); });\r\n            };\r\n            _self.track = function (item) {\r\n                doPerf(_self, function () { return \"AppInsightsCore.track\"; }, function () {\r\n                    var telemetryItem = item;\r\n                    if (telemetryItem) {\r\n                        telemetryItem[_DYN_TIMINGS /* @min:%2etimings */] = telemetryItem[_DYN_TIMINGS /* @min:%2etimings */] || {};\r\n                        telemetryItem[_DYN_TIMINGS /* @min:%2etimings */].trackStart = getTime();\r\n                        if (!isLatency(telemetryItem.latency)) {\r\n                            telemetryItem.latency = 1 /* EventLatencyValue.Normal */;\r\n                        }\r\n                        var itemExt = telemetryItem.ext = telemetryItem.ext || {};\r\n                        itemExt.sdk = itemExt.sdk || {};\r\n                        itemExt.sdk.ver = FullVersionString;\r\n                        var baseData = telemetryItem.baseData = telemetryItem.baseData || {};\r\n                        baseData[STR_PROPERTIES /* @min:%2eproperties */] = baseData[STR_PROPERTIES /* @min:%2eproperties */] || {};\r\n                        var itemProperties = baseData[STR_PROPERTIES /* @min:%2eproperties */];\r\n                        itemProperties[STR_VERSION] = itemProperties[STR_VERSION] || _self.pluginVersionString || STR_EMPTY;\r\n                    }\r\n                    _base.track(telemetryItem);\r\n                }, function () { return ({ item: item }); }, !(item.sync));\r\n            };\r\n            _self[_DYN_POLL_INTERNAL_LOGS /* @min:%2epollInternalLogs */] = function (eventName) {\r\n                return _base[_DYN_POLL_INTERNAL_LOGS /* @min:%2epollInternalLogs */](eventName || \"InternalLog\");\r\n            };\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for AppInsightsCore.prototype.initialize.\r\n// Removed Stub for AppInsightsCore.prototype.track.\r\n// Removed Stub for AppInsightsCore.prototype.pollInternalLogs.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    AppInsightsCore.__ieDyn=1;\n\n    return AppInsightsCore;\r\n}(InternalCore));\r\nexport { AppInsightsCore };\r\n//# sourceMappingURL=AppInsightsCore.js.map","/*\n * 1DS JS SDK Core, 4.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* Enums.ts\r\n* @author Abhilash Panwar (abpanwar)\r\n* @copyright Microsoft 2018\r\n* File containing the enums as constants.\r\n*/\r\nimport { createEnumStyle } from \"@microsoft/applicationinsights-core-js\";\r\n/**\r\n * The ValueKind contains a set of values that specify value kind of the property.\r\n * Either PII (Personal Identifiable Information) or customer content.\r\n */\r\nexport var ValueKind = createEnumStyle({\r\n    NotSet: 0 /* eValueKind.NotSet */,\r\n    Pii_DistinguishedName: 1 /* eValueKind.Pii_DistinguishedName */,\r\n    Pii_GenericData: 2 /* eValueKind.Pii_GenericData */,\r\n    Pii_IPV4Address: 3 /* eValueKind.Pii_IPV4Address */,\r\n    Pii_IPv6Address: 4 /* eValueKind.Pii_IPv6Address */,\r\n    Pii_MailSubject: 5 /* eValueKind.Pii_MailSubject */,\r\n    Pii_PhoneNumber: 6 /* eValueKind.Pii_PhoneNumber */,\r\n    Pii_QueryString: 7 /* eValueKind.Pii_QueryString */,\r\n    Pii_SipAddress: 8 /* eValueKind.Pii_SipAddress */,\r\n    Pii_SmtpAddress: 9 /* eValueKind.Pii_SmtpAddress */,\r\n    Pii_Identity: 10 /* eValueKind.Pii_Identity */,\r\n    Pii_Uri: 11 /* eValueKind.Pii_Uri */,\r\n    Pii_Fqdn: 12 /* eValueKind.Pii_Fqdn */,\r\n    Pii_IPV4AddressLegacy: 13 /* eValueKind.Pii_IPV4AddressLegacy */,\r\n    Pii_IPv6ScrubLastHextets: 14 /* eValueKind.Pii_IPv6ScrubLastHextets */,\r\n    Pii_DropValue: 15 /* eValueKind.Pii_DropValue */,\r\n    CustomerContent_GenericContent: 32 /* eValueKind.CustomerContent_GenericContent */\r\n});\r\n/**\r\n * The EventLatency contains a set of values that specify the latency with which an event is sent.\r\n */\r\nexport var EventLatency = createEnumStyle({\r\n    /**\r\n     * Normal latency.\r\n     */\r\n    Normal: 1 /* EventLatencyValue.Normal */,\r\n    /**\r\n     * Cost deferred latency. At the moment this latency is treated as Normal latency.\r\n     */\r\n    CostDeferred: 2 /* EventLatencyValue.CostDeferred */,\r\n    /**\r\n     * Real time latency.\r\n     */\r\n    RealTime: 3 /* EventLatencyValue.RealTime */,\r\n    /**\r\n     * Bypass normal batching/timing and send as soon as possible, this will still send asynchronously.\r\n     * Added in v3.1.1\r\n     */\r\n    Immediate: 4 /* EventLatencyValue.Immediate */\r\n});\r\n/**\r\n * Enum for property types.\r\n */\r\nexport var EventPropertyType = createEnumStyle({\r\n    Unspecified: 0 /* eEventPropertyType.Unspecified */,\r\n    String: 1 /* eEventPropertyType.String */,\r\n    Int32: 2 /* eEventPropertyType.Int32 */,\r\n    UInt32: 3 /* eEventPropertyType.UInt32 */,\r\n    Int64: 4 /* eEventPropertyType.Int64 */,\r\n    UInt64: 5 /* eEventPropertyType.UInt64 */,\r\n    Double: 6 /* eEventPropertyType.Double */,\r\n    Bool: 7 /* eEventPropertyType.Bool */,\r\n    Guid: 8 /* eEventPropertyType.Guid */,\r\n    DateTime: 9 /* eEventPropertyType.DateTime */\r\n});\r\n/**\r\n * The EventPersistence contains a set of values that specify the event's persistence.\r\n */\r\nexport var EventPersistence = createEnumStyle({\r\n    /**\r\n     * Normal persistence.\r\n     */\r\n    Normal: 1 /* EventPersistenceValue.Normal */,\r\n    /**\r\n     * Critical persistence.\r\n     */\r\n    Critical: 2 /* EventPersistenceValue.Critical */\r\n});\r\nexport var TraceLevel = createEnumStyle({\r\n    NONE: 0 /* eTraceLevel.NONE */,\r\n    ERROR: 1 /* eTraceLevel.ERROR */,\r\n    WARNING: 2 /* eTraceLevel.WARNING */,\r\n    INFORMATION: 3 /* eTraceLevel.INFORMATION */\r\n});\r\n//# sourceMappingURL=Enums.js.map","/*\n * 1DS JS SDK Core, 4.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\nimport { isNullOrUndefined, isString, objForEachKey } from \"@microsoft/applicationinsights-core-js\";\r\nimport { arrForEach, arrIncludes, arrIndexOf, getLength } from \"@nevware21/ts-utils\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nimport { getFieldValueType, isValueAssigned, isValueKind } from \"./Utils\";\r\nimport { _DYN_CAN_HANDLE, _DYN_HANDLE_FIELD, _DYN_KIND, _DYN_LENGTH, _DYN_RM_FIELD_SANITIZER, _DYN_RM_SANITIZER, _DYN_VALUE } from \"./__DynamicConstants\";\r\nvar ValueSanitizer = /** @class */ (function () {\r\n    function ValueSanitizer(fieldSanitizerProvider) {\r\n        var _self = this;\r\n        // To aid with performance this is a lookup map to check if the field value sanitizer supports this field\r\n        var _sanitizerMap = {};\r\n        var _sanitizers = [];\r\n        var _fieldSanitizers = [];\r\n        if (fieldSanitizerProvider) {\r\n            _fieldSanitizers.push(fieldSanitizerProvider);\r\n        }\r\n        function _getFieldSanitizer(path, name) {\r\n            var result;\r\n            var fieldLookup = _sanitizerMap[path];\r\n            if (fieldLookup) {\r\n                result = fieldLookup[name];\r\n            }\r\n            if (!result && result !== null) {\r\n                // Null is a valid result indicating that the value sanitizer does not support this field\r\n                if (isString(path) && isString(name)) {\r\n                    if (_fieldSanitizers[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                        for (var lp = 0; lp < _fieldSanitizers[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                            if (_fieldSanitizers[lp][_DYN_HANDLE_FIELD /* @min:%2ehandleField */](path, name)) {\r\n                                result = {\r\n                                    canHandle: true,\r\n                                    fieldHandler: _fieldSanitizers[lp]\r\n                                };\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (_sanitizers[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n                        // Special use-case where there is no sanitizer to pass on to, so just resolving the field\r\n                        // and returning the resulting value (same as sanitizeProperty())\r\n                        result = {\r\n                            canHandle: true\r\n                        };\r\n                    }\r\n                }\r\n                // We still don't have a handler so lets lookup the providers\r\n                if (!result && result !== null) {\r\n                    // Setting the result to null -- which means we and any contained sanitizers can't handle this field\r\n                    result = null;\r\n                    for (var lp = 0; lp < _sanitizers[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                        if (_sanitizers[lp][_DYN_HANDLE_FIELD /* @min:%2ehandleField */](path, name)) {\r\n                            result = {\r\n                                canHandle: true,\r\n                                handler: _sanitizers[lp],\r\n                                fieldHandler: null\r\n                            };\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (!fieldLookup) {\r\n                    fieldLookup = _sanitizerMap[path] = {};\r\n                }\r\n                fieldLookup[name] = result;\r\n            }\r\n            return result;\r\n        }\r\n        _self.clearCache = function () {\r\n            _sanitizerMap = {};\r\n        };\r\n        _self.addSanitizer = function (newSanitizer) {\r\n            if (newSanitizer) {\r\n                if (!arrIncludes(_sanitizers, newSanitizer)) {\r\n                    _sanitizers.push(newSanitizer);\r\n                }\r\n                // Invalidate any previously mapped fields\r\n                _sanitizerMap = {};\r\n            }\r\n        };\r\n        _self.addFieldSanitizer = function (fieldSanitizer) {\r\n            if (fieldSanitizer) {\r\n                if (!arrIncludes(_fieldSanitizers, fieldSanitizer)) {\r\n                    _fieldSanitizers.push(fieldSanitizer);\r\n                }\r\n                // Invalidate any previously mapped fields\r\n                _sanitizerMap = {};\r\n            }\r\n        };\r\n        _self[_DYN_RM_SANITIZER /* @min:%2ermSanitizer */] = function (theSanitizer) {\r\n            if (theSanitizer) {\r\n                var idx = arrIndexOf(_sanitizers, theSanitizer);\r\n                if (idx !== -1) {\r\n                    _sanitizers.splice(idx, 1);\r\n                    // Invalidate any previously mapped fields\r\n                    _sanitizerMap = {};\r\n                }\r\n                // Try and remove the sanitizer from any chained sanitizer as well\r\n                arrForEach(_sanitizers, function (sanitizer) {\r\n                    sanitizer && sanitizer[_DYN_RM_SANITIZER /* @min:%2ermSanitizer */] && sanitizer[_DYN_RM_SANITIZER /* @min:%2ermSanitizer */](theSanitizer);\r\n                });\r\n            }\r\n        };\r\n        _self[_DYN_RM_FIELD_SANITIZER /* @min:%2ermFieldSanitizer */] = function (theFieldSanitizer) {\r\n            if (theFieldSanitizer) {\r\n                var idx = arrIndexOf(_fieldSanitizers, theFieldSanitizer);\r\n                if (idx !== -1) {\r\n                    _fieldSanitizers.splice(idx, 1);\r\n                    // Invalidate any previously mapped fields\r\n                    _sanitizerMap = {};\r\n                }\r\n                // Try and remove the field sanitizer from any chained sanitizer as well\r\n                arrForEach(_sanitizers, function (sanitizer) {\r\n                    sanitizer && sanitizer[_DYN_RM_FIELD_SANITIZER /* @min:%2ermFieldSanitizer */] && sanitizer[_DYN_RM_FIELD_SANITIZER /* @min:%2ermFieldSanitizer */](theFieldSanitizer);\r\n                });\r\n            }\r\n        };\r\n        _self.isEmpty = function () {\r\n            return (getLength(_sanitizers) + getLength(_fieldSanitizers)) === 0;\r\n        };\r\n        _self[_DYN_HANDLE_FIELD /* @min:%2ehandleField */] = function (path, name) {\r\n            var mapValue = _getFieldSanitizer(path, name);\r\n            return mapValue ? mapValue[_DYN_CAN_HANDLE /* @min:%2ecanHandle */] : false;\r\n        };\r\n        _self[_DYN_VALUE /* @min:%2evalue */] = function (path, name, value, stringifyObjects) {\r\n            var mapValue = _getFieldSanitizer(path, name);\r\n            if (mapValue && mapValue[_DYN_CAN_HANDLE /* @min:%2ecanHandle */]) {\r\n                if (!mapValue || !mapValue[_DYN_CAN_HANDLE /* @min:%2ecanHandle */]) {\r\n                    return null;\r\n                }\r\n                if (mapValue.handler) {\r\n                    // This value sanitizer can't handle this field so pass it only the next one\r\n                    return mapValue.handler[_DYN_VALUE /* @min:%2evalue */](path, name, value, stringifyObjects);\r\n                }\r\n                // Check that property is valid\r\n                if (!isString(name) || isNullOrUndefined(value) || value === STR_EMPTY) {\r\n                    return null;\r\n                }\r\n                var property = null;\r\n                var fieldType = getFieldValueType(value);\r\n                if ((fieldType & 8192 /* FieldValueSanitizerType.EventProperty */) === 8192 /* FieldValueSanitizerType.EventProperty */) {\r\n                    var subType = fieldType & ~8192 /* FieldValueSanitizerType.EventProperty */;\r\n                    property = value;\r\n                    if (!isValueAssigned(property[_DYN_VALUE /* @min:%2evalue */]) ||\r\n                        (subType !== 1 /* FieldValueSanitizerType.String */ &&\r\n                            subType !== 2 /* FieldValueSanitizerType.Number */ &&\r\n                            subType !== 3 /* FieldValueSanitizerType.Boolean */ &&\r\n                            (subType & 4096 /* FieldValueSanitizerType.Array */) !== 4096 /* FieldValueSanitizerType.Array */)) {\r\n                        // Not a supported IEventProperty type to be able to sanitize\r\n                        return null;\r\n                    }\r\n                }\r\n                else if (fieldType === 1 /* FieldValueSanitizerType.String */ ||\r\n                    fieldType === 2 /* FieldValueSanitizerType.Number */ ||\r\n                    fieldType === 3 /* FieldValueSanitizerType.Boolean */ ||\r\n                    (fieldType & 4096 /* FieldValueSanitizerType.Array */) === 4096 /* FieldValueSanitizerType.Array */) {\r\n                    // If the property isn't IEventProperty (and is either string, number, boolean or array), convert it into one.\r\n                    property = _convertToProperty(path, name, value);\r\n                }\r\n                else if (fieldType === 4 /* FieldValueSanitizerType.Object */) {\r\n                    property = _convertToProperty(path, name, !!stringifyObjects ? JSON.stringify(value) : value);\r\n                }\r\n                if (property) {\r\n                    return _handleProperty(mapValue, path, name, fieldType, property, stringifyObjects);\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        _self.property = function (path, name, property, stringifyObjects) {\r\n            var mapValue = _getFieldSanitizer(path, name);\r\n            if (!mapValue || !mapValue[_DYN_CAN_HANDLE /* @min:%2ecanHandle */]) {\r\n                return null;\r\n            }\r\n            // Check that property is valid\r\n            if (!isString(name) || isNullOrUndefined(property) || !isValueAssigned(property[_DYN_VALUE /* @min:%2evalue */])) {\r\n                return null;\r\n            }\r\n            var fieldType = getFieldValueType(property[_DYN_VALUE /* @min:%2evalue */]);\r\n            if (fieldType === 0 /* FieldValueSanitizerType.NotSet */) {\r\n                // Not a supported field that we can sanitize or serialize\r\n                return null;\r\n            }\r\n            return _handleProperty(mapValue, path, name, fieldType, property, stringifyObjects);\r\n        };\r\n        function _handleProperty(mapValue, path, name, fieldType, property, stringifyObjects) {\r\n            if (mapValue.handler) {\r\n                // This value sanitizer can't handle this field so pass it only the next one\r\n                return mapValue.handler.property(path, name, property, stringifyObjects);\r\n            }\r\n            // If either pii or cc is set convert value to string (since only string pii/cc is allowed).\r\n            // If the value is a complex type like an array that can't be converted to string we will drop\r\n            // the property.\r\n            if (!isNullOrUndefined(property[_DYN_KIND /* @min:%2ekind */])) {\r\n                if ((fieldType & 4096 /* FieldValueSanitizerType.Array */) === 4096 /* FieldValueSanitizerType.Array */ || !isValueKind(property[_DYN_KIND /* @min:%2ekind */])) {\r\n                    return null;\r\n                }\r\n                // Convert the value to a string and assign back to the original value\r\n                property[_DYN_VALUE /* @min:%2evalue */] = property[_DYN_VALUE /* @min:%2evalue */].toString();\r\n            }\r\n            return _callFieldSanitizer(mapValue.fieldHandler, path, name, fieldType, property);\r\n        }\r\n        function _convertToProperty(path, name, value) {\r\n            if (isValueAssigned(value)) {\r\n                return { value: value };\r\n            }\r\n            return null;\r\n        }\r\n        function _callFieldSanitizer(fieldProvider, path, name, theType, property) {\r\n            if (property && fieldProvider) {\r\n                var sanitizer = fieldProvider.getSanitizer(path, name, theType, property[_DYN_KIND /* @min:%2ekind */], property.propertyType);\r\n                if (sanitizer) {\r\n                    // This is where we the field will call the handler to \"scrub\" the value. This the primary hook for the ClientHashing Plugin to\r\n                    // be able to apply the hashFunc() / Sha256 conversion of the properties value\r\n                    if (theType === 4 /* FieldValueSanitizerType.Object */) {\r\n                        // Special case of an embedded object (ext.metadata, data.properties)\r\n                        var newValue_1 = {};\r\n                        var propValue = property[_DYN_VALUE /* @min:%2evalue */];\r\n                        objForEachKey(propValue, function (propKey, theValue) {\r\n                            var newPath = path + \".\" + name;\r\n                            if (isValueAssigned(theValue)) {\r\n                                var newProp = _convertToProperty(newPath, propKey, theValue);\r\n                                newProp = _callFieldSanitizer(fieldProvider, newPath, propKey, getFieldValueType(theValue), newProp);\r\n                                if (newProp) {\r\n                                    newValue_1[propKey] = newProp[_DYN_VALUE /* @min:%2evalue */];\r\n                                }\r\n                            }\r\n                        });\r\n                        property[_DYN_VALUE /* @min:%2evalue */] = newValue_1;\r\n                    }\r\n                    else {\r\n                        var details = {\r\n                            path: path,\r\n                            name: name,\r\n                            type: theType,\r\n                            prop: property,\r\n                            sanitizer: _self\r\n                        };\r\n                        property = sanitizer.call(_self, details);\r\n                    }\r\n                }\r\n            }\r\n            return property;\r\n        }\r\n    }\r\n    ValueSanitizer.getFieldType = getFieldValueType;\r\n    return ValueSanitizer;\r\n}());\r\nexport { ValueSanitizer };\r\n//# sourceMappingURL=ValueSanitizer.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\"use strict\";\r\nexport var MinChannelPriorty = 100;\r\n//# sourceMappingURL=IChannelControls.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n//  @skip-file-minify\r\nimport { createEnumStyle } from \"../JavaScriptSDK.Enums/EnumHelperFuncs\";\r\nexport var LoggingSeverity = createEnumStyle({\r\n    DISABLED: 0 /* eLoggingSeverity.DISABLED */,\r\n    CRITICAL: 1 /* eLoggingSeverity.CRITICAL */,\r\n    WARNING: 2 /* eLoggingSeverity.WARNING */,\r\n    DEBUG: 3 /* eLoggingSeverity.DEBUG */\r\n});\r\n//# sourceMappingURL=LoggingEnums.js.map","/*\n * 1DS JS SDK Core, 4.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n\r\n// Licensed under the MIT License.\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Generally you should only put values that are used more than 2 times and then only if not already exposed as a constant (such as SdkCoreNames)\r\n// as when using \"short\" named values from here they will be will be minified smaller than the SdkCoreNames[eSdkCoreNames.xxxx] value.\r\nexport var STR_EMPTY = \"\";\r\nexport var STR_DEFAULT_ENDPOINT_URL = \"https://browser.events.data.microsoft.com/OneCollector/1.0/\";\r\nexport var STR_VERSION = \"version\";\r\nexport var STR_PROPERTIES = \"properties\";\r\n//# sourceMappingURL=InternalConstants.js.map","/*\n * 1DS JS SDK Core, 4.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\nvar _a;\r\n/**\r\n* Utils.ts\r\n* @author  Abhilash Panwar (abpanwar) Hector Hernandez (hectorh)\r\n* @copyright Microsoft 2018\r\n* File containing utility functions.\r\n*/\r\nimport { arrForEach, getGlobalInst, getNavigator, hasDocument, hasWindow, isArray, isBoolean, isNullOrUndefined, isNumber, isObject, isReactNative, isString, isUndefined, newGuid, objForEachKey, perfNow } from \"@microsoft/applicationinsights-core-js\";\r\nimport { ObjProto, strShimObject } from \"@microsoft/applicationinsights-shims\";\r\nimport { strIndexOf, strLeft } from \"@nevware21/ts-utils\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nimport { _DYN_INDEX_OF, _DYN_KIND, _DYN_LENGTH, _DYN_PROCESS_TELEMETRY_ST0, _DYN_TIMINGS, _DYN_VALUE } from \"./__DynamicConstants\";\r\nexport var Version = '4.3.3';\r\nexport var FullVersionString = \"1DS-Web-JS-\" + Version;\r\nvar ObjHasOwnProperty = ObjProto.hasOwnProperty;\r\n// Defining here so we don't need to take (import) the ApplicationInsights Common module\r\nvar strDisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nvar strWithCredentials = \"withCredentials\";\r\nvar strTimeout = \"timeout\";\r\n// If value is array just get the type for the first element\r\nvar _fieldTypeEventPropMap = (_a = {},\r\n    _a[0 /* FieldValueSanitizerType.NotSet */] = 0 /* eEventPropertyType.Unspecified */,\r\n    _a[2 /* FieldValueSanitizerType.Number */] = 6 /* eEventPropertyType.Double */,\r\n    _a[1 /* FieldValueSanitizerType.String */] = 1 /* eEventPropertyType.String */,\r\n    _a[3 /* FieldValueSanitizerType.Boolean */] = 7 /* eEventPropertyType.Bool */,\r\n    _a[4096 /* FieldValueSanitizerType.Array */ | 2 /* FieldValueSanitizerType.Number */] = 6 /* eEventPropertyType.Double */,\r\n    _a[4096 /* FieldValueSanitizerType.Array */ | 1 /* FieldValueSanitizerType.String */] = 1 /* eEventPropertyType.String */,\r\n    _a[4096 /* FieldValueSanitizerType.Array */ | 3 /* FieldValueSanitizerType.Boolean */] = 7 /* eEventPropertyType.Bool */,\r\n    _a);\r\n/**\r\n * @ignore\r\n */\r\n// let _uaDisallowsSameSiteNone = null;\r\nvar uInt8ArraySupported = null;\r\n// var _areCookiesAvailable: boolean | undefined;\r\n/**\r\n * Checks if document object is available\r\n */\r\nexport var isDocumentObjectAvailable = hasDocument();\r\n/**\r\n * Checks if window object is available\r\n */\r\nexport var isWindowObjectAvailable = hasWindow();\r\n/**\r\n * Checks if value is assigned to the given param.\r\n * @param value - The token from which the tenant id is to be extracted.\r\n * @returns True/false denoting if value is assigned to the param.\r\n */\r\nexport function isValueAssigned(value) {\r\n    /// <summary> takes a value and checks for undefined, null and empty string </summary>\r\n    /// <param type=\"any\"> value to be tested </param>\r\n    /// <returns> true if value is null undefined or emptyString </returns>\r\n    return !(value === STR_EMPTY || isNullOrUndefined(value));\r\n}\r\n/**\r\n * Gets the tenant id from the tenant token.\r\n * @param apiKey - The token from which the tenant id is to be extracted.\r\n * @returns The tenant id.\r\n */\r\nexport function getTenantId(apiKey) {\r\n    if (apiKey) {\r\n        var indexTenantId = strIndexOf(apiKey, \"-\");\r\n        if (indexTenantId > -1) {\r\n            return strLeft(apiKey, indexTenantId);\r\n        }\r\n    }\r\n    return STR_EMPTY;\r\n}\r\n/**\r\n * Checks if Uint8Array are available in the current environment. Safari and Firefox along with\r\n * ReactNative are known to not support Uint8Array properly.\r\n * @returns True if available, false otherwise.\r\n */\r\nexport function isUint8ArrayAvailable() {\r\n    if (uInt8ArraySupported === null) {\r\n        uInt8ArraySupported = !isUndefined(Uint8Array) && !isSafariOrFirefox() && !isReactNative();\r\n    }\r\n    return uInt8ArraySupported;\r\n}\r\n/**\r\n * Checks if the value is a valid EventLatency.\r\n * @param value - The value that needs to be checked.\r\n * @returns True if the value is in AWTEventLatency, false otherwise.\r\n */\r\nexport function isLatency(value) {\r\n    if (value && isNumber(value) && value >= 1 /* EventLatencyValue.Normal */ && value <= 4 /* EventLatencyValue.Immediate */) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Sanitizes the Property. It checks the that the property name and value are valid. It also\r\n * checks/populates the correct type and pii of the property value.\r\n * @param name - property name                          - The property name.\r\n * @param property - The property value or an IEventProperty containing value,\r\n * type ,pii and customer content.\r\n * @returns IEventProperty containing valid name, value, pii and type or null if invalid.\r\n */\r\nexport function sanitizeProperty(name, property, stringifyObjects) {\r\n    // Check that property is valid\r\n    if ((!property && !isValueAssigned(property)) || typeof name !== \"string\") {\r\n        return null;\r\n    }\r\n    // Perf optimization -- only need to get the type once not multiple times\r\n    var propType = typeof property;\r\n    // If the property isn't IEventProperty (and is either string, number, boolean or array), convert it into one.\r\n    if (propType === \"string\" || propType === \"number\" || propType === \"boolean\" || isArray(property)) {\r\n        property = { value: property };\r\n    }\r\n    else if (propType === \"object\" && !ObjHasOwnProperty.call(property, \"value\")) {\r\n        property = { value: stringifyObjects ? JSON.stringify(property) : property };\r\n    }\r\n    else if (isNullOrUndefined(property[_DYN_VALUE /* @min:%2evalue */])\r\n        || property[_DYN_VALUE /* @min:%2evalue */] === STR_EMPTY || (!isString(property[_DYN_VALUE /* @min:%2evalue */])\r\n        && !isNumber(property[_DYN_VALUE /* @min:%2evalue */]) && !isBoolean(property[_DYN_VALUE /* @min:%2evalue */])\r\n        && !isArray(property[_DYN_VALUE /* @min:%2evalue */]))) {\r\n        // Since property is IEventProperty, we need to validate its value\r\n        return null;\r\n    }\r\n    // We need to check that if the property value is an array, it is valid\r\n    if (isArray(property[_DYN_VALUE /* @min:%2evalue */]) &&\r\n        !isArrayValid(property[_DYN_VALUE /* @min:%2evalue */])) {\r\n        return null;\r\n    }\r\n    // If either pii or cc is set convert value to string (since only string pii/cc is allowed).\r\n    // If the value is a complex type like an array that can't be converted to string we will drop\r\n    // the property.\r\n    if (!isNullOrUndefined(property[_DYN_KIND /* @min:%2ekind */])) {\r\n        if (isArray(property[_DYN_VALUE /* @min:%2evalue */]) || !isValueKind(property[_DYN_KIND /* @min:%2ekind */])) {\r\n            return null;\r\n        }\r\n        property[_DYN_VALUE /* @min:%2evalue */] = property[_DYN_VALUE /* @min:%2evalue */].toString();\r\n    }\r\n    return property;\r\n}\r\nexport function getCommonSchemaMetaData(value, kind, type) {\r\n    var encodedTypeValue = -1;\r\n    if (!isUndefined(value)) {\r\n        if (kind > 0) {\r\n            if (kind === 32 /* eValueKind.CustomerContent_GenericContent */) {\r\n                // encode customer content. Value can only be string. bit 13-16 are for cc\r\n                encodedTypeValue = (1 << 13);\r\n            }\r\n            else if (kind <= 13) {\r\n                // encode PII. Value can only be string. bits 5-12 are for Pii\r\n                encodedTypeValue = (kind << 5);\r\n            }\r\n        }\r\n        // isDataType checks that the \"type\" is a number so we don't need to check for undefined\r\n        if (isDataType(type)) {\r\n            // Data Type is provided and valid, so use that\r\n            if (encodedTypeValue === -1) {\r\n                // Don't return -1\r\n                encodedTypeValue = 0;\r\n            }\r\n            encodedTypeValue |= type;\r\n        }\r\n        else {\r\n            var propType = _fieldTypeEventPropMap[getFieldValueType(value)] || -1;\r\n            if (encodedTypeValue !== -1 && propType !== -1) {\r\n                // pii exists so we must return correct type\r\n                encodedTypeValue |= propType;\r\n            }\r\n            else if (propType === 6 /* eEventPropertyType.Double */) {\r\n                encodedTypeValue = propType;\r\n            }\r\n        }\r\n    }\r\n    return encodedTypeValue;\r\n}\r\n/**\r\n * Helper to get and decode the cookie value using decodeURIComponent, this is for historical\r\n * backward compatibility where the document.cookie value was decoded before parsing.\r\n * @param cookieMgr - The cookie manager to use\r\n * @param name - The name of the cookie to get\r\n * @param decode - A flag to indicate whether the cookie value should be decoded\r\n * @returns The decoded cookie value (if available) otherwise an empty string.\r\n */\r\nexport function getCookieValue(cookieMgr, name, decode) {\r\n    if (decode === void 0) { decode = true; }\r\n    var cookieValue;\r\n    if (cookieMgr) {\r\n        cookieValue = cookieMgr.get(name);\r\n        if (decode && cookieValue && decodeURIComponent) {\r\n            cookieValue = decodeURIComponent(cookieValue);\r\n        }\r\n    }\r\n    return cookieValue || STR_EMPTY;\r\n}\r\n/**\r\n * Create a new guid.\r\n * @param style - The style of guid to generated, defaults to Digits\r\n * Digits (Default) : 32 digits separated by hyphens: 00000000-0000-0000-0000-000000000000\r\n * Braces - 32 digits separated by hyphens, enclosed in braces: {00000000-0000-0000-0000-000000000000}\r\n * Parentheses - 32 digits separated by hyphens, enclosed in parentheses: (00000000-0000-0000-0000-000000000000)\r\n * Numeric - 32 digits: 00000000000000000000000000000000\r\n * @returns The formatted guid.\r\n */\r\nexport function createGuid(style) {\r\n    if (style === void 0) { style = \"D\" /* GuidStyle.Digits */; }\r\n    var theGuid = newGuid();\r\n    if (style === \"B\" /* GuidStyle.Braces */) {\r\n        theGuid = \"{\" + theGuid + \"}\";\r\n    }\r\n    else if (style === \"P\" /* GuidStyle.Parentheses */) {\r\n        theGuid = \"(\" + theGuid + \")\";\r\n    }\r\n    else if (style === \"N\" /* GuidStyle.Numeric */) {\r\n        theGuid = theGuid.replace(/-/g, STR_EMPTY);\r\n    }\r\n    return theGuid;\r\n}\r\n/**\r\n * Pass in the objects to merge as arguments.\r\n * @param obj1 - object to merge.  Set this argument to 'true' for a deep extend.\r\n * @param obj2 - object to merge.\r\n * @param obj3 - object to merge.\r\n * @param obj4 - object to merge.\r\n * @param obj5 - object to merge.\r\n * @returns The extended object.\r\n */\r\nexport function extend(obj, obj2, obj3, obj4, obj5) {\r\n    // Variables\r\n    var extended = {};\r\n    var deep = false;\r\n    var i = 0;\r\n    var length = arguments[_DYN_LENGTH /* @min:%2elength */];\r\n    var theArgs = arguments;\r\n    // Check if a deep merge\r\n    if (isBoolean(theArgs[0])) {\r\n        deep = theArgs[0];\r\n        i++;\r\n    }\r\n    // Loop through each object and conduct a merge\r\n    for (; i < length; i++) {\r\n        var obj = theArgs[i];\r\n        objForEachKey(obj, function (prop, value) {\r\n            // If deep merge and property is an object, merge properties\r\n            if (deep && value && isObject(value)) {\r\n                if (isArray(value)) {\r\n                    extended[prop] = extended[prop] || [];\r\n                    arrForEach(value, function (arrayValue, arrayIndex) {\r\n                        if (arrayValue && isObject(arrayValue)) {\r\n                            extended[prop][arrayIndex] = extend(true, extended[prop][arrayIndex], arrayValue);\r\n                        }\r\n                        else {\r\n                            extended[prop][arrayIndex] = arrayValue;\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    extended[prop] = extend(true, extended[prop], value);\r\n                }\r\n            }\r\n            else {\r\n                extended[prop] = value;\r\n            }\r\n        });\r\n    }\r\n    return extended;\r\n}\r\nexport var getTime = perfNow;\r\nexport function isValueKind(value) {\r\n    // Always assume that it's a number (no type checking) for performance as this is used during the JSON serialization\r\n    if (value === 0 /* eValueKind.NotSet */ || ((value > 0 /* eValueKind.NotSet */ && value <= 13 /* eValueKind.Pii_IPV4AddressLegacy */) || value === 32 /* eValueKind.CustomerContent_GenericContent */)) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nfunction isDataType(value) {\r\n    // Remark: 0 returns false, but it doesn't affect encoding anyways\r\n    // Always assume that it's a number (no type checking) for performance as this is used during the JSON serialization\r\n    if (value >= 0 && value <= 9) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nfunction isSafariOrFirefox() {\r\n    var nav = getNavigator();\r\n    // If non-browser navigator will be undefined\r\n    if (!isUndefined(nav) && nav.userAgent) {\r\n        var ua = nav.userAgent.toLowerCase();\r\n        if ((ua[_DYN_INDEX_OF /* @min:%2eindexOf */](\"safari\") >= 0 || ua[_DYN_INDEX_OF /* @min:%2eindexOf */](\"firefox\") >= 0) && ua[_DYN_INDEX_OF /* @min:%2eindexOf */](\"chrome\") < 0) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function isArrayValid(value) {\r\n    return value[_DYN_LENGTH /* @min:%2elength */] > 0;\r\n}\r\nexport function setProcessTelemetryTimings(event, identifier) {\r\n    var evt = event;\r\n    evt[_DYN_TIMINGS /* @min:%2etimings */] = evt[_DYN_TIMINGS /* @min:%2etimings */] || {};\r\n    evt[_DYN_TIMINGS /* @min:%2etimings */][_DYN_PROCESS_TELEMETRY_ST0 /* @min:%2eprocessTelemetryStart */] = evt[_DYN_TIMINGS /* @min:%2etimings */][_DYN_PROCESS_TELEMETRY_ST0 /* @min:%2eprocessTelemetryStart */] || {};\r\n    evt[_DYN_TIMINGS /* @min:%2etimings */][_DYN_PROCESS_TELEMETRY_ST0 /* @min:%2eprocessTelemetryStart */][identifier] = getTime();\r\n}\r\n/**\r\n * Returns a bitwise value for the FieldValueSanitizerType enum representing the decoded type of the passed value\r\n * @param value The value to determine the type\r\n */\r\nexport function getFieldValueType(value) {\r\n    var theType = 0 /* FieldValueSanitizerType.NotSet */;\r\n    if (value !== null && value !== undefined) {\r\n        var objType = typeof value;\r\n        if (objType === \"string\") {\r\n            theType = 1 /* FieldValueSanitizerType.String */;\r\n        }\r\n        else if (objType === \"number\") {\r\n            theType = 2 /* FieldValueSanitizerType.Number */;\r\n        }\r\n        else if (objType === \"boolean\") {\r\n            theType = 3 /* FieldValueSanitizerType.Boolean */;\r\n        }\r\n        else if (objType === strShimObject) {\r\n            theType = 4 /* FieldValueSanitizerType.Object */;\r\n            if (isArray(value)) {\r\n                theType = 4096 /* FieldValueSanitizerType.Array */;\r\n                if (value[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    // Empty arrays are not supported and are considered to be the same as null\r\n                    theType |= getFieldValueType(value[0]);\r\n                }\r\n            }\r\n            else if (ObjHasOwnProperty.call(value, \"value\")) {\r\n                // Looks like an IEventProperty\r\n                theType = 8192 /* FieldValueSanitizerType.EventProperty */ | getFieldValueType(value[_DYN_VALUE /* @min:%2evalue */]);\r\n            }\r\n        }\r\n    }\r\n    return theType;\r\n}\r\n/**\r\n * Helper to identify whether we are running in a chromium based browser environment\r\n */\r\nexport function isChromium() {\r\n    return !!getGlobalInst(\"chrome\");\r\n}\r\n/**\r\n * Create and open an XMLHttpRequest object\r\n * @param method - The request method\r\n * @param urlString - The url\r\n * @param withCredentials - Option flag indicating that credentials should be sent\r\n * @param disabled - Optional flag indicating that the XHR object should be marked as disabled and not tracked (default is false)\r\n * @param isSync - Optional flag indicating if the instance should be a synchronous request (defaults to false)\r\n * @param timeout - Optional value identifying the timeout value that should be assigned to the XHR request\r\n * @returns A new opened XHR request\r\n */\r\nexport function openXhr(method, urlString, withCredentials, disabled, isSync, timeout) {\r\n    if (disabled === void 0) { disabled = false; }\r\n    if (isSync === void 0) { isSync = false; }\r\n    function _wrapSetXhrProp(xhr, prop, value) {\r\n        try {\r\n            xhr[prop] = value;\r\n        }\r\n        catch (e) {\r\n            // - Wrapping as depending on the environment setting the property may fail (non-terminally)\r\n        }\r\n    }\r\n    var xhr = new XMLHttpRequest();\r\n    if (disabled) {\r\n        // Tag the instance so it's not tracked (trackDependency)\r\n        // If the environment has locked down the XMLHttpRequest (preventExtensions and/or freeze), this would\r\n        // cause the request to fail and we no telemetry would be sent\r\n        _wrapSetXhrProp(xhr, strDisabledPropertyName, disabled);\r\n    }\r\n    if (withCredentials) {\r\n        // Some libraries require that the withCredentials flag is set \"before\" open and\r\n        // - Wrapping as IE 10 has started throwing when setting before open\r\n        _wrapSetXhrProp(xhr, strWithCredentials, withCredentials);\r\n    }\r\n    xhr.open(method, urlString, !isSync);\r\n    if (withCredentials) {\r\n        // withCredentials should be set AFTER open (https://xhr.spec.whatwg.org/#the-withcredentials-attribute)\r\n        // And older firefox instances from 11+ will throw for sync events (current versions don't) which happens during unload processing\r\n        _wrapSetXhrProp(xhr, strWithCredentials, withCredentials);\r\n    }\r\n    // Only set the timeout for asynchronous requests as\r\n    // \"Timeout shouldn't be used for synchronous XMLHttpRequests requests used in a document environment or it will throw an InvalidAccessError exception.\"\"\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/timeout\r\n    if (!isSync && timeout) {\r\n        _wrapSetXhrProp(xhr, strTimeout, timeout);\r\n    }\r\n    return xhr;\r\n}\r\n/**\r\n * Check to see if the value is > 0\r\n * @param value - The value to check\r\n * @returns true if > 0 otherwise false\r\n */\r\nexport function isGreaterThanZero(value) {\r\n    return value > 0;\r\n}\r\n//# sourceMappingURL=Utils.js.map","/*\n * 1DS JS SDK Core, 4.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n\r\n// Licensed under the MIT License.\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_INITIALIZE = \"initialize\"; // Count: 4\r\nexport var _DYN_LOGGER = \"logger\"; // Count: 4\r\nexport var _DYN_INDEX_OF = \"indexOf\"; // Count: 4\r\nexport var _DYN_TIMINGS = \"timings\"; // Count: 4\r\nexport var _DYN_POLL_INTERNAL_LOGS = \"pollInternalLogs\"; // Count: 4\r\nexport var _DYN_VALUE = \"value\"; // Count: 20\r\nexport var _DYN_KIND = \"kind\"; // Count: 5\r\nexport var _DYN_LENGTH = \"length\"; // Count: 7\r\nexport var _DYN_PROCESS_TELEMETRY_ST0 = \"processTelemetryStart\"; // Count: 3\r\nexport var _DYN_HANDLE_FIELD = \"handleField\"; // Count: 3\r\nexport var _DYN_RM_SANITIZER = \"rmSanitizer\"; // Count: 3\r\nexport var _DYN_RM_FIELD_SANITIZER = \"rmFieldSanitizer\"; // Count: 3\r\nexport var _DYN_CAN_HANDLE = \"canHandle\"; // Count: 7\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * 1DS JS SDK POST plugin, 4.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n * Real Time profile (default profile). RealTime Latency events are sent every 1 sec and\r\n * Normal Latency events are sent every 2 sec.\r\n */\r\nexport var RT_PROFILE = \"REAL_TIME\";\r\n/**\r\n * Near Real Time profile. RealTime Latency events are sent every 3 sec and\r\n * Normal Latency events are sent every 6 sec.\r\n */\r\nexport var NRT_PROFILE = \"NEAR_REAL_TIME\";\r\n/**\r\n * Best Effort. RealTime Latency events are sent every 9 sec and\r\n * Normal Latency events are sent every 18 sec.\r\n */\r\nexport var BE_PROFILE = \"BEST_EFFORT\";\r\n//# sourceMappingURL=DataModels.js.map","/*\n * 1DS JS SDK POST plugin, 4.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n\r\n// Licensed under the MIT License.\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Generally you should only put values that are used more than 2 times and then only if not already exposed as a constant (such as SdkCoreNames)\r\n// as when using \"short\" named values from here they will be will be minified smaller than the SdkCoreNames[eSdkCoreNames.xxxx] value.\r\nexport var STR_EMPTY = \"\";\r\nexport var STR_POST_METHOD = \"POST\";\r\nexport var STR_DISABLED_PROPERTY_NAME = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nexport var STR_DROPPED = \"drop\";\r\nexport var STR_SENDING = \"send\";\r\nexport var STR_REQUEUE = \"requeue\";\r\nexport var STR_RESPONSE_FAIL = \"rspFail\";\r\nexport var STR_OTHER = \"oth\";\r\nexport var DEFAULT_CACHE_CONTROL = \"no-cache, no-store\";\r\nexport var DEFAULT_CONTENT_TYPE = \"application/x-json-stream\";\r\nexport var STR_CACHE_CONTROL = \"cache-control\";\r\nexport var STR_CONTENT_TYPE_HEADER = \"content-type\";\r\nexport var STR_KILL_TOKENS_HEADER = \"kill-tokens\";\r\nexport var STR_KILL_DURATION_HEADER = \"kill-duration\";\r\nexport var STR_KILL_DURATION_SECONDS_HEADER = \"kill-duration-seconds\";\r\nexport var STR_TIME_DELTA_HEADER = \"time-delta-millis\";\r\nexport var STR_CLIENT_VERSION = \"client-version\";\r\nexport var STR_CLIENT_ID = \"client-id\";\r\nexport var STR_TIME_DELTA_TO_APPLY = \"time-delta-to-apply-millis\";\r\nexport var STR_UPLOAD_TIME = \"upload-time\";\r\nexport var STR_API_KEY = \"apikey\";\r\nexport var STR_MSA_DEVICE_TICKET = \"AuthMsaDeviceTicket\";\r\nexport var STR_AUTH_WEB_TOKEN = \"WebAuthToken\";\r\nexport var STR_AUTH_XTOKEN = \"AuthXToken\";\r\nexport var STR_SDK_VERSION = \"sdk-version\";\r\nexport var STR_NO_RESPONSE_BODY = \"NoResponseBody\";\r\nexport var STR_MSFPC = \"msfpc\";\r\nexport var STR_TRACE = \"trace\";\r\nexport var STR_USER = \"user\";\r\n//# sourceMappingURL=InternalConstants.js.map","/*\n * 1DS JS SDK POST plugin, 4.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n\r\n// Licensed under the MIT License.\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_ALLOW_REQUEST_SENDIN0 = \"allowRequestSending\"; // Count: 3\r\nexport var _DYN_FIRST_REQUEST_SENT = \"firstRequestSent\"; // Count: 2\r\nexport var _DYN_SHOULD_ADD_CLOCK_SKE1 = \"shouldAddClockSkewHeaders\"; // Count: 2\r\nexport var _DYN_GET_CLOCK_SKEW_HEADE2 = \"getClockSkewHeaderValue\"; // Count: 2\r\nexport var _DYN_SET_CLOCK_SKEW = \"setClockSkew\"; // Count: 3\r\nexport var _DYN_LENGTH = \"length\"; // Count: 38\r\nexport var _DYN_CONCAT = \"concat\"; // Count: 7\r\nexport var _DYN_I_KEY = \"iKey\"; // Count: 11\r\nexport var _DYN_COUNT = \"count\"; // Count: 19\r\nexport var _DYN_EVENTS = \"events\"; // Count: 8\r\nexport var _DYN_PUSH = \"push\"; // Count: 15\r\nexport var _DYN_SPLIT = \"split\"; // Count: 6\r\nexport var _DYN_SPLICE = \"splice\"; // Count: 4\r\nexport var _DYN_TO_LOWER_CASE = \"toLowerCase\"; // Count: 3\r\nexport var _DYN_HDRS = \"hdrs\"; // Count: 7\r\nexport var _DYN_USE_HDRS = \"useHdrs\"; // Count: 5\r\nexport var _DYN_INITIALIZE = \"initialize\"; // Count: 5\r\nexport var _DYN_SET_TIMEOUT_OVERRIDE = \"setTimeoutOverride\"; // Count: 3\r\nexport var _DYN_CLEAR_TIMEOUT_OVERRI3 = \"clearTimeoutOverride\"; // Count: 3\r\nexport var _DYN_PAYLOAD_PREPROCESSOR = \"payloadPreprocessor\"; // Count: 2\r\nexport var _DYN_OVERRIDE_ENDPOINT_UR4 = \"overrideEndpointUrl\"; // Count: 3\r\nexport var _DYN_AVOID_OPTIONS = \"avoidOptions\"; // Count: 3\r\nexport var _DYN_DISABLE_EVENT_TIMING5 = \"disableEventTimings\"; // Count: 2\r\nexport var _DYN_STRINGIFY_OBJECTS = \"stringifyObjects\"; // Count: 2\r\nexport var _DYN_ENABLE_COMPOUND_KEY = \"enableCompoundKey\"; // Count: 4\r\nexport var _DYN_DISABLE_XHR_SYNC = \"disableXhrSync\"; // Count: 6\r\nexport var _DYN_DISABLE_FETCH_KEEP_A6 = \"disableFetchKeepAlive\"; // Count: 7\r\nexport var _DYN_ADD_NO_RESPONSE = \"addNoResponse\"; // Count: 3\r\nexport var _DYN_EXCLUDE_CS_META_DATA = \"excludeCsMetaData\"; // Count: 2\r\nexport var _DYN_USE_SEND_BEACON = \"useSendBeacon\"; // Count: 3\r\nexport var _DYN_FETCH_CREDENTIALS = \"fetchCredentials\"; // Count: 4\r\nexport var _DYN_ALWAYS_USE_XHR_OVERR7 = \"alwaysUseXhrOverride\"; // Count: 3\r\nexport var _DYN_UNLOAD_TRANSPORTS = \"unloadTransports\"; // Count: 2\r\nexport var _DYN_SERIALIZE_OFFLINE_EV8 = \"serializeOfflineEvt\"; // Count: 2\r\nexport var _DYN_GET_OFFLINE_REQUEST_9 = \"getOfflineRequestDetails\"; // Count: 2\r\nexport var _DYN_CREATE_PAYLOAD = \"createPayload\"; // Count: 4\r\nexport var _DYN_CREATE_ONE_DSPAYLOAD = \"createOneDSPayload\"; // Count: 4\r\nexport var _DYN_PAYLOAD_BLOB = \"payloadBlob\"; // Count: 3\r\nexport var _DYN_HEADERS = \"headers\"; // Count: 12\r\nexport var _DYN__THE_PAYLOAD = \"_thePayload\"; // Count: 6\r\nexport var _DYN_URL_STRING = \"urlString\"; // Count: 5\r\nexport var _DYN_BATCHES = \"batches\"; // Count: 15\r\nexport var _DYN_SEND_TYPE = \"sendType\"; // Count: 13\r\nexport var _DYN_ADD_HEADER = \"addHeader\"; // Count: 3\r\nexport var _DYN_CAN_SEND_REQUEST = \"canSendRequest\"; // Count: 3\r\nexport var _DYN_SEND_QUEUED_REQUESTS = \"sendQueuedRequests\"; // Count: 5\r\nexport var _DYN_IS_COMPLETELY_IDLE = \"isCompletelyIdle\"; // Count: 2\r\nexport var _DYN_SET_UNLOADING = \"setUnloading\"; // Count: 3\r\nexport var _DYN_IS_TENANT_KILLED = \"isTenantKilled\"; // Count: 3\r\nexport var _DYN_RESUME = \"resume\"; // Count: 4\r\nexport var _DYN_SEND_SYNCHRONOUS_BAT10 = \"sendSynchronousBatch\"; // Count: 2\r\nexport var _DYN__TRANSPORT = \"_transport\"; // Count: 3\r\nexport var _DYN_GET_WPARAM = \"getWParam\"; // Count: 4\r\nexport var _DYN_IS_BEACON = \"isBeacon\"; // Count: 4\r\nexport var _DYN_TIMINGS = \"timings\"; // Count: 4\r\nexport var _DYN_IS_TEARDOWN = \"isTeardown\"; // Count: 3\r\nexport var _DYN_IS_SYNC = \"isSync\"; // Count: 4\r\nexport var _DYN_DATA = \"data\"; // Count: 7\r\nexport var _DYN_TIMEOUT = \"timeout\"; // Count: 4\r\nexport var _DYN__SEND_REASON = \"_sendReason\"; // Count: 4\r\nexport var _DYN_SET_KILL_SWITCH_TENA11 = \"setKillSwitchTenants\"; // Count: 2\r\nexport var _DYN__BACK_OFF_TRANSMISSI12 = \"_backOffTransmission\"; // Count: 2\r\nexport var _DYN_IDENTIFIER = \"identifier\"; // Count: 4\r\nexport var _DYN_DISABLE_OPTIMIZE_OBJ = \"disableOptimizeObj\"; // Count: 2\r\nexport var _DYN_IGNORE_MC1_MS0_COOKI13 = \"ignoreMc1Ms0CookieProcessing\"; // Count: 2\r\nexport var _DYN_EVENTS_LIMIT_IN_MEM = \"eventsLimitInMem\"; // Count: 2\r\nexport var _DYN_AUTO_FLUSH_EVENTS_LI14 = \"autoFlushEventsLimit\"; // Count: 2\r\nexport var _DYN_DISABLE_AUTO_BATCH_F15 = \"disableAutoBatchFlushLimit\"; // Count: 2\r\nexport var _DYN_OVERRIDE_INSTRUMENTA16 = \"overrideInstrumentationKey\"; // Count: 2\r\nexport var _DYN_DISABLE_TELEMETRY = \"disableTelemetry\"; // Count: 2\r\nexport var _DYN_BASE_DATA = \"baseData\"; // Count: 3\r\nexport var _DYN_SEND_ATTEMPT = \"sendAttempt\"; // Count: 4\r\nexport var _DYN_LATENCY = \"latency\"; // Count: 7\r\nexport var _DYN_SYNC = \"sync\"; // Count: 7\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * 1DS JS SDK POST plugin, 4.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* EventBatch.ts\r\n* @author Nev Wylie (newylie)\r\n* @copyright Microsoft 2020\r\n*/\r\nimport { isNullOrUndefined, isValueAssigned } from \"@microsoft/1ds-core-js\";\r\nimport { STR_EMPTY, STR_MSFPC } from \"./InternalConstants\";\r\nimport { _DYN_CONCAT, _DYN_COUNT, _DYN_EVENTS, _DYN_I_KEY, _DYN_LENGTH, _DYN_PUSH, _DYN_SPLICE, _DYN_SPLIT } from \"./__DynamicConstants\";\r\nfunction _getEventMsfpc(theEvent) {\r\n    var intWeb = ((theEvent.ext || {})[\"intweb\"]);\r\n    if (intWeb && isValueAssigned(intWeb[STR_MSFPC])) {\r\n        return intWeb[STR_MSFPC];\r\n    }\r\n    return null;\r\n}\r\nfunction _getMsfpc(theEvents) {\r\n    var msfpc = null;\r\n    for (var lp = 0; msfpc === null && lp < theEvents[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n        msfpc = _getEventMsfpc(theEvents[lp]);\r\n    }\r\n    return msfpc;\r\n}\r\n/**\r\n* This class defines a \"batch\" events related to a specific iKey, it is used by the PostChannel and HttpManager\r\n* to collect and transfer ownership of events without duplicating them in-memory. This reduces the previous\r\n* array duplication and shared ownership issues that occurred due to race conditions caused by the async nature\r\n* of sending requests.\r\n*/\r\nvar EventBatch = /** @class */ (function () {\r\n    /**\r\n     * Private constructor so that caller is forced to use the static create method.\r\n     * @param iKey - The iKey to associate with the events (not validated)\r\n     * @param addEvents - The optional collection of events to assign to this batch - defaults to an empty array.\r\n     */\r\n    function EventBatch(iKey, addEvents) {\r\n        var events = addEvents ? [][_DYN_CONCAT /* @min:%2econcat */](addEvents) : [];\r\n        var _self = this;\r\n        var _msfpc = _getMsfpc(events);\r\n        _self[_DYN_I_KEY /* @min:%2eiKey */] = function () {\r\n            return iKey;\r\n        };\r\n        _self.Msfpc = function () {\r\n            // return the cached value unless it's undefined -- used to avoid cpu\r\n            return _msfpc || STR_EMPTY;\r\n        };\r\n        _self[_DYN_COUNT /* @min:%2ecount */] = function () {\r\n            return events[_DYN_LENGTH /* @min:%2elength */];\r\n        };\r\n        _self[_DYN_EVENTS /* @min:%2eevents */] = function () {\r\n            return events;\r\n        };\r\n        _self.addEvent = function (theEvent) {\r\n            if (theEvent) {\r\n                events[_DYN_PUSH /* @min:%2epush */](theEvent);\r\n                if (!_msfpc) {\r\n                    // Not found so try and find one\r\n                    _msfpc = _getEventMsfpc(theEvent);\r\n                }\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n        _self[_DYN_SPLIT /* @min:%2esplit */] = function (fromEvent, numEvents) {\r\n            // Create a new batch with the same iKey\r\n            var theEvents;\r\n            if (fromEvent < events[_DYN_LENGTH /* @min:%2elength */]) {\r\n                var cnt = events[_DYN_LENGTH /* @min:%2elength */] - fromEvent;\r\n                if (!isNullOrUndefined(numEvents)) {\r\n                    cnt = numEvents < cnt ? numEvents : cnt;\r\n                }\r\n                theEvents = events[_DYN_SPLICE /* @min:%2esplice */](fromEvent, cnt);\r\n                // reset the fetched msfpc value\r\n                _msfpc = _getMsfpc(events);\r\n            }\r\n            return new EventBatch(iKey, theEvents);\r\n        };\r\n    }\r\n    /**\r\n     * Creates a new Event Batch object\r\n     * @param iKey The iKey associated with this batch of events\r\n     */\r\n    EventBatch.create = function (iKey, theEvents) {\r\n        return new EventBatch(iKey, theEvents);\r\n    };\r\n    return EventBatch;\r\n}());\r\nexport { EventBatch };\r\n//# sourceMappingURL=EventBatch.js.map","/*\n * 1DS JS SDK POST plugin, 4.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* ClockSkewManager.ts\r\n* @author Abhilash Panwar (abpanwar)\r\n* @copyright Microsoft 2018\r\n*/\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { _DYN_ALLOW_REQUEST_SENDIN0, _DYN_FIRST_REQUEST_SENT, _DYN_GET_CLOCK_SKEW_HEADE2, _DYN_SET_CLOCK_SKEW, _DYN_SHOULD_ADD_CLOCK_SKE1 } from \"./__DynamicConstants\";\r\n/**\r\n* Class to manage clock skew correction.\r\n*/\r\nvar ClockSkewManager = /** @class */ (function () {\r\n    function ClockSkewManager() {\r\n        var _allowRequestSending = true;\r\n        var _shouldAddClockSkewHeaders = true;\r\n        var _isFirstRequest = true;\r\n        var _clockSkewHeaderValue = \"use-collector-delta\";\r\n        var _clockSkewSet = false;\r\n        dynamicProto(ClockSkewManager, this, function (_self) {\r\n            /**\r\n             * Determine if requests can be sent.\r\n             * @returns True if requests can be sent, false otherwise.\r\n             */\r\n            _self[_DYN_ALLOW_REQUEST_SENDIN0 /* @min:%2eallowRequestSending */] = function () {\r\n                return _allowRequestSending;\r\n            };\r\n            /**\r\n             * Tells the ClockSkewManager that it should assume that the first request has now been sent,\r\n             * If this method had not yet been called AND the clock Skew had not been set this will set\r\n             * allowRequestSending to false until setClockSet() is called.\r\n             */\r\n            _self[_DYN_FIRST_REQUEST_SENT /* @min:%2efirstRequestSent */] = function () {\r\n                if (_isFirstRequest) {\r\n                    _isFirstRequest = false;\r\n                    if (!_clockSkewSet) {\r\n                        // Block sending until we get the first clock Skew\r\n                        _allowRequestSending = false;\r\n                    }\r\n                }\r\n            };\r\n            /**\r\n             * Determine if clock skew headers should be added to the request.\r\n             * @returns True if clock skew headers should be added, false otherwise.\r\n             */\r\n            _self[_DYN_SHOULD_ADD_CLOCK_SKE1 /* @min:%2eshouldAddClockSkewHeaders */] = function () {\r\n                return _shouldAddClockSkewHeaders;\r\n            };\r\n            /**\r\n             * Gets the clock skew header value.\r\n             * @returns The clock skew header value.\r\n             */\r\n            _self[_DYN_GET_CLOCK_SKEW_HEADE2 /* @min:%2egetClockSkewHeaderValue */] = function () {\r\n                return _clockSkewHeaderValue;\r\n            };\r\n            /**\r\n             * Sets the clock skew header value. Once clock skew is set this method\r\n             * is no-op.\r\n             * @param timeDeltaInMillis - Time delta to be saved as the clock skew header value.\r\n             */\r\n            _self[_DYN_SET_CLOCK_SKEW /* @min:%2esetClockSkew */] = function (timeDeltaInMillis) {\r\n                if (!_clockSkewSet) {\r\n                    if (timeDeltaInMillis) {\r\n                        _clockSkewHeaderValue = timeDeltaInMillis;\r\n                        _shouldAddClockSkewHeaders = true;\r\n                        _clockSkewSet = true;\r\n                    }\r\n                    else {\r\n                        _shouldAddClockSkewHeaders = false;\r\n                    }\r\n                    // Unblock sending\r\n                    _allowRequestSending = true;\r\n                }\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for ClockSkewManager.prototype.allowRequestSending.\r\n// Removed Stub for ClockSkewManager.prototype.firstRequestSent.\r\n// Removed Stub for ClockSkewManager.prototype.shouldAddClockSkewHeaders.\r\n// Removed Stub for ClockSkewManager.prototype.getClockSkewHeaderValue.\r\n// Removed Stub for ClockSkewManager.prototype.setClockSkew.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    ClockSkewManager.__ieDyn=1;\n\n    return ClockSkewManager;\r\n}());\r\nexport { ClockSkewManager };\r\n//# sourceMappingURL=ClockSkewManager.js.map","/*\n * 1DS JS SDK POST plugin, 4.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* KillSwitch.ts\r\n* @author Abhilash Panwar (abpanwar)\r\n* @copyright Microsoft 2018\r\n*/\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { arrForEach, dateNow, strTrim } from \"@microsoft/1ds-core-js\";\r\nimport { _DYN_IS_TENANT_KILLED, _DYN_LENGTH, _DYN_PUSH, _DYN_SET_KILL_SWITCH_TENA11, _DYN_SPLIT } from \"./__DynamicConstants\";\r\nvar SecToMsMultiplier = 1000;\r\n/**\r\n* Class to stop certain tenants sending events.\r\n*/\r\nvar KillSwitch = /** @class */ (function () {\r\n    function KillSwitch() {\r\n        var _killedTokenDictionary = {};\r\n        function _normalizeTenants(values) {\r\n            var result = [];\r\n            if (values) {\r\n                arrForEach(values, function (value) {\r\n                    result[_DYN_PUSH /* @min:%2epush */](strTrim(value));\r\n                });\r\n            }\r\n            return result;\r\n        }\r\n        dynamicProto(KillSwitch, this, function (_self) {\r\n            _self[_DYN_SET_KILL_SWITCH_TENA11 /* @min:%2esetKillSwitchTenants */] = function (killTokens, killDuration) {\r\n                if (killTokens && killDuration) {\r\n                    try {\r\n                        var killedTokens = _normalizeTenants(killTokens[_DYN_SPLIT /* @min:%2esplit */](\",\"));\r\n                        if (killDuration === \"this-request-only\") {\r\n                            return killedTokens;\r\n                        }\r\n                        var durationMs = parseInt(killDuration, 10) * SecToMsMultiplier;\r\n                        for (var i = 0; i < killedTokens[_DYN_LENGTH /* @min:%2elength */]; ++i) {\r\n                            _killedTokenDictionary[killedTokens[i]] = dateNow() + durationMs;\r\n                        }\r\n                    }\r\n                    catch (ex) {\r\n                        return [];\r\n                    }\r\n                }\r\n                return [];\r\n            };\r\n            _self[_DYN_IS_TENANT_KILLED /* @min:%2eisTenantKilled */] = function (tenantToken) {\r\n                var killDictionary = _killedTokenDictionary;\r\n                var name = strTrim(tenantToken);\r\n                if (killDictionary[name] !== undefined && killDictionary[name] > dateNow()) {\r\n                    return true;\r\n                }\r\n                delete killDictionary[name];\r\n                return false;\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for KillSwitch.prototype.setKillSwitchTenants.\r\n// Removed Stub for KillSwitch.prototype.isTenantKilled.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    KillSwitch.__ieDyn=1;\n\n    return KillSwitch;\r\n}());\r\nexport { KillSwitch };\r\n//# sourceMappingURL=KillSwitch.js.map","/*\n * 1DS JS SDK POST plugin, 4.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* RetryPolicy.ts\r\n* @author Abhilash Panwar (abpanwar)\r\n* @copyright Microsoft 2018\r\n*/\r\nvar RandomizationLowerThreshold = 0.8;\r\nvar RandomizationUpperThreshold = 1.2;\r\nvar BaseBackoff = 3000;\r\nvar MaxBackoff = 600000;\r\n/**\r\n * Determine if the request should be retried for the given status code.\r\n * The below expression reads that we should only retry for:\r\n *      - HttpStatusCodes that are smaller than 300.\r\n *      - HttpStatusCodes greater or equal to 500 (except for 501-NotImplement\r\n *        and 505-HttpVersionNotSupport).\r\n *      - HttpStatusCode 408-RequestTimeout.\r\n *      - HttpStatusCode 429.\r\n * This is based on Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry class\r\n * @param httpStatusCode - The status code returned for the request.\r\n * @returns True if request should be retried, false otherwise.\r\n */\r\nexport function retryPolicyShouldRetryForStatus(httpStatusCode) {\r\n    /* tslint:disable:triple-equals */\r\n    // Disabling triple-equals rule to avoid httpOverrides from failing because they are returning a string value\r\n    return !((httpStatusCode >= 300 && httpStatusCode < 500 && httpStatusCode != 429)\r\n        || (httpStatusCode == 501)\r\n        || (httpStatusCode == 505));\r\n    /* tslint:enable:triple-equals */\r\n}\r\n/**\r\n * Gets the number of milliseconds to back off before retrying the request. The\r\n * back off duration is exponentially scaled based on the number of retries already\r\n * done for the request.\r\n * @param retriesSoFar - The number of times the request has already been retried.\r\n * @returns The back off duration for the request before it can be retried.\r\n */\r\nexport function retryPolicyGetMillisToBackoffForRetry(retriesSoFar) {\r\n    var waitDuration = 0;\r\n    var minBackoff = BaseBackoff * RandomizationLowerThreshold;\r\n    var maxBackoff = BaseBackoff * RandomizationUpperThreshold;\r\n    var randomBackoff = Math.floor(Math.random() * (maxBackoff - minBackoff)) + minBackoff;\r\n    waitDuration = Math.pow(2, retriesSoFar) * randomBackoff;\r\n    return Math.min(waitDuration, MaxBackoff);\r\n}\r\n//# sourceMappingURL=RetryPolicy.js.map","/*\n * 1DS JS SDK POST plugin, 4.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* Serializer.ts\r\n* @author Abhilash Panwar (abpanwar); Hector Hernandez (hectorh); Nev Wylie (newylie)\r\n* @copyright Microsoft 2018-2020\r\n*/\r\n// @skip-file-minify\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { arrIndexOf, doPerf, getCommonSchemaMetaData, getTenantId, isArray, isValueAssigned, objForEachKey, sanitizeProperty, strStartsWith } from \"@microsoft/1ds-core-js\";\r\nimport { EventBatch } from \"./EventBatch\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nimport { strSubstr } from \"@nevware21/ts-utils\";\r\n/**\r\n * Note: This is an optimization for V8-based browsers. When V8 concatenates a string,\r\n * the strings are only joined logically using a \"cons string\" or \"constructed/concatenated\r\n * string\". These containers keep references to one another and can result in very large\r\n * memory usage. For example, if a 2MB string is constructed by concatenating 4 bytes\r\n * together at a time, the memory usage will be ~44MB; so ~22x increase. The strings are\r\n * only joined together when an operation requiring their joining takes place, such as\r\n * substr(). This function is called when adding data to this buffer to ensure these\r\n * types of strings are periodically joined to reduce the memory footprint.\r\n * Setting to every 20 events as the JSON.stringify() may have joined many strings\r\n * and calling this too much causes a minor delay while processing.\r\n */\r\nvar _MAX_STRING_JOINS = 20;\r\nvar RequestSizeLimitBytes = 3984588; // approx 3.8 Mb\r\nvar BeaconRequestSizeLimitBytes = 65000; // approx 64kb (the current Edge, Firefox and Chrome max limit)\r\nvar MaxRecordSize = 2000000; // approx 2 Mb\r\nvar MaxBeaconRecordSize = Math.min(MaxRecordSize, BeaconRequestSizeLimitBytes);\r\nvar metadata = \"metadata\";\r\nvar f = \"f\";\r\nvar rCheckDot = /\\./;\r\n/**\r\n* Class to handle serialization of event and request.\r\n* Currently uses Bond for serialization. Please note that this may be subject to change.\r\n*/\r\nvar Serializer = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the Serializer class\r\n     * @param perfManager - The performance manager to use for tracking performance\r\n     * @param valueSanitizer - The value sanitizer to use for sanitizing field values\r\n     * @param stringifyObjects - Should objects be stringified before being sent\r\n     * @param enableCompoundKey - Should compound keys be enabled (defaults to false)\r\n     * @param getEncodedTypeOverride - The callback to get the encoded type for a property defaults to ({@link getCommonSchemaMetaData }(...))\r\n     * @param excludeCsMetaData - (!DANGER!) Should metadata be populated when encoding the event blob (defaults to false) - PII data will NOT be tagged as PII for backend processing\r\n     */\r\n    function Serializer(perfManager, valueSanitizer, stringifyObjects, enableCompoundKey, getEncodedTypeOverride, excludeCsMetaData) {\r\n        var strData = \"data\";\r\n        var strBaseData = \"baseData\";\r\n        var strExt = \"ext\";\r\n        var _checkForCompoundkey = !!enableCompoundKey;\r\n        var _processSubKeys = true;\r\n        var _theSanitizer = valueSanitizer;\r\n        var _isReservedCache = {};\r\n        var _excludeCsMetaData = !!excludeCsMetaData;\r\n        var _getEncodedType = getEncodedTypeOverride || getCommonSchemaMetaData;\r\n        dynamicProto(Serializer, this, function (_self) {\r\n            _self.createPayload = function (retryCnt, isTeardown, isSync, isReducedPayload, sendReason, sendType) {\r\n                return {\r\n                    apiKeys: [],\r\n                    payloadBlob: STR_EMPTY,\r\n                    overflow: null,\r\n                    sizeExceed: [],\r\n                    failedEvts: [],\r\n                    batches: [],\r\n                    numEvents: 0,\r\n                    retryCnt: retryCnt,\r\n                    isTeardown: isTeardown,\r\n                    isSync: isSync,\r\n                    isBeacon: isReducedPayload,\r\n                    sendType: sendType,\r\n                    sendReason: sendReason\r\n                };\r\n            };\r\n            _self.appendPayload = function (payload, theBatch, maxEventsPerBatch) {\r\n                var canAddEvents = payload && theBatch && !payload.overflow;\r\n                if (canAddEvents) {\r\n                    doPerf(perfManager, function () { return \"Serializer:appendPayload\"; }, function () {\r\n                        var theEvents = theBatch.events();\r\n                        var payloadBlob = payload.payloadBlob;\r\n                        var payloadEvents = payload.numEvents;\r\n                        var eventsAdded = false;\r\n                        var sizeExceeded = [];\r\n                        var failedEvts = [];\r\n                        var isBeaconPayload = payload.isBeacon;\r\n                        var requestMaxSize = isBeaconPayload ? BeaconRequestSizeLimitBytes : RequestSizeLimitBytes;\r\n                        var recordMaxSize = isBeaconPayload ? MaxBeaconRecordSize : MaxRecordSize;\r\n                        var lp = 0;\r\n                        var joinCount = 0;\r\n                        while (lp < theEvents.length) {\r\n                            var theEvent = theEvents[lp];\r\n                            if (theEvent) {\r\n                                if (payloadEvents >= maxEventsPerBatch) {\r\n                                    // Maximum events per payload reached, so don't add any more\r\n                                    payload.overflow = theBatch.split(lp);\r\n                                    break;\r\n                                }\r\n                                var eventBlob = _self.getEventBlob(theEvent);\r\n                                if (eventBlob && eventBlob.length <= recordMaxSize) {\r\n                                    // This event will fit into the payload\r\n                                    var blobLength = eventBlob.length;\r\n                                    var currentSize = payloadBlob.length;\r\n                                    if (currentSize + blobLength > requestMaxSize) {\r\n                                        // Request or batch size exceeded, so don't add any more to the payload\r\n                                        payload.overflow = theBatch.split(lp);\r\n                                        break;\r\n                                    }\r\n                                    if (payloadBlob) {\r\n                                        payloadBlob += \"\\n\";\r\n                                    }\r\n                                    payloadBlob += eventBlob;\r\n                                    joinCount++;\r\n                                    // v8 memory optimization only\r\n                                    if (joinCount > _MAX_STRING_JOINS) {\r\n                                        // this substr() should cause the constructed string to join\r\n                                        strSubstr(payloadBlob, 0, 1);\r\n                                        joinCount = 0;\r\n                                    }\r\n                                    eventsAdded = true;\r\n                                    payloadEvents++;\r\n                                }\r\n                                else {\r\n                                    if (eventBlob) {\r\n                                        // Single event size exceeded so remove from the batch\r\n                                        sizeExceeded.push(theEvent);\r\n                                    }\r\n                                    else {\r\n                                        failedEvts.push(theEvent);\r\n                                    }\r\n                                    // We also need to remove this event from the existing array, otherwise a notification will be sent\r\n                                    // indicating that it was successfully sent\r\n                                    theEvents.splice(lp, 1);\r\n                                    lp--;\r\n                                }\r\n                            }\r\n                            lp++;\r\n                        }\r\n                        if (sizeExceeded.length > 0) {\r\n                            payload.sizeExceed.push(EventBatch.create(theBatch.iKey(), sizeExceeded));\r\n                            // Remove the exceeded events from the batch\r\n                        }\r\n                        if (failedEvts.length > 0) {\r\n                            payload.failedEvts.push(EventBatch.create(theBatch.iKey(), failedEvts));\r\n                            // Remove the failed events from the batch\r\n                        }\r\n                        if (eventsAdded) {\r\n                            payload.batches.push(theBatch);\r\n                            payload.payloadBlob = payloadBlob;\r\n                            payload.numEvents = payloadEvents;\r\n                            var apiKey = theBatch.iKey();\r\n                            if (arrIndexOf(payload.apiKeys, apiKey) === -1) {\r\n                                payload.apiKeys.push(apiKey);\r\n                            }\r\n                        }\r\n                    }, function () { return ({ payload: payload, theBatch: { iKey: theBatch.iKey(), evts: theBatch.events() }, max: maxEventsPerBatch }); });\r\n                }\r\n                return canAddEvents;\r\n            };\r\n            _self.getEventBlob = function (eventData) {\r\n                try {\r\n                    return doPerf(perfManager, function () { return \"Serializer.getEventBlob\"; }, function () {\r\n                        var serializedEvent = {};\r\n                        // Adding as dynamic keys for v8 performance\r\n                        serializedEvent.name = eventData.name;\r\n                        serializedEvent.time = eventData.time;\r\n                        serializedEvent.ver = eventData.ver;\r\n                        serializedEvent.iKey = \"o:\" + getTenantId(eventData.iKey);\r\n                        // Assigning local var so usage in part b/c don't throw if there is no ext\r\n                        var serializedExt = {};\r\n                        var _addMetadataCallback;\r\n                        if (!_excludeCsMetaData) {\r\n                            _addMetadataCallback = function (pathKeys, key, value) {\r\n                                _addJSONPropertyMetaData(_getEncodedType, serializedExt, pathKeys, key, value);\r\n                            };\r\n                        }\r\n                        // Part A\r\n                        var eventExt = eventData[strExt];\r\n                        if (eventExt) {\r\n                            // Only assign ext if the event had one (There are tests covering this use case)\r\n                            serializedEvent[strExt] = serializedExt;\r\n                            objForEachKey(eventExt, function (key, value) {\r\n                                var data = serializedExt[key] = {};\r\n                                // Don't include a metadata callback as we don't currently set metadata Part A fields\r\n                                _processPathKeys(value, data, \"ext.\" + key, true, null, null, true);\r\n                            });\r\n                        }\r\n                        var serializedData = serializedEvent[strData] = {};\r\n                        serializedData.baseType = eventData.baseType;\r\n                        var serializedBaseData = serializedData[strBaseData] = {};\r\n                        // Part B\r\n                        _processPathKeys(eventData.baseData, serializedBaseData, strBaseData, false, [strBaseData], _addMetadataCallback, _processSubKeys);\r\n                        // Part C\r\n                        _processPathKeys(eventData.data, serializedData, strData, false, [], _addMetadataCallback, _processSubKeys);\r\n                        return JSON.stringify(serializedEvent);\r\n                    }, function () { return ({ item: eventData }); });\r\n                }\r\n                catch (e) {\r\n                    return null;\r\n                }\r\n            };\r\n            function _isReservedField(path, name) {\r\n                var result = _isReservedCache[path];\r\n                if (result === undefined) {\r\n                    if (path.length >= 7) {\r\n                        // Do not allow the changing of fields located in the ext.metadata or ext.web extension\r\n                        result = strStartsWith(path, \"ext.metadata\") || strStartsWith(path, \"ext.web\");\r\n                    }\r\n                    _isReservedCache[path] = result;\r\n                }\r\n                return result;\r\n            }\r\n            function _processPathKeys(srcObj, target, thePath, checkReserved, metadataPathKeys, metadataCallback, processSubKeys) {\r\n                objForEachKey(srcObj, function (key, srcValue) {\r\n                    var prop = null;\r\n                    if (srcValue || isValueAssigned(srcValue)) {\r\n                        var path = thePath;\r\n                        var name_1 = key;\r\n                        var theMetaPathKeys = metadataPathKeys;\r\n                        var destObj = target;\r\n                        // Handle keys with embedded '.', like \"TestObject.testProperty\"\r\n                        if (_checkForCompoundkey && !checkReserved && rCheckDot.test(key)) {\r\n                            var subKeys = key.split(\".\");\r\n                            var keyLen = subKeys.length;\r\n                            if (keyLen > 1) {\r\n                                if (theMetaPathKeys) {\r\n                                    // Create a copy of the meta path keys so we can add the extra ones\r\n                                    theMetaPathKeys = theMetaPathKeys.slice();\r\n                                }\r\n                                for (var lp = 0; lp < keyLen - 1; lp++) {\r\n                                    var subKey = subKeys[lp];\r\n                                    // Add/reuse the sub key object\r\n                                    destObj = destObj[subKey] = destObj[subKey] || {};\r\n                                    path += \".\" + subKey;\r\n                                    if (theMetaPathKeys) {\r\n                                        theMetaPathKeys.push(subKey);\r\n                                    }\r\n                                }\r\n                                name_1 = subKeys[keyLen - 1];\r\n                            }\r\n                        }\r\n                        var isReserved = checkReserved && _isReservedField(path, name_1);\r\n                        if (!isReserved && _theSanitizer && _theSanitizer.handleField(path, name_1)) {\r\n                            prop = _theSanitizer.value(path, name_1, srcValue, stringifyObjects);\r\n                        }\r\n                        else {\r\n                            prop = sanitizeProperty(name_1, srcValue, stringifyObjects);\r\n                        }\r\n                        if (prop) {\r\n                            // Set the value\r\n                            var newValue = prop.value;\r\n                            destObj[name_1] = newValue;\r\n                            if (metadataCallback) {\r\n                                metadataCallback(theMetaPathKeys, name_1, prop);\r\n                            }\r\n                            if (processSubKeys && typeof newValue === \"object\" && !isArray(newValue)) {\r\n                                var newPath = theMetaPathKeys;\r\n                                if (newPath) {\r\n                                    newPath = newPath.slice();\r\n                                    newPath.push(name_1);\r\n                                }\r\n                                // Make sure we process sub objects as well (for value sanitization and metadata)\r\n                                _processPathKeys(srcValue, newValue, path + \".\" + name_1, checkReserved, newPath, metadataCallback, processSubKeys);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for Serializer.prototype.createPayload.\r\n// Removed Stub for Serializer.prototype.appendPayload.\r\n// Removed Stub for Serializer.prototype.getEventBlob.\r\n// Removed Stub for Serializer.prototype.handleField.\r\n// Removed Stub for Serializer.prototype.getSanitizer.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    Serializer.__ieDyn=1;\n\n    return Serializer;\r\n}());\r\nexport { Serializer };\r\n/**\r\n * @ignore\r\n * @param getEncodedType - The function to get the encoded type for the property\r\n * @param json - The json object to add the metadata to\r\n * @param propKeys - The property keys to add to the metadata\r\n * @param name - The name of the property\r\n * @param propertyValue - The property value\r\n */\r\nfunction _addJSONPropertyMetaData(getEncodedType, json, propKeys, name, propertyValue) {\r\n    if (propertyValue && json) {\r\n        var encodedTypeValue = getEncodedType(propertyValue.value, propertyValue.kind, propertyValue.propertyType);\r\n        if (encodedTypeValue > -1) {\r\n            // Add the root metadata\r\n            var metaData = json[metadata];\r\n            if (!metaData) {\r\n                // Sets the root 'f'\r\n                metaData = json[metadata] = { f: {} };\r\n            }\r\n            var metaTarget = metaData[f];\r\n            if (!metaTarget) {\r\n                // This can occur if someone has manually added an ext.metadata object\r\n                // Such as ext.metadata.privLevel and ext.metadata.privTags\r\n                metaTarget = metaData[f] = {};\r\n            }\r\n            // Traverse the metadata path and build each object (contains an 'f' key) -- if required\r\n            if (propKeys) {\r\n                for (var lp = 0; lp < propKeys.length; lp++) {\r\n                    var key = propKeys[lp];\r\n                    if (!metaTarget[key]) {\r\n                        metaTarget[key] = { f: {} };\r\n                    }\r\n                    var newTarget = metaTarget[key][f];\r\n                    if (!newTarget) {\r\n                        // Not expected, but can occur if the metadata context was pre-created as part of the event\r\n                        newTarget = metaTarget[key][f] = {};\r\n                    }\r\n                    metaTarget = newTarget;\r\n                }\r\n            }\r\n            metaTarget = metaTarget[name] = {};\r\n            if (isArray(propertyValue.value)) {\r\n                metaTarget[\"a\"] = {\r\n                    t: encodedTypeValue\r\n                };\r\n            }\r\n            else {\r\n                metaTarget[\"t\"] = encodedTypeValue;\r\n            }\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Serializer.js.map","/*\n * 1DS JS SDK POST plugin, 4.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\nvar _a;\r\n/**\r\n* HttpManager.ts\r\n* @author Abhilash Panwar (abpanwar); Hector Hernandez (hectorh); Nev Wylie (newylie)\r\n* @copyright Microsoft 2018-2020\r\n*/\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { FullVersionString, SenderPostManager, _getAllResponseHeaders, _throwInternal, _warnToConsole, arrForEach, dateNow, doPerf, dumpObj, extend, getCommonSchemaMetaData, getNavigator, getResponseText, getTime, hasOwnProperty, isBeaconsSupported, isFetchSupported, isNullOrUndefined, isReactNative, isUndefined, isValueAssigned, objForEachKey, objKeys, onConfigChange, optimizeObject, prependTransports, strUndefined } from \"@microsoft/1ds-core-js\";\r\nimport { arrAppend } from \"@nevware21/ts-utils\";\r\nimport { ClockSkewManager } from \"./ClockSkewManager\";\r\nimport { EventBatch } from \"./EventBatch\";\r\nimport { DEFAULT_CACHE_CONTROL, DEFAULT_CONTENT_TYPE, STR_API_KEY, STR_AUTH_XTOKEN, STR_CACHE_CONTROL, STR_CLIENT_ID, STR_CLIENT_VERSION, STR_CONTENT_TYPE_HEADER, STR_DROPPED, STR_EMPTY, STR_KILL_DURATION_HEADER, STR_KILL_TOKENS_HEADER, STR_MSA_DEVICE_TICKET, STR_MSFPC, STR_NO_RESPONSE_BODY, STR_OTHER, STR_REQUEUE, STR_RESPONSE_FAIL, STR_SENDING, STR_TIME_DELTA_HEADER, STR_TIME_DELTA_TO_APPLY, STR_UPLOAD_TIME } from \"./InternalConstants\";\r\nimport { KillSwitch } from \"./KillSwitch\";\r\nimport { retryPolicyGetMillisToBackoffForRetry, retryPolicyShouldRetryForStatus } from \"./RetryPolicy\";\r\nimport { Serializer } from \"./Serializer\";\r\nimport { createTimeoutWrapper } from \"./TimeoutOverrideWrapper\";\r\nimport { _DYN_ADD_HEADER, _DYN_ADD_NO_RESPONSE, _DYN_ALLOW_REQUEST_SENDIN0, _DYN_ALWAYS_USE_XHR_OVERR7, _DYN_AVOID_OPTIONS, _DYN_BATCHES, _DYN_CAN_SEND_REQUEST, _DYN_CLEAR_TIMEOUT_OVERRI3, _DYN_CONCAT, _DYN_COUNT, _DYN_CREATE_ONE_DSPAYLOAD, _DYN_CREATE_PAYLOAD, _DYN_DATA, _DYN_DISABLE_EVENT_TIMING5, _DYN_DISABLE_FETCH_KEEP_A6, _DYN_DISABLE_XHR_SYNC, _DYN_ENABLE_COMPOUND_KEY, _DYN_EVENTS, _DYN_EXCLUDE_CS_META_DATA, _DYN_FETCH_CREDENTIALS, _DYN_FIRST_REQUEST_SENT, _DYN_GET_CLOCK_SKEW_HEADE2, _DYN_GET_OFFLINE_REQUEST_9, _DYN_GET_WPARAM, _DYN_HDRS, _DYN_HEADERS, _DYN_INITIALIZE, _DYN_IS_BEACON, _DYN_IS_COMPLETELY_IDLE, _DYN_IS_SYNC, _DYN_IS_TEARDOWN, _DYN_I_KEY, _DYN_LENGTH, _DYN_OVERRIDE_ENDPOINT_UR4, _DYN_PAYLOAD_BLOB, _DYN_PAYLOAD_PREPROCESSOR, _DYN_PUSH, _DYN_RESUME, _DYN_SEND_QUEUED_REQUESTS, _DYN_SEND_SYNCHRONOUS_BAT10, _DYN_SEND_TYPE, _DYN_SERIALIZE_OFFLINE_EV8, _DYN_SET_CLOCK_SKEW, _DYN_SET_KILL_SWITCH_TENA11, _DYN_SET_TIMEOUT_OVERRIDE, _DYN_SET_UNLOADING, _DYN_SHOULD_ADD_CLOCK_SKE1, _DYN_SPLICE, _DYN_SPLIT, _DYN_STRINGIFY_OBJECTS, _DYN_TIMEOUT, _DYN_TIMINGS, _DYN_TO_LOWER_CASE, _DYN_UNLOAD_TRANSPORTS, _DYN_URL_STRING, _DYN_USE_HDRS, _DYN_USE_SEND_BEACON, _DYN__BACK_OFF_TRANSMISSI12, _DYN__SEND_REASON, _DYN__THE_PAYLOAD, _DYN__TRANSPORT } from \"./__DynamicConstants\";\r\nvar strSendAttempt = \"sendAttempt\";\r\nvar _noResponseQs = \"&\" + STR_NO_RESPONSE_BODY + \"=true\";\r\nvar UrlQueryString = \"?cors=true&\" + STR_CONTENT_TYPE_HEADER[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() + \"=\" + DEFAULT_CONTENT_TYPE;\r\n/**\r\n * Identifies the default notification reason to the action names\r\n */\r\nvar _eventActionMap = (_a = {},\r\n    _a[1 /* EventBatchNotificationReason.Paused */] = STR_REQUEUE,\r\n    _a[100 /* EventBatchNotificationReason.RequeueEvents */] = STR_REQUEUE,\r\n    _a[200 /* EventBatchNotificationReason.Complete */] = \"sent\",\r\n    _a[8004 /* EventBatchNotificationReason.KillSwitch */] = STR_DROPPED,\r\n    _a[8003 /* EventBatchNotificationReason.SizeLimitExceeded */] = STR_DROPPED,\r\n    _a);\r\nvar _collectorQsHeaders = {};\r\nvar _collectorHeaderToQs = {};\r\nfunction _addCollectorHeaderQsMapping(qsName, headerName, allowQs) {\r\n    _collectorQsHeaders[qsName] = headerName;\r\n    if (allowQs !== false) {\r\n        _collectorHeaderToQs[headerName] = qsName;\r\n    }\r\n}\r\n_addCollectorHeaderQsMapping(STR_MSA_DEVICE_TICKET, STR_MSA_DEVICE_TICKET, false);\r\n_addCollectorHeaderQsMapping(STR_CLIENT_VERSION, STR_CLIENT_VERSION);\r\n_addCollectorHeaderQsMapping(STR_CLIENT_ID, \"Client-Id\");\r\n_addCollectorHeaderQsMapping(STR_API_KEY, STR_API_KEY);\r\n_addCollectorHeaderQsMapping(STR_TIME_DELTA_TO_APPLY, STR_TIME_DELTA_TO_APPLY);\r\n_addCollectorHeaderQsMapping(STR_UPLOAD_TIME, STR_UPLOAD_TIME);\r\n_addCollectorHeaderQsMapping(STR_AUTH_XTOKEN, STR_AUTH_XTOKEN);\r\nfunction _hasHeader(headers, header) {\r\n    var hasHeader = false;\r\n    if (headers && header) {\r\n        var keys = objKeys(headers);\r\n        if (keys && keys[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            var lowerHeader = header[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n            for (var lp = 0; lp < keys[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                var value = keys[lp];\r\n                if (value && hasOwnProperty(header, value) &&\r\n                    value[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() === lowerHeader) {\r\n                    hasHeader = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return hasHeader;\r\n}\r\nfunction _addRequestDetails(details, name, value, useHeaders) {\r\n    if (name && value && value[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        if (useHeaders && _collectorQsHeaders[name]) {\r\n            details[_DYN_HDRS /* @min:%2ehdrs */][_collectorQsHeaders[name]] = value;\r\n            details[_DYN_USE_HDRS /* @min:%2euseHdrs */] = true;\r\n        }\r\n        else {\r\n            details.url += \"&\" + name + \"=\" + value;\r\n        }\r\n    }\r\n}\r\nfunction _addQueryStringParameter(qsParams, name, value) {\r\n    for (var i = 0; i < qsParams[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n        if (qsParams[i].name === name) {\r\n            qsParams[i].value = value;\r\n            return;\r\n        }\r\n    }\r\n    qsParams[_DYN_PUSH /* @min:%2epush */]({ name: name, value: value });\r\n}\r\nfunction _removeQueryStringParameter(qsParams, name) {\r\n    for (var i = 0; i < qsParams[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n        if (qsParams[i].name === name) {\r\n            qsParams[_DYN_SPLICE /* @min:%2esplice */](i, 1);\r\n            return;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Class managing the sending of requests.\r\n */\r\nvar HttpManager = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @param requestQueue   - The queue that contains the requests to be sent.\r\n     */\r\n    function HttpManager(maxEventsPerBatch, maxConnections, maxRequestRetriesBeforeBackoff, actions) {\r\n        // ------------------------------------------------------------------------------------------------------------------------\r\n        // Only set \"Default\" values in the _initDefaults() method, unless value are not \"reset\" during unloading\r\n        // ------------------------------------------------------------------------------------------------------------------------\r\n        var _urlString;\r\n        var _killSwitch;\r\n        var _paused;\r\n        var _clockSkewManager;\r\n        var _useBeacons = false;\r\n        var _outstandingRequests; // Holds the number of outstanding async requests that have not returned a response yet\r\n        var _postManager;\r\n        var _logger;\r\n        var _sendInterfaces;\r\n        var _core;\r\n        var _customHttpInterface;\r\n        var _queryStringParameters;\r\n        var _headers;\r\n        var _batchQueue;\r\n        var _serializer;\r\n        var _enableEventTimings;\r\n        var _cookieMgr;\r\n        var _isUnloading;\r\n        var _useHeaders;\r\n        var _xhrTimeout;\r\n        var _disableXhrSync;\r\n        var _disableFetchKeepAlive;\r\n        var _canHaveReducedPayload;\r\n        var _addNoResponse;\r\n        var _unloadHooks;\r\n        var _sendHook;\r\n        var _sendListener;\r\n        var _responseHandlers;\r\n        var _isInitialized;\r\n        var _timeoutWrapper;\r\n        var _excludeCsMetaData;\r\n        var _sendPostMgr;\r\n        var _fetchCredentials;\r\n        dynamicProto(HttpManager, this, function (_self) {\r\n            _initDefaults();\r\n            var _sendCredentials = true;\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (theConfig, core, postChannel) {\r\n                if (!_isInitialized) {\r\n                    _core = core;\r\n                    _cookieMgr = core.getCookieMgr();\r\n                    _postManager = postChannel;\r\n                    _logger = _postManager.diagLog();\r\n                    arrAppend(_unloadHooks, onConfigChange(theConfig, function (details) {\r\n                        var _a;\r\n                        var coreConfig = details.cfg;\r\n                        var channelConfig = details.cfg.extensionConfig[postChannel.identifier];\r\n                        _timeoutWrapper = createTimeoutWrapper(channelConfig[_DYN_SET_TIMEOUT_OVERRIDE /* @min:%2esetTimeoutOverride */], channelConfig[_DYN_CLEAR_TIMEOUT_OVERRI3 /* @min:%2eclearTimeoutOverride */]);\r\n                        if (isValueAssigned(coreConfig.anonCookieName)) {\r\n                            _addQueryStringParameter(_queryStringParameters, \"anoncknm\", coreConfig.anonCookieName);\r\n                        }\r\n                        else {\r\n                            _removeQueryStringParameter(_queryStringParameters, \"anoncknm\");\r\n                        }\r\n                        _sendHook = channelConfig[_DYN_PAYLOAD_PREPROCESSOR /* @min:%2epayloadPreprocessor */];\r\n                        _sendListener = channelConfig.payloadListener;\r\n                        var httpInterface = channelConfig.httpXHROverride;\r\n                        // Override endpointUrl if provided in Post config\r\n                        var endpointUrl = channelConfig[_DYN_OVERRIDE_ENDPOINT_UR4 /* @min:%2eoverrideEndpointUrl */] ? channelConfig[_DYN_OVERRIDE_ENDPOINT_UR4 /* @min:%2eoverrideEndpointUrl */] : coreConfig.endpointUrl;\r\n                        _urlString = endpointUrl + UrlQueryString;\r\n                        _useHeaders = !isUndefined(channelConfig[_DYN_AVOID_OPTIONS /* @min:%2eavoidOptions */]) ? !channelConfig[_DYN_AVOID_OPTIONS /* @min:%2eavoidOptions */] : true;\r\n                        _enableEventTimings = !channelConfig[_DYN_DISABLE_EVENT_TIMING5 /* @min:%2edisableEventTimings */];\r\n                        var valueSanitizer = channelConfig.valueSanitizer;\r\n                        var stringifyObjects = channelConfig[_DYN_STRINGIFY_OBJECTS /* @min:%2estringifyObjects */];\r\n                        var enableCompoundKey = !!coreConfig[_DYN_ENABLE_COMPOUND_KEY /* @min:%2eenableCompoundKey */];\r\n                        if (!isUndefined(channelConfig[_DYN_ENABLE_COMPOUND_KEY /* @min:%2eenableCompoundKey */])) {\r\n                            enableCompoundKey = !!channelConfig[_DYN_ENABLE_COMPOUND_KEY /* @min:%2eenableCompoundKey */];\r\n                        }\r\n                        _xhrTimeout = channelConfig.xhrTimeout;\r\n                        _disableXhrSync = !!channelConfig[_DYN_DISABLE_XHR_SYNC /* @min:%2edisableXhrSync */];\r\n                        _disableFetchKeepAlive = !!channelConfig[_DYN_DISABLE_FETCH_KEEP_A6 /* @min:%2edisableFetchKeepAlive */];\r\n                        _addNoResponse = channelConfig[_DYN_ADD_NO_RESPONSE /* @min:%2eaddNoResponse */] !== false;\r\n                        _excludeCsMetaData = !!channelConfig[_DYN_EXCLUDE_CS_META_DATA /* @min:%2eexcludeCsMetaData */];\r\n                        if (!!core.getPlugin(\"LocalStorage\")) {\r\n                            // Always disable fetch keep alive when persisten storage is available\r\n                            _disableFetchKeepAlive = true;\r\n                        }\r\n                        _useBeacons = !isReactNative(); // Only use beacons if not running in React Native\r\n                        _serializer = new Serializer(_core, valueSanitizer, stringifyObjects, enableCompoundKey, getCommonSchemaMetaData, _excludeCsMetaData);\r\n                        if (!isNullOrUndefined(channelConfig[_DYN_USE_SEND_BEACON /* @min:%2euseSendBeacon */])) {\r\n                            _useBeacons = !!channelConfig[_DYN_USE_SEND_BEACON /* @min:%2euseSendBeacon */];\r\n                        }\r\n                        if (channelConfig[_DYN_FETCH_CREDENTIALS /* @min:%2efetchCredentials */]) {\r\n                            _fetchCredentials = channelConfig[_DYN_FETCH_CREDENTIALS /* @min:%2efetchCredentials */];\r\n                        }\r\n                        var sendPostConfig = _getSendPostMgrConfig();\r\n                        // only init it once\r\n                        if (!_sendPostMgr) {\r\n                            _sendPostMgr = new SenderPostManager();\r\n                            _sendPostMgr[_DYN_INITIALIZE /* @min:%2einitialize */](sendPostConfig, _logger);\r\n                        }\r\n                        else {\r\n                            _sendPostMgr.SetConfig(sendPostConfig);\r\n                        }\r\n                        var syncHttpInterface = httpInterface;\r\n                        var beaconHttpInterface = channelConfig[_DYN_ALWAYS_USE_XHR_OVERR7 /* @min:%2ealwaysUseXhrOverride */] ? httpInterface : null;\r\n                        var fetchSyncHttpInterface = channelConfig[_DYN_ALWAYS_USE_XHR_OVERR7 /* @min:%2ealwaysUseXhrOverride */] ? httpInterface : null;\r\n                        var beaconUnloadTransports = [3 /* TransportType.Beacon */, 2 /* TransportType.Fetch */];\r\n                        if (!httpInterface) {\r\n                            _customHttpInterface = false;\r\n                            // this is handled in SendPostManager now\r\n                            // let location = getLocation();\r\n                            // if (location && location.protocol && location.protocol.toLowerCase() === \"file:\") {\r\n                            //     // Special case where a local html file fails with a CORS error on Chromium browsers\r\n                            //     _sendCredentials = false;\r\n                            // }\r\n                            var theTransports = [];\r\n                            if (isReactNative()) {\r\n                                // Use Fetch or XDR/XHR\r\n                                theTransports = [2 /* TransportType.Fetch */, 1 /* TransportType.Xhr */];\r\n                                beaconUnloadTransports = [2 /* TransportType.Fetch */, 1 /* TransportType.Xhr */, 3 /* TransportType.Beacon */];\r\n                            }\r\n                            else {\r\n                                // Use XDR/XHR, Fetch or beacons\r\n                                theTransports = [1 /* TransportType.Xhr */, 2 /* TransportType.Fetch */, 3 /* TransportType.Beacon */];\r\n                            }\r\n                            // Prefix any user requested transport(s) values\r\n                            theTransports = prependTransports(theTransports, channelConfig.transports);\r\n                            httpInterface = _getSenderInterface(theTransports, false);\r\n                            if (!httpInterface) {\r\n                                _warnToConsole(_logger, \"No available transport to send events\");\r\n                            }\r\n                            syncHttpInterface = _getSenderInterface(theTransports, true);\r\n                        }\r\n                        if (!beaconHttpInterface) {\r\n                            // Allow overriding the usage of sendBeacon\r\n                            beaconUnloadTransports = prependTransports(beaconUnloadTransports, channelConfig[_DYN_UNLOAD_TRANSPORTS /* @min:%2eunloadTransports */]);\r\n                            beaconHttpInterface = _getSenderInterface(beaconUnloadTransports, true);\r\n                        }\r\n                        _canHaveReducedPayload = !_customHttpInterface && ((_useBeacons && isBeaconsSupported()) || (!_disableFetchKeepAlive && isFetchSupported(true)));\r\n                        _sendInterfaces = (_a = {},\r\n                            _a[0 /* EventSendType.Batched */] = httpInterface,\r\n                            _a[1 /* EventSendType.Synchronous */] = syncHttpInterface || _getSenderInterface([1 /* TransportType.Xhr */, 2 /* TransportType.Fetch */, 3 /* TransportType.Beacon */], true),\r\n                            _a[2 /* EventSendType.SendBeacon */] = beaconHttpInterface || syncHttpInterface || _getSenderInterface([1 /* TransportType.Xhr */], true),\r\n                            _a[3 /* EventSendType.SyncFetch */] = fetchSyncHttpInterface || _getSenderInterface([2 /* TransportType.Fetch */, 3 /* TransportType.Beacon */], true) || syncHttpInterface || _getSenderInterface([1 /* TransportType.Xhr */], true),\r\n                            _a);\r\n                    }));\r\n                    _isInitialized = true;\r\n                }\r\n            };\r\n            _self.addResponseHandler = function (responseHandler) {\r\n                _responseHandlers[_DYN_PUSH /* @min:%2epush */](responseHandler);\r\n                return {\r\n                    rm: function () {\r\n                        var index = _responseHandlers.indexOf(responseHandler);\r\n                        if (index >= 0) {\r\n                            _responseHandlers[_DYN_SPLICE /* @min:%2esplice */](index, 1);\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n            _self[_DYN_SERIALIZE_OFFLINE_EV8 /* @min:%2eserializeOfflineEvt */] = function (evt) {\r\n                try {\r\n                    if (_serializer) {\r\n                        return _serializer.getEventBlob(evt);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return STR_EMPTY;\r\n            };\r\n            _self[_DYN_GET_OFFLINE_REQUEST_9 /* @min:%2egetOfflineRequestDetails */] = function () {\r\n                try {\r\n                    // get current url without paramter\r\n                    var payload = _serializer && _serializer[_DYN_CREATE_PAYLOAD /* @min:%2ecreatePayload */](0, false, false, false, 1 /* SendRequestReason.NormalSchedule */, 0 /* EventSendType.Batched */);\r\n                    return _buildRequestDetails(payload, _useHeaders);\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return null;\r\n            };\r\n            _self[_DYN_CREATE_ONE_DSPAYLOAD /* @min:%2ecreateOneDSPayload */] = function (evts, optimize) {\r\n                try {\r\n                    // TODO: optimize\r\n                    var theBatches_1 = [];\r\n                    // create a eventBatch for each event\r\n                    arrForEach(evts, function (evt) {\r\n                        if (optimize) {\r\n                            evt = optimizeObject(evt);\r\n                        }\r\n                        var batch = EventBatch.create(evt[_DYN_I_KEY /* @min:%2eiKey */], [evt]);\r\n                        theBatches_1[_DYN_PUSH /* @min:%2epush */](batch);\r\n                    });\r\n                    var thePayload = null;\r\n                    while (theBatches_1[_DYN_LENGTH /* @min:%2elength */] > 0 && _serializer) {\r\n                        var theBatch = theBatches_1.shift();\r\n                        if (theBatch && theBatch[_DYN_COUNT /* @min:%2ecount */]() > 0) {\r\n                            thePayload = thePayload || _serializer[_DYN_CREATE_PAYLOAD /* @min:%2ecreatePayload */](0, false, false, false, 1 /* SendRequestReason.NormalSchedule */, 0 /* EventSendType.Batched */);\r\n                            _serializer.appendPayload(thePayload, theBatch, maxEventsPerBatch);\r\n                        }\r\n                    }\r\n                    var requestDetails = _buildRequestDetails(thePayload, _useHeaders);\r\n                    var payloadData = {\r\n                        data: thePayload[_DYN_PAYLOAD_BLOB /* @min:%2epayloadBlob */],\r\n                        urlString: requestDetails.url,\r\n                        headers: requestDetails[_DYN_HDRS /* @min:%2ehdrs */],\r\n                        timeout: _xhrTimeout,\r\n                        disableXhrSync: _disableXhrSync,\r\n                        disableFetchKeepAlive: _disableFetchKeepAlive\r\n                    };\r\n                    // Only automatically add the following headers if already sending headers and we are not attempting to avoid an options call\r\n                    if (_useHeaders) {\r\n                        if (!_hasHeader(payloadData[_DYN_HEADERS /* @min:%2eheaders */], STR_CACHE_CONTROL)) {\r\n                            payloadData[_DYN_HEADERS /* @min:%2eheaders */][STR_CACHE_CONTROL] = DEFAULT_CACHE_CONTROL;\r\n                        }\r\n                        if (!_hasHeader(payloadData[_DYN_HEADERS /* @min:%2eheaders */], STR_CONTENT_TYPE_HEADER)) {\r\n                            payloadData[_DYN_HEADERS /* @min:%2eheaders */][STR_CONTENT_TYPE_HEADER] = DEFAULT_CONTENT_TYPE;\r\n                        }\r\n                    }\r\n                    return payloadData;\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return null;\r\n            };\r\n            // Special internal method to allow the DebugPlugin to hook embedded objects\r\n            function _getSenderInterface(transports, syncSupport) {\r\n                try {\r\n                    return _sendPostMgr && _sendPostMgr.getSenderInst(transports, syncSupport);\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return null;\r\n            }\r\n            _self[\"_getDbgPlgTargets\"] = function () {\r\n                return [_sendInterfaces[0 /* EventSendType.Batched */], _killSwitch, _serializer, _sendInterfaces, _getSendPostMgrConfig(), _urlString];\r\n            };\r\n            function _getSendPostMgrConfig() {\r\n                try {\r\n                    var onCompleteFuncs = {\r\n                        xdrOnComplete: _xdrOncomplete,\r\n                        fetchOnComplete: _fetchOnComplete,\r\n                        xhrOnComplete: _xhrOnComplete,\r\n                        beaconOnRetry: _onBeaconRetry\r\n                    };\r\n                    var config = {\r\n                        enableSendPromise: false,\r\n                        isOneDs: true,\r\n                        disableCredentials: !_sendCredentials,\r\n                        fetchCredentials: _fetchCredentials,\r\n                        disableXhr: false,\r\n                        disableBeacon: !_useBeacons,\r\n                        disableBeaconSync: !_useBeacons,\r\n                        disableFetchKeepAlive: _disableFetchKeepAlive,\r\n                        timeWrapper: _timeoutWrapper,\r\n                        addNoResponse: _addNoResponse,\r\n                        senderOnCompleteCallBack: onCompleteFuncs\r\n                    };\r\n                    return config;\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return null;\r\n            }\r\n            function _xdrOncomplete(xdr, oncomplete, payload) {\r\n                var response = getResponseText(xdr);\r\n                _doOnComplete(oncomplete, 200, {}, response);\r\n                _handleCollectorResponse(response);\r\n            }\r\n            function _initDefaults() {\r\n                var undefValue;\r\n                _urlString = null;\r\n                _killSwitch = new KillSwitch();\r\n                _paused = false;\r\n                _clockSkewManager = new ClockSkewManager();\r\n                _useBeacons = false;\r\n                _outstandingRequests = 0; // Holds the number of outstanding async requests that have not returned a response yet\r\n                _postManager = null;\r\n                _logger = null;\r\n                _sendInterfaces = null;\r\n                _core = null;\r\n                _customHttpInterface = true;\r\n                _queryStringParameters = [];\r\n                _headers = {};\r\n                _batchQueue = [];\r\n                _serializer = null;\r\n                _enableEventTimings = false;\r\n                _cookieMgr = null;\r\n                _isUnloading = false;\r\n                _useHeaders = false;\r\n                _xhrTimeout = undefValue;\r\n                _disableXhrSync = undefValue;\r\n                _disableFetchKeepAlive = undefValue;\r\n                _canHaveReducedPayload = undefValue;\r\n                _addNoResponse = undefValue;\r\n                _unloadHooks = [];\r\n                _sendHook = undefValue;\r\n                _sendListener = undefValue;\r\n                _responseHandlers = [];\r\n                _isInitialized = false;\r\n                _timeoutWrapper = createTimeoutWrapper();\r\n                _excludeCsMetaData = false;\r\n                _sendPostMgr = null;\r\n            }\r\n            function _fetchOnComplete(response, onComplete, resValue, payload) {\r\n                var handleResponse = function (status, headerMap, responseText) {\r\n                    _doOnComplete(onComplete, status, headerMap, responseText);\r\n                    _handleCollectorResponse(responseText);\r\n                };\r\n                var headerMap = {};\r\n                var headers = response[_DYN_HEADERS /* @min:%2eheaders */];\r\n                if (headers) {\r\n                    headers[\"forEach\"](function (value, name) {\r\n                        headerMap[name] = value;\r\n                    });\r\n                }\r\n                handleResponse(response.status, headerMap, resValue || STR_EMPTY);\r\n            }\r\n            function _xhrOnComplete(request, oncomplete, payload) {\r\n                var response = getResponseText(request);\r\n                _doOnComplete(oncomplete, request.status, _getAllResponseHeaders(request, true), response);\r\n                _handleCollectorResponse(response);\r\n            }\r\n            function _doOnComplete(oncomplete, status, headers, response) {\r\n                try {\r\n                    oncomplete(status, headers, response);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 518 /* _eExtendedInternalMessageId.SendPostOnCompleteFailure */, dumpObj(e));\r\n                }\r\n            }\r\n            function _onBeaconRetry(payload, onComplete, canSend) {\r\n                // Custom headers not supported in sendBeacon payload.headers would be ignored\r\n                var internalPayloadData = payload;\r\n                var status = 200;\r\n                var thePayload = internalPayloadData[_DYN__THE_PAYLOAD /* @min:%2e_thePayload */];\r\n                var theUrl = payload[_DYN_URL_STRING /* @min:%2eurlString */] + (_addNoResponse ? _noResponseQs : STR_EMPTY);\r\n                try {\r\n                    var nav_1 = getNavigator();\r\n                    if (thePayload) {\r\n                        var persistStorage = !!_core.getPlugin(\"LocalStorage\");\r\n                        // Failed to send entire payload so try and split data and try to send as much events as possible\r\n                        var droppedBatches_1 = [];\r\n                        var sentBatches_1 = [];\r\n                        arrForEach(thePayload[_DYN_BATCHES /* @min:%2ebatches */], function (theBatch) {\r\n                            if (droppedBatches_1 && theBatch && theBatch[_DYN_COUNT /* @min:%2ecount */]() > 0) {\r\n                                var theEvents = theBatch[_DYN_EVENTS /* @min:%2eevents */]();\r\n                                for (var lp = 0; lp < theEvents[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                                    if (!nav_1.sendBeacon(theUrl, _serializer.getEventBlob(theEvents[lp]))) {\r\n                                        // Can't send anymore, so split the batch and drop the rest\r\n                                        droppedBatches_1[_DYN_PUSH /* @min:%2epush */](theBatch[_DYN_SPLIT /* @min:%2esplit */](lp));\r\n                                        break;\r\n                                    }\r\n                                    else {\r\n                                        sentBatches_1[_DYN_PUSH /* @min:%2epush */](theBatch[lp]);\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                // Remove all of the events from the existing batch in the payload as the copy includes the original\r\n                                droppedBatches_1[_DYN_PUSH /* @min:%2epush */](theBatch[_DYN_SPLIT /* @min:%2esplit */](0));\r\n                            }\r\n                        });\r\n                        if (sentBatches_1[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                            // Update the payload with the sent batches\r\n                            thePayload.sentEvts = sentBatches_1;\r\n                        }\r\n                        if (!persistStorage) {\r\n                            _sendBatchesNotification(droppedBatches_1, 8003 /* EventBatchNotificationReason.SizeLimitExceeded */, thePayload[_DYN_SEND_TYPE /* @min:%2esendType */], true);\r\n                        }\r\n                    }\r\n                    else {\r\n                        status = 0;\r\n                    }\r\n                }\r\n                catch (ex) {\r\n                    _warnToConsole(_logger, \"Failed to send telemetry using sendBeacon API. Ex:\" + dumpObj(ex));\r\n                    status = 0;\r\n                }\r\n                finally {\r\n                    _doOnComplete(onComplete, status, {}, STR_EMPTY);\r\n                }\r\n            }\r\n            function _isBeaconPayload(sendType) {\r\n                // Sync Fetch has the same payload limitation as sendBeacon -- 64kb limit, so treat both as a beacon send\r\n                return sendType === 2 /* EventSendType.SendBeacon */ || sendType === 3 /* EventSendType.SyncFetch */;\r\n            }\r\n            function _adjustSendType(sendType) {\r\n                if (_isUnloading && _isBeaconPayload(sendType)) {\r\n                    sendType = 2 /* EventSendType.SendBeacon */;\r\n                }\r\n                return sendType;\r\n            }\r\n            _self[_DYN_ADD_HEADER /* @min:%2eaddHeader */] = function (name, value) {\r\n                _headers[name] = value;\r\n            };\r\n            _self.removeHeader = function (name) {\r\n                delete _headers[name];\r\n            };\r\n            _self[_DYN_CAN_SEND_REQUEST /* @min:%2ecanSendRequest */] = function () {\r\n                return _hasIdleConnection() && _clockSkewManager[_DYN_ALLOW_REQUEST_SENDIN0 /* @min:%2eallowRequestSending */]();\r\n            };\r\n            _self[_DYN_SEND_QUEUED_REQUESTS /* @min:%2esendQueuedRequests */] = function (sendType, sendReason) {\r\n                if (isUndefined(sendType)) {\r\n                    sendType = 0 /* EventSendType.Batched */;\r\n                }\r\n                if (_isUnloading) {\r\n                    sendType = _adjustSendType(sendType);\r\n                    sendReason = 2 /* SendRequestReason.Unload */;\r\n                }\r\n                if (_canSendPayload(_batchQueue, sendType, 0)) {\r\n                    _sendBatches(_clearQueue(), 0, false, sendType, sendReason || 0 /* SendRequestReason.Undefined */);\r\n                }\r\n            };\r\n            _self[_DYN_IS_COMPLETELY_IDLE /* @min:%2eisCompletelyIdle */] = function () {\r\n                return !_paused && _outstandingRequests === 0 && _batchQueue[_DYN_LENGTH /* @min:%2elength */] === 0;\r\n            };\r\n            _self[_DYN_SET_UNLOADING /* @min:%2esetUnloading */] = function (value) {\r\n                _isUnloading = value;\r\n            };\r\n            _self.addBatch = function (theBatch) {\r\n                if (theBatch && theBatch[_DYN_COUNT /* @min:%2ecount */]() > 0) {\r\n                    // Try and kill the event faster\r\n                    if (_killSwitch.isTenantKilled(theBatch[_DYN_I_KEY /* @min:%2eiKey */]())) {\r\n                        return false;\r\n                    }\r\n                    _batchQueue[_DYN_PUSH /* @min:%2epush */](theBatch);\r\n                }\r\n                return true;\r\n            };\r\n            /**\r\n             * Queue all the remaining requests to be sent. The requests will be\r\n             * sent using HTML5 Beacons if they are available.\r\n             */\r\n            _self.teardown = function () {\r\n                if (_batchQueue[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    _sendBatches(_clearQueue(), 0, true, 2 /* EventSendType.SendBeacon */, 2 /* SendRequestReason.Unload */);\r\n                }\r\n                arrForEach(_unloadHooks, function (hook) {\r\n                    hook && hook.rm && hook.rm();\r\n                });\r\n                _unloadHooks = [];\r\n            };\r\n            /**\r\n             * Pause the sending of requests. No new requests will be sent.\r\n             */\r\n            _self.pause = function () {\r\n                _paused = true;\r\n            };\r\n            /**\r\n             * Resume the sending of requests.\r\n             */\r\n            _self[_DYN_RESUME /* @min:%2eresume */] = function () {\r\n                _paused = false;\r\n                _self[_DYN_SEND_QUEUED_REQUESTS /* @min:%2esendQueuedRequests */](0 /* EventSendType.Batched */, 4 /* SendRequestReason.Resumed */);\r\n            };\r\n            /**\r\n             * Sends a request synchronously to the Aria collector. This api is used to send\r\n             * a request containing a single immediate event.\r\n             *\r\n             * @param batch - The request to be sent.\r\n             * @param sendReason   - The token used to send the request.\r\n             */\r\n            _self[_DYN_SEND_SYNCHRONOUS_BAT10 /* @min:%2esendSynchronousBatch */] = function (batch, sendType, sendReason) {\r\n                // This will not take into account the max connections restriction. Since this is sync, we can\r\n                // only send one of this request at a time and thus should not worry about multiple connections\r\n                // being used to send synchronous events.\r\n                // Increment active connection since we are still going to use a connection to send the request.\r\n                if (batch && batch[_DYN_COUNT /* @min:%2ecount */]() > 0) {\r\n                    if (isNullOrUndefined(sendType)) {\r\n                        sendType = 1 /* EventSendType.Synchronous */;\r\n                    }\r\n                    if (_isUnloading) {\r\n                        sendType = _adjustSendType(sendType);\r\n                        sendReason = 2 /* SendRequestReason.Unload */;\r\n                    }\r\n                    // For sync requests we will not wait for the clock skew.\r\n                    _sendBatches([batch], 0, false, sendType, sendReason || 0 /* SendRequestReason.Undefined */);\r\n                }\r\n            };\r\n            function _hasIdleConnection() {\r\n                return !_paused && _outstandingRequests < maxConnections;\r\n            }\r\n            function _clearQueue() {\r\n                var theQueue = _batchQueue;\r\n                _batchQueue = [];\r\n                return theQueue;\r\n            }\r\n            function _canSendPayload(theBatches, sendType, retryCnt) {\r\n                var result = false;\r\n                if (theBatches && theBatches[_DYN_LENGTH /* @min:%2elength */] > 0 && !_paused && _sendInterfaces[sendType] && _serializer) {\r\n                    // Always attempt to send synchronous events don't wait for idle or clockSkew\r\n                    // and don't block retry requests if clockSkew is not yet set\r\n                    result = (sendType !== 0 /* EventSendType.Batched */) || (_hasIdleConnection() && (retryCnt > 0 || _clockSkewManager[_DYN_ALLOW_REQUEST_SENDIN0 /* @min:%2eallowRequestSending */]()));\r\n                }\r\n                return result;\r\n            }\r\n            function _createDebugBatches(theBatches) {\r\n                var values = {};\r\n                if (theBatches) {\r\n                    arrForEach(theBatches, function (theBatch, idx) {\r\n                        values[idx] = {\r\n                            iKey: theBatch[_DYN_I_KEY /* @min:%2eiKey */](),\r\n                            evts: theBatch[_DYN_EVENTS /* @min:%2eevents */]()\r\n                        };\r\n                    });\r\n                }\r\n                return values;\r\n            }\r\n            function _sendBatches(theBatches, retryCount, isTeardown, sendType, sendReason) {\r\n                if (!theBatches || theBatches[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n                    // Nothing to do\r\n                    return;\r\n                }\r\n                if (_paused) {\r\n                    _sendBatchesNotification(theBatches, 1 /* EventBatchNotificationReason.Paused */, sendType);\r\n                    return;\r\n                }\r\n                // Make sure that if we are unloading the sendType is a supported version\r\n                sendType = _adjustSendType(sendType);\r\n                try {\r\n                    var orgBatches_1 = theBatches;\r\n                    var isSynchronous_1 = sendType !== 0 /* EventSendType.Batched */;\r\n                    doPerf(_core, function () { return \"HttpManager:_sendBatches\"; }, function (perfEvt) {\r\n                        if (perfEvt) {\r\n                            // Perf Monitoring is enabled, so create a \"Quick\" copy of the original batches so we still report\r\n                            // the original values as part of the perfEvent. This is because theBatches uses .shift() to remove each\r\n                            // batch as they are processed - removing from the original array, so by the time the _createDebugBatches()\r\n                            // function is called the passed in value has changed and therefore the reported value for the perfEvent is incorrect\r\n                            theBatches = theBatches.slice(0);\r\n                        }\r\n                        var droppedBatches = [];\r\n                        var thePayload = null;\r\n                        var serializationStart = getTime();\r\n                        var sendInterface = _sendInterfaces[sendType] || (isSynchronous_1 ? _sendInterfaces[1 /* EventSendType.Synchronous */] : _sendInterfaces[0 /* EventSendType.Batched */]);\r\n                        var sendTransport = sendInterface && sendInterface[_DYN__TRANSPORT /* @min:%2e_transport */];\r\n                        // Sync Fetch has the same payload limitation as sendBeacon -- 64kb limit\r\n                        var isReducedPayload = _canHaveReducedPayload && (_isUnloading || _isBeaconPayload(sendType) || (sendTransport === 3 /* TransportType.Beacon */ || (sendInterface._isSync && sendTransport === 2 /* TransportType.Fetch */)));\r\n                        while (_canSendPayload(theBatches, sendType, retryCount)) {\r\n                            var theBatch = theBatches.shift();\r\n                            if (theBatch && theBatch[_DYN_COUNT /* @min:%2ecount */]() > 0) {\r\n                                if (!_killSwitch.isTenantKilled(theBatch[_DYN_I_KEY /* @min:%2eiKey */]())) {\r\n                                    // Make sure we have a payload object\r\n                                    thePayload = thePayload || _serializer[_DYN_CREATE_PAYLOAD /* @min:%2ecreatePayload */](retryCount, isTeardown, isSynchronous_1, isReducedPayload, sendReason, sendType);\r\n                                    // Add the batch to the current payload\r\n                                    if (!_serializer.appendPayload(thePayload, theBatch, maxEventsPerBatch)) {\r\n                                        // Entire batch was not added so send the payload and retry adding this batch\r\n                                        _doPayloadSend(thePayload, serializationStart, getTime(), sendReason);\r\n                                        serializationStart = getTime();\r\n                                        theBatches = [theBatch][_DYN_CONCAT /* @min:%2econcat */](theBatches);\r\n                                        thePayload = null;\r\n                                    }\r\n                                    else if (thePayload.overflow !== null) {\r\n                                        // Total Payload size was exceeded so send the payload and add the unsent as the next batch to send\r\n                                        theBatches = [thePayload.overflow][_DYN_CONCAT /* @min:%2econcat */](theBatches);\r\n                                        thePayload.overflow = null;\r\n                                        _doPayloadSend(thePayload, serializationStart, getTime(), sendReason);\r\n                                        serializationStart = getTime();\r\n                                        thePayload = null;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    droppedBatches[_DYN_PUSH /* @min:%2epush */](theBatch);\r\n                                }\r\n                            }\r\n                        }\r\n                        // Make sure to flush any remaining payload\r\n                        if (thePayload) {\r\n                            _doPayloadSend(thePayload, serializationStart, getTime(), sendReason);\r\n                        }\r\n                        if (theBatches[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                            // Add any unsent batches back to the head of the queue\r\n                            _batchQueue = theBatches[_DYN_CONCAT /* @min:%2econcat */](_batchQueue);\r\n                        }\r\n                        // Now send notification about any dropped events\r\n                        _sendBatchesNotification(droppedBatches, 8004 /* EventBatchNotificationReason.KillSwitch */, sendType);\r\n                    }, function () { return ({ batches: _createDebugBatches(orgBatches_1), retryCount: retryCount, isTeardown: isTeardown, isSynchronous: isSynchronous_1, sendReason: sendReason, useSendBeacon: _isBeaconPayload(sendType), sendType: sendType }); }, !isSynchronous_1);\r\n                }\r\n                catch (ex) {\r\n                    _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 48 /* _eInternalMessageId.CannotSerializeObject */, \"Unexpected Exception sending batch: \" + dumpObj(ex));\r\n                }\r\n            }\r\n            function _buildRequestDetails(thePayload, useHeaders) {\r\n                var requestDetails = {\r\n                    url: _urlString,\r\n                    hdrs: {},\r\n                    useHdrs: false // Assume no headers\r\n                };\r\n                if (!useHeaders) {\r\n                    // Attempt to map headers to a query string if possible\r\n                    objForEachKey(_headers, function (name, value) {\r\n                        if (_collectorHeaderToQs[name]) {\r\n                            _addRequestDetails(requestDetails, _collectorHeaderToQs[name], value, false);\r\n                        }\r\n                        else {\r\n                            // No mapping, so just include in the headers anyway (may not get sent if using sendBeacon())\r\n                            requestDetails[_DYN_HDRS /* @min:%2ehdrs */][name] = value;\r\n                            requestDetails[_DYN_USE_HDRS /* @min:%2euseHdrs */] = true;\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    // Copy the pre-defined headers into the payload headers\r\n                    requestDetails[_DYN_HDRS /* @min:%2ehdrs */] = extend(requestDetails[_DYN_HDRS /* @min:%2ehdrs */], _headers);\r\n                    requestDetails.useHdrs = (objKeys(requestDetails.hdrs)[_DYN_LENGTH /* @min:%2elength */] > 0);\r\n                }\r\n                _addRequestDetails(requestDetails, STR_CLIENT_ID, \"NO_AUTH\", useHeaders);\r\n                _addRequestDetails(requestDetails, STR_CLIENT_VERSION, FullVersionString, useHeaders);\r\n                var apiQsKeys = STR_EMPTY;\r\n                arrForEach(thePayload.apiKeys, function (apiKey) {\r\n                    if (apiQsKeys[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                        apiQsKeys += \",\";\r\n                    }\r\n                    apiQsKeys += apiKey;\r\n                });\r\n                _addRequestDetails(requestDetails, STR_API_KEY, apiQsKeys, useHeaders);\r\n                _addRequestDetails(requestDetails, STR_UPLOAD_TIME, dateNow().toString(), useHeaders);\r\n                var msfpc = _getMsfpc(thePayload);\r\n                if (isValueAssigned(msfpc)) {\r\n                    requestDetails.url += \"&ext.intweb.msfpc=\" + msfpc;\r\n                }\r\n                if (_clockSkewManager[_DYN_SHOULD_ADD_CLOCK_SKE1 /* @min:%2eshouldAddClockSkewHeaders */]()) {\r\n                    _addRequestDetails(requestDetails, STR_TIME_DELTA_TO_APPLY, _clockSkewManager[_DYN_GET_CLOCK_SKEW_HEADE2 /* @min:%2egetClockSkewHeaderValue */](), useHeaders);\r\n                }\r\n                if (_core[_DYN_GET_WPARAM /* @min:%2egetWParam */]) {\r\n                    var wParam = _core[_DYN_GET_WPARAM /* @min:%2egetWParam */]();\r\n                    if (wParam >= 0) {\r\n                        requestDetails.url += \"&w=\" + wParam;\r\n                    }\r\n                }\r\n                for (var i = 0; i < _queryStringParameters[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n                    requestDetails.url += \"&\" + _queryStringParameters[i].name + \"=\" + _queryStringParameters[i].value;\r\n                }\r\n                return requestDetails;\r\n            }\r\n            function _setTimingValue(timings, name, value) {\r\n                timings[name] = timings[name] || {};\r\n                timings[name][_postManager.identifier] = value;\r\n            }\r\n            function _doPayloadSend(thePayload, serializationStart, serializationCompleted, sendReason) {\r\n                if (thePayload && thePayload.payloadBlob && thePayload.payloadBlob[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var useSendHook_1 = !!_sendHook;\r\n                    var sendInterface_1 = _sendInterfaces[thePayload.sendType];\r\n                    // Send all data using a beacon style transport if closing mode is on or channel was teared down\r\n                    if (!_isBeaconPayload(thePayload[_DYN_SEND_TYPE /* @min:%2esendType */]) && thePayload[_DYN_IS_BEACON /* @min:%2eisBeacon */] && thePayload.sendReason === 2 /* SendRequestReason.Unload */) {\r\n                        sendInterface_1 = _sendInterfaces[2 /* EventSendType.SendBeacon */] || _sendInterfaces[3 /* EventSendType.SyncFetch */] || sendInterface_1;\r\n                    }\r\n                    var useHeaders_1 = _useHeaders;\r\n                    // Disable header usage if we know we are using sendBeacon as additional headers are not supported\r\n                    if (thePayload.isBeacon || sendInterface_1[_DYN__TRANSPORT /* @min:%2e_transport */] === 3 /* TransportType.Beacon */) {\r\n                        useHeaders_1 = false;\r\n                    }\r\n                    var requestDetails_1 = _buildRequestDetails(thePayload, useHeaders_1);\r\n                    useHeaders_1 = useHeaders_1 || requestDetails_1[_DYN_USE_HDRS /* @min:%2euseHdrs */];\r\n                    var sendEventStart_1 = getTime();\r\n                    doPerf(_core, function () { return \"HttpManager:_doPayloadSend\"; }, function () {\r\n                        // Increment the send attempt count and add timings after packaging (So it's not serialized in the 1st attempt)\r\n                        for (var batchLp = 0; batchLp < thePayload.batches[_DYN_LENGTH /* @min:%2elength */]; batchLp++) {\r\n                            var theBatch = thePayload[_DYN_BATCHES /* @min:%2ebatches */][batchLp];\r\n                            var theEvents = theBatch[_DYN_EVENTS /* @min:%2eevents */]();\r\n                            for (var evtLp = 0; evtLp < theEvents[_DYN_LENGTH /* @min:%2elength */]; evtLp++) {\r\n                                var telemetryItem = theEvents[evtLp];\r\n                                if (_enableEventTimings) {\r\n                                    var timings = telemetryItem[_DYN_TIMINGS /* @min:%2etimings */] = telemetryItem[_DYN_TIMINGS /* @min:%2etimings */] || {};\r\n                                    _setTimingValue(timings, \"sendEventStart\", sendEventStart_1);\r\n                                    _setTimingValue(timings, \"serializationStart\", serializationStart);\r\n                                    _setTimingValue(timings, \"serializationCompleted\", serializationCompleted);\r\n                                }\r\n                                telemetryItem[strSendAttempt] > 0 ? telemetryItem[strSendAttempt]++ : telemetryItem[strSendAttempt] = 1;\r\n                            }\r\n                        }\r\n                        // Note: always sending this notification in a synchronous manner.\r\n                        _sendBatchesNotification(thePayload[_DYN_BATCHES /* @min:%2ebatches */], (1000 /* EventBatchNotificationReason.SendingUndefined */ + (sendReason || 0 /* SendRequestReason.Undefined */)), thePayload[_DYN_SEND_TYPE /* @min:%2esendType */], true);\r\n                        // Disabling the use of const because of Issue:\r\n                        // - Task 9227844: [1DS] Some environments and packagers automatically \"freeze\" objects which are defined as const which causes any mutations to throw\r\n                        // eslint-disable-next-line prefer-const\r\n                        var orgPayloadData = {\r\n                            data: thePayload[_DYN_PAYLOAD_BLOB /* @min:%2epayloadBlob */],\r\n                            urlString: requestDetails_1.url,\r\n                            headers: requestDetails_1[_DYN_HDRS /* @min:%2ehdrs */],\r\n                            _thePayload: thePayload,\r\n                            _sendReason: sendReason,\r\n                            timeout: _xhrTimeout,\r\n                            disableXhrSync: _disableXhrSync,\r\n                            disableFetchKeepAlive: _disableFetchKeepAlive\r\n                        };\r\n                        // Only automatically add the following headers if already sending headers and we are not attempting to avoid an options call\r\n                        if (useHeaders_1) {\r\n                            if (!_hasHeader(orgPayloadData[_DYN_HEADERS /* @min:%2eheaders */], STR_CACHE_CONTROL)) {\r\n                                orgPayloadData[_DYN_HEADERS /* @min:%2eheaders */][STR_CACHE_CONTROL] = DEFAULT_CACHE_CONTROL;\r\n                            }\r\n                            if (!_hasHeader(orgPayloadData[_DYN_HEADERS /* @min:%2eheaders */], STR_CONTENT_TYPE_HEADER)) {\r\n                                orgPayloadData[_DYN_HEADERS /* @min:%2eheaders */][STR_CONTENT_TYPE_HEADER] = DEFAULT_CONTENT_TYPE;\r\n                            }\r\n                        }\r\n                        var sender = null;\r\n                        if (sendInterface_1) {\r\n                            // Send sync requests if the request is immediate or we are tearing down telemetry.\r\n                            sender = function (payload) {\r\n                                // Notify the clock skew manager that we are sending the first request (Potentially blocking all further requests)\r\n                                _clockSkewManager[_DYN_FIRST_REQUEST_SENT /* @min:%2efirstRequestSent */]();\r\n                                var onComplete = function (status, headers) {\r\n                                    _retryRequestIfNeeded(status, headers, thePayload, sendReason);\r\n                                };\r\n                                var isSync = thePayload[_DYN_IS_TEARDOWN /* @min:%2eisTeardown */] || thePayload[_DYN_IS_SYNC /* @min:%2eisSync */];\r\n                                try {\r\n                                    sendInterface_1.sendPOST(payload, onComplete, isSync);\r\n                                    if (_sendListener) {\r\n                                        // Send the original payload to the listener\r\n                                        _sendListener(orgPayloadData, payload, isSync, thePayload[_DYN_IS_BEACON /* @min:%2eisBeacon */]);\r\n                                    }\r\n                                }\r\n                                catch (ex) {\r\n                                    _warnToConsole(_logger, \"Unexpected exception sending payload. Ex:\" + dumpObj(ex));\r\n                                    _doOnComplete(onComplete, 0, {});\r\n                                }\r\n                            };\r\n                        }\r\n                        doPerf(_core, function () { return \"HttpManager:_doPayloadSend.sender\"; }, function () {\r\n                            if (sender) {\r\n                                if (thePayload[_DYN_SEND_TYPE /* @min:%2esendType */] === 0 /* EventSendType.Batched */) {\r\n                                    _outstandingRequests++;\r\n                                }\r\n                                // Only call the hook if it's defined and we are not using sendBeacon as additional headers are not supported\r\n                                if (useSendHook_1 && !thePayload.isBeacon && sendInterface_1[_DYN__TRANSPORT /* @min:%2e_transport */] !== 3 /* TransportType.Beacon */) {\r\n                                    // Create a new IPayloadData that is sent into the hook method, so that the hook method\r\n                                    // can't change the object references to the orgPayloadData (it can still change the content -- mainly the headers)\r\n                                    // Disabling the use of const because of Issue:\r\n                                    // - Task 9227844: [1DS] Some environments and packagers automatically \"freeze\" objects which are defined as const which causes any mutations to throw\r\n                                    // eslint-disable-next-line prefer-const\r\n                                    var hookData_1 = {\r\n                                        data: orgPayloadData[_DYN_DATA /* @min:%2edata */],\r\n                                        urlString: orgPayloadData[_DYN_URL_STRING /* @min:%2eurlString */],\r\n                                        headers: extend({}, orgPayloadData[_DYN_HEADERS /* @min:%2eheaders */]),\r\n                                        timeout: orgPayloadData[_DYN_TIMEOUT /* @min:%2etimeout */],\r\n                                        disableXhrSync: orgPayloadData[_DYN_DISABLE_XHR_SYNC /* @min:%2edisableXhrSync */],\r\n                                        disableFetchKeepAlive: orgPayloadData[_DYN_DISABLE_FETCH_KEEP_A6 /* @min:%2edisableFetchKeepAlive */]\r\n                                    };\r\n                                    var senderCalled_1 = false;\r\n                                    doPerf(_core, function () { return \"HttpManager:_doPayloadSend.sendHook\"; }, function () {\r\n                                        try {\r\n                                            _sendHook(hookData_1, function (payload) {\r\n                                                senderCalled_1 = true;\r\n                                                // Add back the internal properties\r\n                                                if (!_customHttpInterface && !payload[_DYN__THE_PAYLOAD /* @min:%2e_thePayload */]) {\r\n                                                    payload[_DYN__THE_PAYLOAD /* @min:%2e_thePayload */] = payload[_DYN__THE_PAYLOAD /* @min:%2e_thePayload */] || orgPayloadData[_DYN__THE_PAYLOAD /* @min:%2e_thePayload */];\r\n                                                    payload[_DYN__SEND_REASON /* @min:%2e_sendReason */] = payload[_DYN__SEND_REASON /* @min:%2e_sendReason */] || orgPayloadData[_DYN__SEND_REASON /* @min:%2e_sendReason */];\r\n                                                }\r\n                                                sender(payload);\r\n                                            }, thePayload.isSync || thePayload[_DYN_IS_TEARDOWN /* @min:%2eisTeardown */]);\r\n                                        }\r\n                                        catch (ex) {\r\n                                            if (!senderCalled_1) {\r\n                                                // The hook never called the sender -- assume that it never will\r\n                                                sender(orgPayloadData);\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                }\r\n                                else {\r\n                                    sender(orgPayloadData);\r\n                                }\r\n                            }\r\n                        });\r\n                    }, function () { return ({ thePayload: thePayload, serializationStart: serializationStart, serializationCompleted: serializationCompleted, sendReason: sendReason }); }, thePayload[_DYN_IS_SYNC /* @min:%2eisSync */]);\r\n                }\r\n                if (thePayload.sizeExceed && thePayload.sizeExceed[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    // Ensure that we send any discard events for oversize events even when there was no payload to send\r\n                    _sendBatchesNotification(thePayload.sizeExceed, 8003 /* EventBatchNotificationReason.SizeLimitExceeded */, thePayload[_DYN_SEND_TYPE /* @min:%2esendType */]);\r\n                }\r\n                if (thePayload.failedEvts && thePayload.failedEvts[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    // Ensure that we send any discard events for events that could not be serialized even when there was no payload to send\r\n                    _sendBatchesNotification(thePayload.failedEvts, 8002 /* EventBatchNotificationReason.InvalidEvent */, thePayload[_DYN_SEND_TYPE /* @min:%2esendType */]);\r\n                }\r\n            }\r\n            function _addEventCompletedTimings(theEvents, sendEventCompleted) {\r\n                if (_enableEventTimings) {\r\n                    arrForEach(theEvents, function (theEvent) {\r\n                        var timings = theEvent[_DYN_TIMINGS /* @min:%2etimings */] = theEvent[_DYN_TIMINGS /* @min:%2etimings */] || {};\r\n                        _setTimingValue(timings, \"sendEventCompleted\", sendEventCompleted);\r\n                    });\r\n                }\r\n            }\r\n            function _retryRequestIfNeeded(status, headers, thePayload, sendReason) {\r\n                var reason = 9000 /* EventBatchNotificationReason.ResponseFailure */;\r\n                var droppedBatches = null;\r\n                var isRetrying = false;\r\n                var backOffTrans = false;\r\n                try {\r\n                    var shouldRetry = true;\r\n                    if (typeof status !== strUndefined) {\r\n                        if (headers) {\r\n                            _clockSkewManager[_DYN_SET_CLOCK_SKEW /* @min:%2esetClockSkew */](headers[STR_TIME_DELTA_HEADER]);\r\n                            var killDuration = headers[STR_KILL_DURATION_HEADER] || headers[\"kill-duration-seconds\"];\r\n                            arrForEach(_killSwitch[_DYN_SET_KILL_SWITCH_TENA11 /* @min:%2esetKillSwitchTenants */](headers[STR_KILL_TOKENS_HEADER], killDuration), function (killToken) {\r\n                                arrForEach(thePayload[_DYN_BATCHES /* @min:%2ebatches */], function (theBatch) {\r\n                                    if (theBatch[_DYN_I_KEY /* @min:%2eiKey */]() === killToken) {\r\n                                        // Make sure we have initialized the array\r\n                                        droppedBatches = droppedBatches || [];\r\n                                        // Create a copy of the batch with all of the events (and more importantly the action functions)\r\n                                        var removedEvents = theBatch[_DYN_SPLIT /* @min:%2esplit */](0);\r\n                                        // And then remove the events for the payload batch and reduce the actual number of processed\r\n                                        thePayload.numEvents -= removedEvents[_DYN_COUNT /* @min:%2ecount */]();\r\n                                        droppedBatches[_DYN_PUSH /* @min:%2epush */](removedEvents);\r\n                                    }\r\n                                });\r\n                            });\r\n                        }\r\n                        // Disabling triple-equals rule to avoid httpOverrides from failing because they are returning a string value\r\n                        // tslint:disable-next-line:triple-equals\r\n                        if (status == 200 || status == 204) {\r\n                            // Response was successfully sent\r\n                            reason = 200 /* EventBatchNotificationReason.Complete */;\r\n                            return;\r\n                        }\r\n                        if (!retryPolicyShouldRetryForStatus(status) || thePayload.numEvents <= 0) {\r\n                            // Only retry for specific response codes and if there is still events after kill switch processing\r\n                            shouldRetry = false;\r\n                        }\r\n                        // Derive the notification response from the HttpStatus Code\r\n                        reason = 9000 /* EventBatchNotificationReason.ResponseFailure */ + (status % 1000);\r\n                    }\r\n                    if (shouldRetry) {\r\n                        // The events should be retried -- so change notification to requeue them\r\n                        reason = 100 /* EventBatchNotificationReason.RequeueEvents */;\r\n                        var retryCount_1 = thePayload.retryCnt;\r\n                        if (thePayload[_DYN_SEND_TYPE /* @min:%2esendType */] === 0 /* EventSendType.Batched */) {\r\n                            // attempt to resend the entire batch\r\n                            if (retryCount_1 < maxRequestRetriesBeforeBackoff) {\r\n                                isRetrying = true;\r\n                                _doAction(function () {\r\n                                    // try to resend the same batches\r\n                                    if (thePayload[_DYN_SEND_TYPE /* @min:%2esendType */] === 0 /* EventSendType.Batched */) {\r\n                                        // Reduce the outstanding request count (if this was an async request) as we didn't reduce the count\r\n                                        // previously and we are about to reschedule our retry attempt and we want an attempt to send\r\n                                        // to occur, it's also required to ensure that a follow up handleRequestFinished() call occurs\r\n                                        _outstandingRequests--;\r\n                                    }\r\n                                    _sendBatches(thePayload[_DYN_BATCHES /* @min:%2ebatches */], retryCount_1 + 1, thePayload[_DYN_IS_TEARDOWN /* @min:%2eisTeardown */], _isUnloading ? 2 /* EventSendType.SendBeacon */ : thePayload[_DYN_SEND_TYPE /* @min:%2esendType */], 5 /* SendRequestReason.Retry */);\r\n                                }, _isUnloading, retryPolicyGetMillisToBackoffForRetry(retryCount_1));\r\n                            }\r\n                            else {\r\n                                backOffTrans = true;\r\n                                if (_isUnloading) {\r\n                                    // we are unloading so don't try and requeue the events otherwise let the events get requeued and resent during the backoff sending\r\n                                    // This will also cause the events to be purged based on the priority (if necessary)\r\n                                    reason = 8001 /* EventBatchNotificationReason.NonRetryableStatus */;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                finally {\r\n                    if (!isRetrying) {\r\n                        // Make sure the clockSkewManager doesn't blocking further sending of requests once we have a proper response\r\n                        // This won't override any previously sent clock Skew value\r\n                        _clockSkewManager[_DYN_SET_CLOCK_SKEW /* @min:%2esetClockSkew */]();\r\n                        _handleRequestFinished(thePayload, reason, sendReason, backOffTrans);\r\n                    }\r\n                    _sendBatchesNotification(droppedBatches, 8004 /* EventBatchNotificationReason.KillSwitch */, thePayload[_DYN_SEND_TYPE /* @min:%2esendType */]);\r\n                }\r\n            }\r\n            function _handleRequestFinished(thePayload, batchReason, sendReason, backOffTrans) {\r\n                try {\r\n                    if (backOffTrans) {\r\n                        // Slow down the transmission requests\r\n                        _postManager[_DYN__BACK_OFF_TRANSMISSI12 /* @min:%2e_backOffTransmission */]();\r\n                    }\r\n                    var theBatches = thePayload[_DYN_BATCHES /* @min:%2ebatches */];\r\n                    if (batchReason === 200 /* EventBatchNotificationReason.Complete */) {\r\n                        theBatches = thePayload.sentEvts || thePayload[_DYN_BATCHES /* @min:%2ebatches */];\r\n                        if (!backOffTrans && !thePayload[_DYN_IS_SYNC /* @min:%2eisSync */]) {\r\n                            // We have a successful async response, so the lets open the floodgates\r\n                            // The reason for checking isSync is to avoid unblocking if beacon send occurred as it\r\n                            // doesn't wait for a response.\r\n                            _postManager._clearBackOff();\r\n                        }\r\n                        _addCompleteTimings(theBatches);\r\n                    }\r\n                    // Send the notifications synchronously\r\n                    _sendBatchesNotification(theBatches, batchReason, thePayload[_DYN_SEND_TYPE /* @min:%2esendType */], true);\r\n                }\r\n                finally {\r\n                    if (thePayload[_DYN_SEND_TYPE /* @min:%2esendType */] === 0 /* EventSendType.Batched */) {\r\n                        // we always need to decrement this value otherwise the httpmanager locks up and won't send any more events\r\n                        _outstandingRequests--;\r\n                        // Don't try to send additional queued events if this is a retry operation as the retried\r\n                        // response will eventually call _handleRequestFinished for the retried event\r\n                        if (sendReason !== 5 /* SendRequestReason.Retry */) {\r\n                            // Try and send any other queued batched events\r\n                            _self.sendQueuedRequests(thePayload[_DYN_SEND_TYPE /* @min:%2esendType */], sendReason);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            function _addCompleteTimings(theBatches) {\r\n                if (_enableEventTimings) {\r\n                    var sendEventCompleted_1 = getTime();\r\n                    arrForEach(theBatches, function (theBatch) {\r\n                        if (theBatch && theBatch[_DYN_COUNT /* @min:%2ecount */]() > 0) {\r\n                            _addEventCompletedTimings(theBatch[_DYN_EVENTS /* @min:%2eevents */](), sendEventCompleted_1);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            function _doAction(cb, isSync, interval) {\r\n                if (isSync) {\r\n                    cb();\r\n                }\r\n                else {\r\n                    _timeoutWrapper.set(cb, interval);\r\n                }\r\n            }\r\n            function _getMsfpc(thePayload) {\r\n                for (var lp = 0; lp < thePayload.batches[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                    var msfpc = thePayload[_DYN_BATCHES /* @min:%2ebatches */][lp].Msfpc();\r\n                    if (msfpc) {\r\n                        return encodeURIComponent(msfpc);\r\n                    }\r\n                }\r\n                return STR_EMPTY;\r\n            }\r\n            function _handleCollectorResponse(responseText) {\r\n                var responseHandlers = _responseHandlers;\r\n                try {\r\n                    for (var i = 0; i < responseHandlers[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n                        try {\r\n                            responseHandlers[i](responseText);\r\n                        }\r\n                        catch (e) {\r\n                            _throwInternal(_logger, 1 /* eLoggingSeverity.CRITICAL */, 519 /* _eExtendedInternalMessageId.PostResponseHandler */, \"Response handler failed: \" + e);\r\n                        }\r\n                    }\r\n                    if (responseText) {\r\n                        var response = JSON.parse(responseText);\r\n                        if (isValueAssigned(response.webResult) && isValueAssigned(response.webResult[STR_MSFPC])) {\r\n                            // Set cookie\r\n                            _cookieMgr.set(\"MSFPC\", response.webResult[STR_MSFPC], 365 * 86400);\r\n                        }\r\n                    }\r\n                }\r\n                catch (ex) {\r\n                    // Doing nothing\r\n                }\r\n            }\r\n            function _sendBatchesNotification(theBatches, batchReason, sendType, sendSync) {\r\n                if (theBatches && theBatches[_DYN_LENGTH /* @min:%2elength */] > 0 && actions) {\r\n                    var theAction_1 = actions[_getNotificationAction(batchReason)];\r\n                    if (theAction_1) {\r\n                        var isSyncRequest_1 = sendType !== 0 /* EventSendType.Batched */;\r\n                        doPerf(_core, function () { return \"HttpManager:_sendBatchesNotification\"; }, function () {\r\n                            _doAction(function () {\r\n                                try {\r\n                                    theAction_1.call(actions, theBatches, batchReason, isSyncRequest_1, sendType);\r\n                                }\r\n                                catch (e) {\r\n                                    _throwInternal(_logger, 1 /* eLoggingSeverity.CRITICAL */, 74 /* _eInternalMessageId.NotificationException */, \"send request notification failed: \" + e);\r\n                                }\r\n                            }, sendSync || isSyncRequest_1, 0);\r\n                        }, function () { return ({ batches: _createDebugBatches(theBatches), reason: batchReason, isSync: isSyncRequest_1, sendSync: sendSync, sendType: sendType }); }, !isSyncRequest_1);\r\n                    }\r\n                }\r\n            }\r\n            function _getNotificationAction(reason) {\r\n                var action = _eventActionMap[reason];\r\n                if (!isValueAssigned(action)) {\r\n                    action = STR_OTHER;\r\n                    if (reason >= 9000 /* EventBatchNotificationReason.ResponseFailure */ && reason <= 9999 /* EventBatchNotificationReason.ResponseFailureMax */) {\r\n                        action = STR_RESPONSE_FAIL;\r\n                    }\r\n                    else if (reason >= 8000 /* EventBatchNotificationReason.EventsDropped */ && reason <= 8999 /* EventBatchNotificationReason.EventsDroppedMax */) {\r\n                        action = STR_DROPPED;\r\n                    }\r\n                    else if (reason >= 1000 /* EventBatchNotificationReason.SendingUndefined */ && reason <= 1999 /* EventBatchNotificationReason.SendingEventMax */) {\r\n                        action = STR_SENDING;\r\n                    }\r\n                }\r\n                return action;\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for HttpManager.prototype.initialize.\r\n// Removed Stub for HttpManager.prototype.addHeader.\r\n// Removed Stub for HttpManager.prototype.removeHeader.\r\n// Removed Stub for HttpManager.prototype.addResponseHandler.\r\n// Removed Stub for HttpManager.prototype.addBatch.\r\n// Removed Stub for HttpManager.prototype.canSendRequest.\r\n// Removed Stub for HttpManager.prototype.sendQueuedRequests.\r\n// Removed Stub for HttpManager.prototype.isCompletelyIdle.\r\n// Removed Stub for HttpManager.prototype.setUnloading.\r\n// Removed Stub for HttpManager.prototype.teardown.\r\n// Removed Stub for HttpManager.prototype.pause.\r\n// Removed Stub for HttpManager.prototype.resume.\r\n// Removed Stub for HttpManager.prototype.sendSynchronousBatch.\r\n// Removed Stub for HttpManager.prototype.serializeOfflineEvt.\r\n// Removed Stub for HttpManager.prototype.getOfflineRequestDetails.\r\n// Removed Stub for HttpManager.prototype.createOneDSPayload.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    HttpManager.__ieDyn=1;\n\n    return HttpManager;\r\n}());\r\nexport { HttpManager };\r\n//# sourceMappingURL=HttpManager.js.map","/*\n * 1DS JS SDK POST plugin, 4.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* TimeoutOverrideWrapper.ts\r\n* @author  Nev Wylie (newylie)\r\n* @copyright Microsoft 2022\r\n* Simple internal timeout wrapper\r\n*/\r\nimport { scheduleTimeoutWith } from \"@nevware21/ts-utils\";\r\nexport function createTimeoutWrapper(argSetTimeout, argClearTimeout) {\r\n    return {\r\n        set: function (callback, ms) {\r\n            var args = [];\r\n            for (var _i = 2; _i < arguments.length; _i++) {\r\n                args[_i - 2] = arguments[_i];\r\n            }\r\n            return scheduleTimeoutWith([argSetTimeout, argClearTimeout], callback, ms, args);\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=TimeoutOverrideWrapper.js.map","/*\n * 1DS JS SDK POST plugin, 4.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\n/**\r\n* PostManager.ts\r\n* @author Abhilash Panwar (abpanwar); Hector Hernandez (hectorh); Nev Wylie (newylie)\r\n* @copyright Microsoft 2018-2020\r\n*/\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { BaseTelemetryPlugin, EventsDiscardedReason, _throwInternal, addPageHideEventListener, addPageShowEventListener, addPageUnloadEventListener, arrForEach, createProcessTelemetryContext, createUniqueNamespace, doPerf, getWindow, isChromium, isGreaterThanZero, isNumber, mergeEvtNamespace, objForEachKey, onConfigChange, optimizeObject, proxyFunctions, removePageHideEventListener, removePageShowEventListener, removePageUnloadEventListener, setProcessTelemetryTimings } from \"@microsoft/1ds-core-js\";\r\nimport { createPromise } from \"@nevware21/ts-async\";\r\nimport { isPromiseLike, objDeepFreeze } from \"@nevware21/ts-utils\";\r\nimport { BE_PROFILE, NRT_PROFILE, RT_PROFILE } from \"./DataModels\";\r\nimport { EventBatch } from \"./EventBatch\";\r\nimport { HttpManager } from \"./HttpManager\";\r\nimport { STR_AUTH_WEB_TOKEN, STR_MSA_DEVICE_TICKET, STR_TRACE, STR_USER } from \"./InternalConstants\";\r\nimport { retryPolicyGetMillisToBackoffForRetry } from \"./RetryPolicy\";\r\nimport { createTimeoutWrapper } from \"./TimeoutOverrideWrapper\";\r\nimport { _DYN_ADD_HEADER, _DYN_AUTO_FLUSH_EVENTS_LI14, _DYN_BASE_DATA, _DYN_BATCHES, _DYN_CAN_SEND_REQUEST, _DYN_CLEAR_TIMEOUT_OVERRI3, _DYN_CONCAT, _DYN_COUNT, _DYN_CREATE_ONE_DSPAYLOAD, _DYN_DATA, _DYN_DISABLE_AUTO_BATCH_F15, _DYN_DISABLE_OPTIMIZE_OBJ, _DYN_DISABLE_TELEMETRY, _DYN_EVENTS, _DYN_EVENTS_LIMIT_IN_MEM, _DYN_GET_OFFLINE_REQUEST_9, _DYN_GET_WPARAM, _DYN_IDENTIFIER, _DYN_IGNORE_MC1_MS0_COOKI13, _DYN_INITIALIZE, _DYN_IS_COMPLETELY_IDLE, _DYN_I_KEY, _DYN_LATENCY, _DYN_LENGTH, _DYN_OVERRIDE_INSTRUMENTA16, _DYN_PUSH, _DYN_RESUME, _DYN_SEND_ATTEMPT, _DYN_SEND_QUEUED_REQUESTS, _DYN_SEND_SYNCHRONOUS_BAT10, _DYN_SERIALIZE_OFFLINE_EV8, _DYN_SET_TIMEOUT_OVERRIDE, _DYN_SET_UNLOADING, _DYN_SPLICE, _DYN_SPLIT, _DYN_SYNC, _DYN__BACK_OFF_TRANSMISSI12 } from \"./__DynamicConstants\";\r\nvar FlushCheckTimer = 0.250; // This needs to be in seconds, so this is 250ms\r\nvar MaxNumberEventPerBatch = 500;\r\nvar EventsDroppedAtOneTime = 20;\r\nvar MaxSendAttempts = 6;\r\nvar MaxSyncUnloadSendAttempts = 2; // Assuming 2 based on beforeunload and unload\r\nvar MaxBackoffCount = 4;\r\nvar MaxConnections = 2;\r\nvar MaxRequestRetriesBeforeBackoff = 1;\r\nvar MaxEventsLimitInMem = 10000;\r\nvar strEventsDiscarded = \"eventsDiscarded\";\r\nvar EMPTY_STR = \"\";\r\nvar undefValue = undefined;\r\n/**\r\n * The default settings for the config.\r\n * WE MUST include all defaults here to ensure that the config is created with all of the properties\r\n * defined as dynamic.\r\n */\r\nvar defaultPostChannelConfig = objDeepFreeze({\r\n    eventsLimitInMem: { isVal: isGreaterThanZero, v: MaxEventsLimitInMem },\r\n    immediateEventLimit: { isVal: isGreaterThanZero, v: 500 },\r\n    autoFlushEventsLimit: { isVal: isGreaterThanZero, v: 0 },\r\n    disableAutoBatchFlushLimit: false,\r\n    httpXHROverride: { isVal: isOverrideFn, v: undefValue },\r\n    overrideInstrumentationKey: undefValue,\r\n    overrideEndpointUrl: undefValue,\r\n    disableTelemetry: false,\r\n    ignoreMc1Ms0CookieProcessing: false,\r\n    setTimeoutOverride: undefValue,\r\n    clearTimeoutOverride: undefValue,\r\n    payloadPreprocessor: undefValue,\r\n    payloadListener: undefValue,\r\n    disableEventTimings: undefValue,\r\n    valueSanitizer: undefValue,\r\n    stringifyObjects: undefValue,\r\n    enableCompoundKey: undefValue,\r\n    disableOptimizeObj: false,\r\n    fetchCredentials: undefValue,\r\n    // disableCacheHeader: undefValue, // See Task #7178858 - Collector requires a change to support this\r\n    transports: undefValue,\r\n    unloadTransports: undefValue,\r\n    useSendBeacon: undefValue,\r\n    disableFetchKeepAlive: undefValue,\r\n    avoidOptions: false,\r\n    xhrTimeout: undefValue,\r\n    disableXhrSync: undefValue,\r\n    alwaysUseXhrOverride: false,\r\n    maxEventRetryAttempts: { isVal: isNumber, v: MaxSendAttempts },\r\n    maxUnloadEventRetryAttempts: { isVal: isNumber, v: MaxSyncUnloadSendAttempts },\r\n    addNoResponse: undefValue,\r\n    excludeCsMetaData: undefValue\r\n});\r\nfunction isOverrideFn(httpXHROverride) {\r\n    return httpXHROverride && httpXHROverride.sendPOST;\r\n}\r\n/**\r\n * Class that manages adding events to inbound queues and batching of events\r\n * into requests.\r\n * @group Classes\r\n * @group Entrypoint\r\n */\r\nvar PostChannel = /** @class */ (function (_super) {\r\n    __extends(PostChannel, _super);\r\n    function PostChannel() {\r\n        var _this = _super.call(this) || this;\r\n        _this.identifier = \"PostChannel\";\r\n        _this.priority = 1011;\r\n        _this.version = '4.3.3';\r\n        var _postConfig;\r\n        var _isTeardownCalled = false;\r\n        var _flushCallbackQueue = [];\r\n        var _flushCallbackTimer;\r\n        var _paused = false;\r\n        var _immediateQueueSize = 0;\r\n        var _immediateQueueSizeLimit;\r\n        var _queueSize = 0;\r\n        var _queueSizeLimit;\r\n        var _profiles = {};\r\n        var _currentProfile = RT_PROFILE;\r\n        var _scheduledTimer;\r\n        var _immediateTimer;\r\n        var _currentBackoffCount;\r\n        var _timerCount;\r\n        var _httpManager;\r\n        var _batchQueues;\r\n        var _autoFlushEventsLimit;\r\n        // either MaxBatchSize * (1+ Max Connections) or _queueLimit / 6 (where 3 latency Queues [normal, realtime, cost deferred] * 2 [allow half full -- allow for retry])\r\n        var _autoFlushBatchLimit;\r\n        var _delayedBatchSendLatency;\r\n        var _delayedBatchReason;\r\n        var _optimizeObject;\r\n        var _isPageUnloadTriggered;\r\n        var _maxEventSendAttempts;\r\n        var _maxUnloadEventSendAttempts;\r\n        var _evtNamespace;\r\n        var _timeoutWrapper;\r\n        var _ignoreMc1Ms0CookieProcessing;\r\n        var _disableAutoBatchFlushLimit;\r\n        var _notificationManager;\r\n        var _unloadHandlersAdded;\r\n        var _overrideInstrumentationKey;\r\n        var _disableTelemetry;\r\n        dynamicProto(PostChannel, _this, function (_self, _base) {\r\n            _initDefaults();\r\n            // Special internal method to allow the DebugPlugin to hook embedded objects\r\n            _self[\"_getDbgPlgTargets\"] = function () {\r\n                return [_httpManager, _postConfig];\r\n            };\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (theConfig, core, extensions) {\r\n                doPerf(core, function () { return \"PostChannel:initialize\"; }, function () {\r\n                    _base[_DYN_INITIALIZE /* @min:%2einitialize */](theConfig, core, extensions);\r\n                    _notificationManager = core.getNotifyMgr();\r\n                    try {\r\n                        _evtNamespace = mergeEvtNamespace(createUniqueNamespace(_self[_DYN_IDENTIFIER /* @min:%2eidentifier */]), core.evtNamespace && core.evtNamespace());\r\n                        _self._addHook(onConfigChange(theConfig, function (details) {\r\n                            var coreConfig = details.cfg;\r\n                            var ctx = createProcessTelemetryContext(null, coreConfig, core);\r\n                            _postConfig = ctx.getExtCfg(_self[_DYN_IDENTIFIER /* @min:%2eidentifier */], defaultPostChannelConfig);\r\n                            _timeoutWrapper = createTimeoutWrapper(_postConfig[_DYN_SET_TIMEOUT_OVERRIDE /* @min:%2esetTimeoutOverride */], _postConfig[_DYN_CLEAR_TIMEOUT_OVERRI3 /* @min:%2eclearTimeoutOverride */]);\r\n                            // Only try and use the optimizeObject() if this appears to be a chromium based browser and it has not been explicitly disabled\r\n                            _optimizeObject = !_postConfig[_DYN_DISABLE_OPTIMIZE_OBJ /* @min:%2edisableOptimizeObj */] && isChromium();\r\n                            _ignoreMc1Ms0CookieProcessing = _postConfig[_DYN_IGNORE_MC1_MS0_COOKI13 /* @min:%2eignoreMc1Ms0CookieProcessing */];\r\n                            _hookWParam(core); // _hookWParam uses _ignoreMc1Ms0CookieProcessing\r\n                            _queueSizeLimit = _postConfig[_DYN_EVENTS_LIMIT_IN_MEM /* @min:%2eeventsLimitInMem */];\r\n                            _immediateQueueSizeLimit = _postConfig.immediateEventLimit;\r\n                            _autoFlushEventsLimit = _postConfig[_DYN_AUTO_FLUSH_EVENTS_LI14 /* @min:%2eautoFlushEventsLimit */];\r\n                            _maxEventSendAttempts = _postConfig.maxEventRetryAttempts;\r\n                            _maxUnloadEventSendAttempts = _postConfig.maxUnloadEventRetryAttempts;\r\n                            _disableAutoBatchFlushLimit = _postConfig[_DYN_DISABLE_AUTO_BATCH_F15 /* @min:%2edisableAutoBatchFlushLimit */];\r\n                            if (isPromiseLike(coreConfig.endpointUrl)) {\r\n                                _self.pause();\r\n                            }\r\n                            else if (!!_paused) {\r\n                                // if previous url is promise, resume\r\n                                _self[_DYN_RESUME /* @min:%2eresume */]();\r\n                            }\r\n                            _setAutoLimits();\r\n                            // Override iKey if provided in Post config if provided for during initialization\r\n                            _overrideInstrumentationKey = _postConfig[_DYN_OVERRIDE_INSTRUMENTA16 /* @min:%2eoverrideInstrumentationKey */];\r\n                            // DisableTelemetry was defined in the config provided during initialization\r\n                            _disableTelemetry = !!_postConfig[_DYN_DISABLE_TELEMETRY /* @min:%2edisableTelemetry */];\r\n                            if (_unloadHandlersAdded) {\r\n                                _removeUnloadHandlers();\r\n                            }\r\n                            var excludePageUnloadEvents = coreConfig.disablePageUnloadEvents || [];\r\n                            // When running in Web browsers try to send all telemetry if page is unloaded\r\n                            _unloadHandlersAdded = addPageUnloadEventListener(_handleUnloadEvents, excludePageUnloadEvents, _evtNamespace);\r\n                            _unloadHandlersAdded = addPageHideEventListener(_handleUnloadEvents, excludePageUnloadEvents, _evtNamespace) || _unloadHandlersAdded;\r\n                            _unloadHandlersAdded = addPageShowEventListener(_handleShowEvents, coreConfig.disablePageShowEvents, _evtNamespace) || _unloadHandlersAdded;\r\n                        }));\r\n                        // only initialize the manager once\r\n                        _httpManager[_DYN_INITIALIZE /* @min:%2einitialize */](theConfig, _self.core, _self);\r\n                    }\r\n                    catch (e) {\r\n                        // resetting the initialized state because of failure\r\n                        _self.setInitialized(false);\r\n                        throw e;\r\n                    }\r\n                }, function () { return ({ theConfig: theConfig, core: core, extensions: extensions }); });\r\n            };\r\n            _self.processTelemetry = function (ev, itemCtx) {\r\n                setProcessTelemetryTimings(ev, _self[_DYN_IDENTIFIER /* @min:%2eidentifier */]);\r\n                itemCtx = itemCtx || _self._getTelCtx(itemCtx);\r\n                var event = ev;\r\n                if (!_disableTelemetry && !_isTeardownCalled) {\r\n                    // Override iKey if provided in Post config if provided for during initialization\r\n                    if (_overrideInstrumentationKey) {\r\n                        event[_DYN_I_KEY /* @min:%2eiKey */] = _overrideInstrumentationKey;\r\n                    }\r\n                    _addEventToQueues(event, true);\r\n                    if (_isPageUnloadTriggered) {\r\n                        // Unload event has been received so we need to try and flush new events\r\n                        _releaseAllQueues(2 /* EventSendType.SendBeacon */, 2 /* SendRequestReason.Unload */);\r\n                    }\r\n                    else {\r\n                        _scheduleTimer();\r\n                    }\r\n                }\r\n                _self.processNext(event, itemCtx);\r\n            };\r\n            _self.getOfflineSupport = function () {\r\n                try {\r\n                    var details_1 = _httpManager && _httpManager[_DYN_GET_OFFLINE_REQUEST_9 /* @min:%2egetOfflineRequestDetails */]();\r\n                    if (_httpManager) {\r\n                        return {\r\n                            getUrl: function () {\r\n                                if (details_1) {\r\n                                    return details_1.url;\r\n                                }\r\n                                return null;\r\n                            },\r\n                            serialize: _serialize,\r\n                            batch: _batch,\r\n                            shouldProcess: function (evt) {\r\n                                return !_disableTelemetry;\r\n                            },\r\n                            createPayload: function (evt) {\r\n                                return null;\r\n                            },\r\n                            createOneDSPayload: function (evts) {\r\n                                if (_httpManager[_DYN_CREATE_ONE_DSPAYLOAD /* @min:%2ecreateOneDSPayload */]) {\r\n                                    return _httpManager[_DYN_CREATE_ONE_DSPAYLOAD /* @min:%2ecreateOneDSPayload */](evts, _optimizeObject);\r\n                                }\r\n                            }\r\n                        };\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return null;\r\n            };\r\n            _self._doTeardown = function (unloadCtx, unloadState) {\r\n                _releaseAllQueues(2 /* EventSendType.SendBeacon */, 2 /* SendRequestReason.Unload */);\r\n                _isTeardownCalled = true;\r\n                _httpManager.teardown();\r\n                _removeUnloadHandlers();\r\n                // Just register to remove all events associated with this namespace\r\n                _initDefaults();\r\n            };\r\n            function _removeUnloadHandlers() {\r\n                removePageUnloadEventListener(null, _evtNamespace);\r\n                removePageHideEventListener(null, _evtNamespace);\r\n                removePageShowEventListener(null, _evtNamespace);\r\n            }\r\n            function _hookWParam(core) {\r\n                var existingGetWParamMethod = core[_DYN_GET_WPARAM /* @min:%2egetWParam */];\r\n                core[_DYN_GET_WPARAM /* @min:%2egetWParam */] = function () {\r\n                    var wparam = 0;\r\n                    if (_ignoreMc1Ms0CookieProcessing) {\r\n                        wparam = wparam | 2;\r\n                    }\r\n                    return wparam | existingGetWParamMethod.call(core);\r\n                };\r\n            }\r\n            function _batch(arr) {\r\n                var rlt = EMPTY_STR;\r\n                if (arr && arr[_DYN_LENGTH /* @min:%2elength */]) {\r\n                    arrForEach(arr, function (item) {\r\n                        if (rlt) {\r\n                            rlt += \"\\n\";\r\n                        }\r\n                        rlt += item;\r\n                    });\r\n                }\r\n                return rlt;\r\n            }\r\n            function _serialize(event) {\r\n                var rlt = EMPTY_STR;\r\n                try {\r\n                    _cleanEvent(event);\r\n                    rlt = _httpManager[_DYN_SERIALIZE_OFFLINE_EV8 /* @min:%2eserializeOfflineEvt */](event);\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return rlt;\r\n            }\r\n            // Moving event handlers out from the initialize closure so that any local variables can be garbage collected\r\n            function _handleUnloadEvents(evt) {\r\n                var theEvt = evt || getWindow().event; // IE 8 does not pass the event\r\n                if (theEvt.type !== \"beforeunload\") {\r\n                    // Only set the unload trigger if not beforeunload event as beforeunload can be cancelled while the other events can't\r\n                    _isPageUnloadTriggered = true;\r\n                    _httpManager[_DYN_SET_UNLOADING /* @min:%2esetUnloading */](_isPageUnloadTriggered);\r\n                }\r\n                _releaseAllQueues(2 /* EventSendType.SendBeacon */, 2 /* SendRequestReason.Unload */);\r\n            }\r\n            function _handleShowEvents(evt) {\r\n                // Handle the page becoming visible again\r\n                _isPageUnloadTriggered = false;\r\n                _httpManager[_DYN_SET_UNLOADING /* @min:%2esetUnloading */](_isPageUnloadTriggered);\r\n            }\r\n            function _cleanEvent(event) {\r\n                if (event.ext && event.ext[STR_TRACE]) {\r\n                    delete (event.ext[STR_TRACE]);\r\n                }\r\n                if (event.ext && event.ext[STR_USER] && event.ext[STR_USER][\"id\"]) {\r\n                    delete (event.ext[STR_USER][\"id\"]);\r\n                }\r\n                // v8 performance optimization for iterating over the keys\r\n                if (_optimizeObject) {\r\n                    event.ext = optimizeObject(event.ext);\r\n                    if (event[_DYN_BASE_DATA /* @min:%2ebaseData */]) {\r\n                        event[_DYN_BASE_DATA /* @min:%2ebaseData */] = optimizeObject(event[_DYN_BASE_DATA /* @min:%2ebaseData */]);\r\n                    }\r\n                    if (event[_DYN_DATA /* @min:%2edata */]) {\r\n                        event[_DYN_DATA /* @min:%2edata */] = optimizeObject(event[_DYN_DATA /* @min:%2edata */]);\r\n                    }\r\n                }\r\n            }\r\n            function _addEventToQueues(event, append) {\r\n                // If send attempt field is undefined we should set it to 0.\r\n                if (!event[_DYN_SEND_ATTEMPT /* @min:%2esendAttempt */]) {\r\n                    event[_DYN_SEND_ATTEMPT /* @min:%2esendAttempt */] = 0;\r\n                }\r\n                // Add default latency\r\n                if (!event[_DYN_LATENCY /* @min:%2elatency */]) {\r\n                    event[_DYN_LATENCY /* @min:%2elatency */] = 1 /* EventLatencyValue.Normal */;\r\n                }\r\n                _cleanEvent(event);\r\n                if (event[_DYN_SYNC /* @min:%2esync */]) {\r\n                    // If the transmission is backed off then do not send synchronous events.\r\n                    // We will convert these events to Real time latency instead.\r\n                    if (_currentBackoffCount || _paused) {\r\n                        event[_DYN_LATENCY /* @min:%2elatency */] = 3 /* EventLatencyValue.RealTime */;\r\n                        event[_DYN_SYNC /* @min:%2esync */] = false;\r\n                    }\r\n                    else {\r\n                        // Log the event synchronously\r\n                        if (_httpManager) {\r\n                            // v8 performance optimization for iterating over the keys\r\n                            if (_optimizeObject) {\r\n                                event = optimizeObject(event);\r\n                            }\r\n                            _httpManager[_DYN_SEND_SYNCHRONOUS_BAT10 /* @min:%2esendSynchronousBatch */](EventBatch.create(event[_DYN_I_KEY /* @min:%2eiKey */], [event]), event[_DYN_SYNC /* @min:%2esync */] === true ? 1 /* EventSendType.Synchronous */ : event[_DYN_SYNC /* @min:%2esync */], 3 /* SendRequestReason.SyncEvent */);\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n                var evtLatency = event[_DYN_LATENCY /* @min:%2elatency */];\r\n                var queueSize = _queueSize;\r\n                var queueLimit = _queueSizeLimit;\r\n                if (evtLatency === 4 /* EventLatencyValue.Immediate */) {\r\n                    queueSize = _immediateQueueSize;\r\n                    queueLimit = _immediateQueueSizeLimit;\r\n                }\r\n                var eventDropped = false;\r\n                // Only add the event if the queue isn't full or it's a direct event (which don't add to the queue sizes)\r\n                if (queueSize < queueLimit) {\r\n                    eventDropped = !_addEventToProperQueue(event, append);\r\n                }\r\n                else {\r\n                    var dropLatency = 1 /* EventLatencyValue.Normal */;\r\n                    var dropNumber = EventsDroppedAtOneTime;\r\n                    if (evtLatency === 4 /* EventLatencyValue.Immediate */) {\r\n                        // Only drop other immediate events as they are not technically sharing the general queue\r\n                        dropLatency = 4 /* EventLatencyValue.Immediate */;\r\n                        dropNumber = 1;\r\n                    }\r\n                    // Drop old event from lower or equal latency\r\n                    eventDropped = true;\r\n                    if (_dropEventWithLatencyOrLess(event[_DYN_I_KEY /* @min:%2eiKey */], event[_DYN_LATENCY /* @min:%2elatency */], dropLatency, dropNumber)) {\r\n                        eventDropped = !_addEventToProperQueue(event, append);\r\n                    }\r\n                }\r\n                if (eventDropped) {\r\n                    // Can't drop events from current queues because the all the slots are taken by queues that are being flushed.\r\n                    _notifyEvents(strEventsDiscarded, [event], EventsDiscardedReason.QueueFull);\r\n                }\r\n            }\r\n            _self.setEventQueueLimits = function (eventLimit, autoFlushLimit) {\r\n                _postConfig[_DYN_EVENTS_LIMIT_IN_MEM /* @min:%2eeventsLimitInMem */] = _queueSizeLimit = isGreaterThanZero(eventLimit) ? eventLimit : MaxEventsLimitInMem;\r\n                _postConfig[_DYN_AUTO_FLUSH_EVENTS_LI14 /* @min:%2eautoFlushEventsLimit */] = _autoFlushEventsLimit = isGreaterThanZero(autoFlushLimit) ? autoFlushLimit : 0;\r\n                _setAutoLimits();\r\n                // We only do this check here as during normal event addition if the queue is > then events start getting dropped\r\n                var doFlush = _queueSize > eventLimit;\r\n                if (!doFlush && _autoFlushBatchLimit > 0) {\r\n                    // Check the auto flush max batch size\r\n                    for (var latency = 1 /* EventLatencyValue.Normal */; !doFlush && latency <= 3 /* EventLatencyValue.RealTime */; latency++) {\r\n                        var batchQueue = _batchQueues[latency];\r\n                        if (batchQueue && batchQueue[_DYN_BATCHES /* @min:%2ebatches */]) {\r\n                            arrForEach(batchQueue[_DYN_BATCHES /* @min:%2ebatches */], function (theBatch) {\r\n                                if (theBatch && theBatch[_DYN_COUNT /* @min:%2ecount */]() >= _autoFlushBatchLimit) {\r\n                                    // If any 1 batch is > than the limit then trigger an auto flush\r\n                                    doFlush = true;\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                _performAutoFlush(true, doFlush);\r\n            };\r\n            _self.pause = function () {\r\n                _clearScheduledTimer();\r\n                _paused = true;\r\n                _httpManager && _httpManager.pause();\r\n            };\r\n            _self[_DYN_RESUME /* @min:%2eresume */] = function () {\r\n                _paused = false;\r\n                _httpManager && _httpManager[_DYN_RESUME /* @min:%2eresume */]();\r\n                _scheduleTimer();\r\n            };\r\n            _self._loadTransmitProfiles = function (profiles) {\r\n                _resetTransmitProfiles();\r\n                objForEachKey(profiles, function (profileName, profileValue) {\r\n                    var profLen = profileValue[_DYN_LENGTH /* @min:%2elength */];\r\n                    if (profLen >= 2) {\r\n                        var directValue = (profLen > 2 ? profileValue[2] : 0);\r\n                        profileValue[_DYN_SPLICE /* @min:%2esplice */](0, profLen - 2);\r\n                        // Make sure if a higher latency is set to not send then don't send lower latency\r\n                        if (profileValue[1] < 0) {\r\n                            profileValue[0] = -1;\r\n                        }\r\n                        // Make sure each latency is multiple of the latency higher then it. If not a multiple\r\n                        // we round up so that it becomes a multiple.\r\n                        if (profileValue[1] > 0 && profileValue[0] > 0) {\r\n                            var timerMultiplier = profileValue[0] / profileValue[1];\r\n                            profileValue[0] = Math.ceil(timerMultiplier) * profileValue[1];\r\n                        }\r\n                        // Add back the direct profile timeout\r\n                        if (directValue >= 0 && profileValue[1] >= 0 && directValue > profileValue[1]) {\r\n                            // Make sure if it's not disabled (< 0) then make sure it's not larger than RealTime\r\n                            directValue = profileValue[1];\r\n                        }\r\n                        profileValue[_DYN_PUSH /* @min:%2epush */](directValue);\r\n                        _profiles[profileName] = profileValue;\r\n                    }\r\n                });\r\n            };\r\n            _self.flush = function (async, callback, sendReason) {\r\n                if (async === void 0) { async = true; }\r\n                var result;\r\n                if (!_paused) {\r\n                    sendReason = sendReason || 1 /* SendRequestReason.ManualFlush */;\r\n                    if (async) {\r\n                        if (!callback) {\r\n                            result = createPromise(function (resolve) {\r\n                                // Set the callback to the promise resolve callback\r\n                                callback = resolve;\r\n                            });\r\n                        }\r\n                        if (_flushCallbackTimer == null) {\r\n                            // Clear the normal schedule timer as we are going to try and flush ASAP\r\n                            _clearScheduledTimer();\r\n                            // Move all queued events to the HttpManager so that we don't discard new events (Auto flush scenario)\r\n                            _queueBatches(1 /* EventLatencyValue.Normal */, 0 /* EventSendType.Batched */, sendReason);\r\n                            _flushCallbackTimer = _createTimer(function () {\r\n                                _flushCallbackTimer = null;\r\n                                _flushImpl(callback, sendReason);\r\n                            }, 0);\r\n                        }\r\n                        else {\r\n                            // Even if null (no callback) this will ensure after the flushImpl finishes waiting\r\n                            // for a completely idle connection it will attempt to re-flush any queued events on the next cycle\r\n                            _flushCallbackQueue[_DYN_PUSH /* @min:%2epush */](callback);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // Clear the normal schedule timer as we are going to try and flush ASAP\r\n                        var cleared = _clearScheduledTimer();\r\n                        // Now cause all queued events to be sent synchronously\r\n                        _sendEventsForLatencyAndAbove(1 /* EventLatencyValue.Normal */, 1 /* EventSendType.Synchronous */, sendReason);\r\n                        callback && callback();\r\n                        if (cleared) {\r\n                            // restart the normal event timer if it was cleared\r\n                            _scheduleTimer();\r\n                        }\r\n                    }\r\n                }\r\n                return result;\r\n            };\r\n            _self.setMsaAuthTicket = function (ticket) {\r\n                _httpManager[_DYN_ADD_HEADER /* @min:%2eaddHeader */](STR_MSA_DEVICE_TICKET, ticket);\r\n            };\r\n            _self.setAuthPluginHeader = function (token) {\r\n                _httpManager[_DYN_ADD_HEADER /* @min:%2eaddHeader */](STR_AUTH_WEB_TOKEN, token);\r\n            };\r\n            _self.removeAuthPluginHeader = function () {\r\n                _httpManager.removeHeader(STR_AUTH_WEB_TOKEN);\r\n            };\r\n            _self.hasEvents = _hasEvents;\r\n            _self._setTransmitProfile = function (profileName) {\r\n                if (_currentProfile !== profileName && _profiles[profileName] !== undefined) {\r\n                    _clearScheduledTimer();\r\n                    _currentProfile = profileName;\r\n                    _scheduleTimer();\r\n                }\r\n            };\r\n            proxyFunctions(_self, function () { return _httpManager; }, [\"addResponseHandler\"]);\r\n            /**\r\n             * Batch and send events currently in the queue for the given latency.\r\n             * @param latency - Latency for which to send events.\r\n             */\r\n            function _sendEventsForLatencyAndAbove(latency, sendType, sendReason) {\r\n                var queued = _queueBatches(latency, sendType, sendReason);\r\n                // Always trigger the request as while the post channel may not have queued additional events, the httpManager may already have waiting events\r\n                _httpManager[_DYN_SEND_QUEUED_REQUESTS /* @min:%2esendQueuedRequests */](sendType, sendReason);\r\n                return queued;\r\n            }\r\n            function _hasEvents() {\r\n                return _queueSize > 0;\r\n            }\r\n            /**\r\n             * Try to schedule the timer after which events will be sent. If there are\r\n             * no events to be sent, or there is already a timer scheduled, or the\r\n             * http manager doesn't have any idle connections this method is no-op.\r\n             */\r\n            function _scheduleTimer() {\r\n                // If we had previously attempted to send requests, but the http manager didn't have any idle connections then the requests where delayed\r\n                // so try and requeue then again now\r\n                if (_delayedBatchSendLatency >= 0 && _queueBatches(_delayedBatchSendLatency, 0 /* EventSendType.Batched */, _delayedBatchReason)) {\r\n                    _httpManager[_DYN_SEND_QUEUED_REQUESTS /* @min:%2esendQueuedRequests */](0 /* EventSendType.Batched */, _delayedBatchReason);\r\n                }\r\n                if (_immediateQueueSize > 0 && !_immediateTimer && !_paused) {\r\n                    // During initialization _profiles enforce that the direct [2] is less than real time [1] timer value\r\n                    // If the immediateTimeout is disabled the immediate events will be sent with Real Time events\r\n                    var immediateTimeOut = _profiles[_currentProfile][2];\r\n                    if (immediateTimeOut >= 0) {\r\n                        _immediateTimer = _createTimer(function () {\r\n                            _immediateTimer = null;\r\n                            // Only try to send direct events\r\n                            _sendEventsForLatencyAndAbove(4 /* EventLatencyValue.Immediate */, 0 /* EventSendType.Batched */, 1 /* SendRequestReason.NormalSchedule */);\r\n                            _scheduleTimer();\r\n                        }, immediateTimeOut);\r\n                    }\r\n                }\r\n                // During initialization the _profiles enforce that the normal [0] is a multiple of the real time [1] timer value\r\n                var timeOut = _profiles[_currentProfile][1];\r\n                if (!_scheduledTimer && !_flushCallbackTimer && timeOut >= 0 && !_paused) {\r\n                    if (_hasEvents()) {\r\n                        _scheduledTimer = _createTimer(function () {\r\n                            _scheduledTimer = null;\r\n                            _sendEventsForLatencyAndAbove(_timerCount === 0 ? 3 /* EventLatencyValue.RealTime */ : 1 /* EventLatencyValue.Normal */, 0 /* EventSendType.Batched */, 1 /* SendRequestReason.NormalSchedule */);\r\n                            // Increment the count for next cycle\r\n                            _timerCount++;\r\n                            _timerCount %= 2;\r\n                            _scheduleTimer();\r\n                        }, timeOut);\r\n                    }\r\n                    else {\r\n                        _timerCount = 0;\r\n                    }\r\n                }\r\n            }\r\n            _self[_DYN__BACK_OFF_TRANSMISSI12 /* @min:%2e_backOffTransmission */] = function () {\r\n                if (_currentBackoffCount < MaxBackoffCount) {\r\n                    _currentBackoffCount++;\r\n                    _clearScheduledTimer();\r\n                    _scheduleTimer();\r\n                }\r\n            };\r\n            _self._clearBackOff = function () {\r\n                if (_currentBackoffCount) {\r\n                    _currentBackoffCount = 0;\r\n                    _clearScheduledTimer();\r\n                    _scheduleTimer();\r\n                }\r\n            };\r\n            function _initDefaults() {\r\n                _postConfig = null;\r\n                _isTeardownCalled = false;\r\n                _flushCallbackQueue = [];\r\n                _flushCallbackTimer = null;\r\n                _paused = false;\r\n                _immediateQueueSize = 0;\r\n                _immediateQueueSizeLimit = 500;\r\n                _queueSize = 0;\r\n                _queueSizeLimit = MaxEventsLimitInMem;\r\n                _profiles = {};\r\n                _currentProfile = RT_PROFILE;\r\n                _scheduledTimer = null;\r\n                _immediateTimer = null;\r\n                _currentBackoffCount = 0;\r\n                _timerCount = 0;\r\n                _batchQueues = {};\r\n                _autoFlushEventsLimit = 0;\r\n                _unloadHandlersAdded = false;\r\n                // either MaxBatchSize * (1+ Max Connections) or _queueLimit / 6 (where 3 latency Queues [normal, realtime, cost deferred] * 2 [allow half full -- allow for retry])\r\n                _autoFlushBatchLimit = 0;\r\n                _delayedBatchSendLatency = -1;\r\n                _delayedBatchReason = null;\r\n                _optimizeObject = true;\r\n                _isPageUnloadTriggered = false;\r\n                _maxEventSendAttempts = MaxSendAttempts;\r\n                _maxUnloadEventSendAttempts = MaxSyncUnloadSendAttempts;\r\n                _evtNamespace = null;\r\n                _overrideInstrumentationKey = null;\r\n                _disableTelemetry = false;\r\n                _timeoutWrapper = createTimeoutWrapper();\r\n                _httpManager = new HttpManager(MaxNumberEventPerBatch, MaxConnections, MaxRequestRetriesBeforeBackoff, {\r\n                    requeue: _requeueEvents,\r\n                    send: _sendingEvent,\r\n                    sent: _eventsSentEvent,\r\n                    drop: _eventsDropped,\r\n                    rspFail: _eventsResponseFail,\r\n                    oth: _otherEvent\r\n                });\r\n                _initializeProfiles();\r\n                _clearQueues();\r\n                _setAutoLimits();\r\n            }\r\n            function _createTimer(theTimerFunc, timeOut) {\r\n                // If the transmission is backed off make the timer at least 1 sec to allow for back off.\r\n                if (timeOut === 0 && _currentBackoffCount) {\r\n                    timeOut = 1;\r\n                }\r\n                var timerMultiplier = 1000;\r\n                if (_currentBackoffCount) {\r\n                    timerMultiplier = retryPolicyGetMillisToBackoffForRetry(_currentBackoffCount - 1);\r\n                }\r\n                return _timeoutWrapper.set(theTimerFunc, timeOut * timerMultiplier);\r\n            }\r\n            function _clearScheduledTimer() {\r\n                if (_scheduledTimer !== null) {\r\n                    _scheduledTimer.cancel();\r\n                    _scheduledTimer = null;\r\n                    _timerCount = 0;\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n            // Try to send all queued events using beacons if available\r\n            function _releaseAllQueues(sendType, sendReason) {\r\n                _clearScheduledTimer();\r\n                // Cancel all flush callbacks\r\n                if (_flushCallbackTimer) {\r\n                    _flushCallbackTimer.cancel();\r\n                    _flushCallbackTimer = null;\r\n                }\r\n                if (!_paused) {\r\n                    // Queue all the remaining requests to be sent. The requests will be sent using HTML5 Beacons if they are available.\r\n                    _sendEventsForLatencyAndAbove(1 /* EventLatencyValue.Normal */, sendType, sendReason);\r\n                }\r\n            }\r\n            /**\r\n             * Add empty queues for all latencies in the inbound queues map. This is called\r\n             * when Transmission Manager is being flushed. This ensures that new events added\r\n             * after flush are stored separately till we flush the current events.\r\n             */\r\n            function _clearQueues() {\r\n                _batchQueues[4 /* EventLatencyValue.Immediate */] = {\r\n                    batches: [],\r\n                    iKeyMap: {}\r\n                };\r\n                _batchQueues[3 /* EventLatencyValue.RealTime */] = {\r\n                    batches: [],\r\n                    iKeyMap: {}\r\n                };\r\n                _batchQueues[2 /* EventLatencyValue.CostDeferred */] = {\r\n                    batches: [],\r\n                    iKeyMap: {}\r\n                };\r\n                _batchQueues[1 /* EventLatencyValue.Normal */] = {\r\n                    batches: [],\r\n                    iKeyMap: {}\r\n                };\r\n            }\r\n            function _getEventBatch(iKey, latency, create) {\r\n                var batchQueue = _batchQueues[latency];\r\n                if (!batchQueue) {\r\n                    latency = 1 /* EventLatencyValue.Normal */;\r\n                    batchQueue = _batchQueues[latency];\r\n                }\r\n                var eventBatch = batchQueue.iKeyMap[iKey];\r\n                if (!eventBatch && create) {\r\n                    eventBatch = EventBatch.create(iKey);\r\n                    batchQueue.batches[_DYN_PUSH /* @min:%2epush */](eventBatch);\r\n                    batchQueue.iKeyMap[iKey] = eventBatch;\r\n                }\r\n                return eventBatch;\r\n            }\r\n            function _performAutoFlush(isAsync, doFlush) {\r\n                // Only perform the auto flush check if the httpManager has an idle connection and we are not in a backoff situation\r\n                if (_httpManager[_DYN_CAN_SEND_REQUEST /* @min:%2ecanSendRequest */]() && !_currentBackoffCount) {\r\n                    if (_autoFlushEventsLimit > 0 && _queueSize > _autoFlushEventsLimit) {\r\n                        // Force flushing\r\n                        doFlush = true;\r\n                    }\r\n                    if (doFlush && _flushCallbackTimer == null) {\r\n                        // Auto flush the queue, adding a callback to avoid the creation of a promise\r\n                        _self.flush(isAsync, function () { }, 20 /* SendRequestReason.MaxQueuedEvents */);\r\n                    }\r\n                }\r\n            }\r\n            function _addEventToProperQueue(event, append) {\r\n                // v8 performance optimization for iterating over the keys\r\n                if (_optimizeObject) {\r\n                    event = optimizeObject(event);\r\n                }\r\n                var latency = event[_DYN_LATENCY /* @min:%2elatency */];\r\n                var eventBatch = _getEventBatch(event[_DYN_I_KEY /* @min:%2eiKey */], latency, true);\r\n                if (eventBatch.addEvent(event)) {\r\n                    if (latency !== 4 /* EventLatencyValue.Immediate */) {\r\n                        _queueSize++;\r\n                        // Check for auto flushing based on total events in the queue, but not for requeued or retry events\r\n                        if (append && event[_DYN_SEND_ATTEMPT /* @min:%2esendAttempt */] === 0) {\r\n                            // Force the flushing of the batch if the batch (specific iKey / latency combination) reaches it's auto flush limit\r\n                            _performAutoFlush(!event.sync, _autoFlushBatchLimit > 0 && eventBatch[_DYN_COUNT /* @min:%2ecount */]() >= _autoFlushBatchLimit);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // Direct events don't need auto flushing as they are scheduled (by default) for immediate delivery\r\n                        _immediateQueueSize++;\r\n                    }\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n            function _dropEventWithLatencyOrLess(iKey, latency, currentLatency, dropNumber) {\r\n                while (currentLatency <= latency) {\r\n                    var eventBatch = _getEventBatch(iKey, latency, true);\r\n                    if (eventBatch && eventBatch[_DYN_COUNT /* @min:%2ecount */]() > 0) {\r\n                        // Dropped oldest events from lowest possible latency\r\n                        var droppedEvents = eventBatch[_DYN_SPLIT /* @min:%2esplit */](0, dropNumber);\r\n                        var droppedCount = droppedEvents[_DYN_COUNT /* @min:%2ecount */]();\r\n                        if (droppedCount > 0) {\r\n                            if (currentLatency === 4 /* EventLatencyValue.Immediate */) {\r\n                                _immediateQueueSize -= droppedCount;\r\n                            }\r\n                            else {\r\n                                _queueSize -= droppedCount;\r\n                            }\r\n                            _notifyBatchEvents(strEventsDiscarded, [droppedEvents], EventsDiscardedReason.QueueFull);\r\n                            return true;\r\n                        }\r\n                    }\r\n                    currentLatency++;\r\n                }\r\n                // Unable to drop any events -- lets just make sure the queue counts are correct to avoid exhaustion\r\n                _resetQueueCounts();\r\n                return false;\r\n            }\r\n            /**\r\n             * Internal helper to reset the queue counts, used as a backstop to avoid future queue exhaustion errors\r\n             * that might occur because of counting issues.\r\n             */\r\n            function _resetQueueCounts() {\r\n                var immediateQueue = 0;\r\n                var normalQueue = 0;\r\n                var _loop_1 = function (latency) {\r\n                    var batchQueue = _batchQueues[latency];\r\n                    if (batchQueue && batchQueue[_DYN_BATCHES /* @min:%2ebatches */]) {\r\n                        arrForEach(batchQueue[_DYN_BATCHES /* @min:%2ebatches */], function (theBatch) {\r\n                            if (latency === 4 /* EventLatencyValue.Immediate */) {\r\n                                immediateQueue += theBatch[_DYN_COUNT /* @min:%2ecount */]();\r\n                            }\r\n                            else {\r\n                                normalQueue += theBatch[_DYN_COUNT /* @min:%2ecount */]();\r\n                            }\r\n                        });\r\n                    }\r\n                };\r\n                for (var latency = 1 /* EventLatencyValue.Normal */; latency <= 4 /* EventLatencyValue.Immediate */; latency++) {\r\n                    _loop_1(latency);\r\n                }\r\n                _queueSize = normalQueue;\r\n                _immediateQueueSize = immediateQueue;\r\n            }\r\n            function _queueBatches(latency, sendType, sendReason) {\r\n                var eventsQueued = false;\r\n                var isAsync = sendType === 0 /* EventSendType.Batched */;\r\n                // Only queue batches (to the HttpManager) if this is a sync request or the httpManager has an idle connection\r\n                // Thus keeping the events within the PostChannel until the HttpManager has a connection available\r\n                // This is so we can drop \"old\" events if the queue is getting full because we can't successfully send events\r\n                if (!isAsync || _httpManager[_DYN_CAN_SEND_REQUEST /* @min:%2ecanSendRequest */]()) {\r\n                    doPerf(_self.core, function () { return \"PostChannel._queueBatches\"; }, function () {\r\n                        var droppedEvents = [];\r\n                        var latencyToProcess = 4 /* EventLatencyValue.Immediate */;\r\n                        while (latencyToProcess >= latency) {\r\n                            var batchQueue = _batchQueues[latencyToProcess];\r\n                            if (batchQueue && batchQueue.batches && batchQueue.batches[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                                arrForEach(batchQueue[_DYN_BATCHES /* @min:%2ebatches */], function (theBatch) {\r\n                                    // Add the batch to the http manager to send the requests\r\n                                    if (!_httpManager.addBatch(theBatch)) {\r\n                                        // The events from this iKey are being dropped (killed)\r\n                                        droppedEvents = droppedEvents[_DYN_CONCAT /* @min:%2econcat */](theBatch[_DYN_EVENTS /* @min:%2eevents */]());\r\n                                    }\r\n                                    else {\r\n                                        eventsQueued = eventsQueued || (theBatch && theBatch[_DYN_COUNT /* @min:%2ecount */]() > 0);\r\n                                    }\r\n                                    if (latencyToProcess === 4 /* EventLatencyValue.Immediate */) {\r\n                                        _immediateQueueSize -= theBatch[_DYN_COUNT /* @min:%2ecount */]();\r\n                                    }\r\n                                    else {\r\n                                        _queueSize -= theBatch[_DYN_COUNT /* @min:%2ecount */]();\r\n                                    }\r\n                                });\r\n                                // Remove all batches from this Queue\r\n                                batchQueue[_DYN_BATCHES /* @min:%2ebatches */] = [];\r\n                                batchQueue.iKeyMap = {};\r\n                            }\r\n                            latencyToProcess--;\r\n                        }\r\n                        if (droppedEvents[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                            _notifyEvents(strEventsDiscarded, droppedEvents, EventsDiscardedReason.KillSwitch);\r\n                        }\r\n                        if (eventsQueued && _delayedBatchSendLatency >= latency) {\r\n                            // We have queued events at the same level as the delayed values so clear the setting\r\n                            _delayedBatchSendLatency = -1;\r\n                            _delayedBatchReason = 0 /* SendRequestReason.Undefined */;\r\n                        }\r\n                    }, function () { return ({ latency: latency, sendType: sendType, sendReason: sendReason }); }, !isAsync);\r\n                }\r\n                else {\r\n                    // remember the min latency so that we can re-trigger later\r\n                    _delayedBatchSendLatency = _delayedBatchSendLatency >= 0 ? Math.min(_delayedBatchSendLatency, latency) : latency;\r\n                    _delayedBatchReason = Math.max(_delayedBatchReason, sendReason);\r\n                }\r\n                return eventsQueued;\r\n            }\r\n            /**\r\n             * This is the callback method is called as part of the manual flushing process.\r\n             * @param callback\r\n             * @param sendReason\r\n             */\r\n            function _flushImpl(callback, sendReason) {\r\n                // Add any additional queued events and cause all queued events to be sent asynchronously\r\n                _sendEventsForLatencyAndAbove(1 /* EventLatencyValue.Normal */, 0 /* EventSendType.Batched */, sendReason);\r\n                // All events (should) have been queue -- lets just make sure the queue counts are correct to avoid queue exhaustion (previous bug #9685112)\r\n                _resetQueueCounts();\r\n                _waitForIdleManager(function () {\r\n                    // Only called AFTER the httpManager does not have any outstanding requests\r\n                    if (callback) {\r\n                        callback();\r\n                    }\r\n                    if (_flushCallbackQueue[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                        _flushCallbackTimer = _createTimer(function () {\r\n                            _flushCallbackTimer = null;\r\n                            _flushImpl(_flushCallbackQueue.shift(), sendReason);\r\n                        }, 0);\r\n                    }\r\n                    else {\r\n                        // No more flush requests\r\n                        _flushCallbackTimer = null;\r\n                        // Restart the normal timer schedule\r\n                        _scheduleTimer();\r\n                    }\r\n                });\r\n            }\r\n            function _waitForIdleManager(callback) {\r\n                if (_httpManager[_DYN_IS_COMPLETELY_IDLE /* @min:%2eisCompletelyIdle */]()) {\r\n                    callback();\r\n                }\r\n                else {\r\n                    _flushCallbackTimer = _createTimer(function () {\r\n                        _flushCallbackTimer = null;\r\n                        _waitForIdleManager(callback);\r\n                    }, FlushCheckTimer);\r\n                }\r\n            }\r\n            /**\r\n             * Resets the transmit profiles to the default profiles of Real Time, Near Real Time\r\n             * and Best Effort. This removes all the custom profiles that were loaded.\r\n             */\r\n            function _resetTransmitProfiles() {\r\n                _clearScheduledTimer();\r\n                _initializeProfiles();\r\n                _currentProfile = RT_PROFILE;\r\n                _scheduleTimer();\r\n            }\r\n            function _initializeProfiles() {\r\n                _profiles = {};\r\n                _profiles[RT_PROFILE] = [2, 1, 0];\r\n                _profiles[NRT_PROFILE] = [6, 3, 0];\r\n                _profiles[BE_PROFILE] = [18, 9, 0];\r\n            }\r\n            /**\r\n             * The notification handler for requeue events\r\n             * @ignore\r\n             */\r\n            function _requeueEvents(batches, reason) {\r\n                var droppedEvents = [];\r\n                var maxSendAttempts = _maxEventSendAttempts;\r\n                if (_isPageUnloadTriggered) {\r\n                    // If a page unlaod has been triggered reduce the number of times we try to \"retry\"\r\n                    maxSendAttempts = _maxUnloadEventSendAttempts;\r\n                }\r\n                arrForEach(batches, function (theBatch) {\r\n                    if (theBatch && theBatch[_DYN_COUNT /* @min:%2ecount */]() > 0) {\r\n                        arrForEach(theBatch[_DYN_EVENTS /* @min:%2eevents */](), function (theEvent) {\r\n                            if (theEvent) {\r\n                                // Check if the request being added back is for a sync event in which case mark it no longer a sync event\r\n                                if (theEvent[_DYN_SYNC /* @min:%2esync */]) {\r\n                                    theEvent[_DYN_LATENCY /* @min:%2elatency */] = 4 /* EventLatencyValue.Immediate */;\r\n                                    theEvent[_DYN_SYNC /* @min:%2esync */] = false;\r\n                                }\r\n                                if (theEvent[_DYN_SEND_ATTEMPT /* @min:%2esendAttempt */] < maxSendAttempts) {\r\n                                    // Reset the event timings\r\n                                    setProcessTelemetryTimings(theEvent, _self[_DYN_IDENTIFIER /* @min:%2eidentifier */]);\r\n                                    _addEventToQueues(theEvent, false);\r\n                                }\r\n                                else {\r\n                                    droppedEvents[_DYN_PUSH /* @min:%2epush */](theEvent);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n                if (droppedEvents[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    _notifyEvents(strEventsDiscarded, droppedEvents, EventsDiscardedReason.NonRetryableStatus);\r\n                }\r\n                if (_isPageUnloadTriggered) {\r\n                    // Unload event has been received so we need to try and flush new events\r\n                    _releaseAllQueues(2 /* EventSendType.SendBeacon */, 2 /* SendRequestReason.Unload */);\r\n                }\r\n            }\r\n            function _callNotification(evtName, theArgs) {\r\n                var manager = (_notificationManager || {});\r\n                var notifyFunc = manager[evtName];\r\n                if (notifyFunc) {\r\n                    try {\r\n                        notifyFunc.apply(manager, theArgs);\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternal(_self.diagLog(), 1 /* eLoggingSeverity.CRITICAL */, 74 /* _eInternalMessageId.NotificationException */, evtName + \" notification failed: \" + e);\r\n                    }\r\n                }\r\n            }\r\n            function _notifyEvents(evtName, theEvents) {\r\n                var extraArgs = [];\r\n                for (var _i = 2; _i < arguments.length; _i++) {\r\n                    extraArgs[_i - 2] = arguments[_i];\r\n                }\r\n                if (theEvents && theEvents[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    _callNotification(evtName, [theEvents][_DYN_CONCAT /* @min:%2econcat */](extraArgs));\r\n                }\r\n            }\r\n            function _notifyBatchEvents(evtName, batches) {\r\n                var extraArgs = [];\r\n                for (var _i = 2; _i < arguments.length; _i++) {\r\n                    extraArgs[_i - 2] = arguments[_i];\r\n                }\r\n                if (batches && batches[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    arrForEach(batches, function (theBatch) {\r\n                        if (theBatch && theBatch[_DYN_COUNT /* @min:%2ecount */]() > 0) {\r\n                            _callNotification(evtName, [theBatch.events()][_DYN_CONCAT /* @min:%2econcat */](extraArgs));\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            /**\r\n             * The notification handler for when batches are about to be sent\r\n             * @ignore\r\n             */\r\n            function _sendingEvent(batches, reason, isSyncRequest) {\r\n                if (batches && batches[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    _callNotification(\"eventsSendRequest\", [(reason >= 1000 /* EventBatchNotificationReason.SendingUndefined */ && reason <= 1999 /* EventBatchNotificationReason.SendingEventMax */ ?\r\n                            reason - 1000 /* EventBatchNotificationReason.SendingUndefined */ :\r\n                            0 /* SendRequestReason.Undefined */), isSyncRequest !== true]);\r\n                }\r\n            }\r\n            /**\r\n             * This event represents that a batch of events have been successfully sent and a response received\r\n             * @param batches The notification handler for when the batches have been successfully sent\r\n             * @param reason For this event the reason will always be EventBatchNotificationReason.Complete\r\n             */\r\n            function _eventsSentEvent(batches, reason) {\r\n                _notifyBatchEvents(\"eventsSent\", batches, reason);\r\n                // Try and schedule the processing timer if we have events\r\n                _scheduleTimer();\r\n            }\r\n            function _eventsDropped(batches, reason) {\r\n                _notifyBatchEvents(strEventsDiscarded, batches, (reason >= 8000 /* EventBatchNotificationReason.EventsDropped */ && reason <= 8999 /* EventBatchNotificationReason.EventsDroppedMax */ ?\r\n                    reason - 8000 /* EventBatchNotificationReason.EventsDropped */ :\r\n                    EventsDiscardedReason.Unknown));\r\n            }\r\n            function _eventsResponseFail(batches) {\r\n                _notifyBatchEvents(strEventsDiscarded, batches, EventsDiscardedReason.NonRetryableStatus);\r\n                // Try and schedule the processing timer if we have events\r\n                _scheduleTimer();\r\n            }\r\n            function _otherEvent(batches, reason) {\r\n                _notifyBatchEvents(strEventsDiscarded, batches, EventsDiscardedReason.Unknown);\r\n                // Try and schedule the processing timer if we have events\r\n                _scheduleTimer();\r\n            }\r\n            function _setAutoLimits() {\r\n                if (!_disableAutoBatchFlushLimit) {\r\n                    _autoFlushBatchLimit = Math.max(MaxNumberEventPerBatch * (MaxConnections + 1), _queueSizeLimit / 6);\r\n                }\r\n                else {\r\n                    _autoFlushBatchLimit = 0;\r\n                }\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for PostChannel.prototype.initialize.\r\n// Removed Stub for PostChannel.prototype.processTelemetry.\r\n// Removed Stub for PostChannel.prototype.setEventQueueLimits.\r\n// Removed Stub for PostChannel.prototype.pause.\r\n// Removed Stub for PostChannel.prototype.resume.\r\n// Removed Stub for PostChannel.prototype.addResponseHandler.\r\n// Removed Stub for PostChannel.prototype.flush.\r\n// Removed Stub for PostChannel.prototype.setMsaAuthTicket.\r\n// Removed Stub for PostChannel.prototype.setAuthPluginHeader.\r\n// Removed Stub for PostChannel.prototype.removeAuthPluginHeader.\r\n// Removed Stub for PostChannel.prototype.hasEvents.\r\n// Removed Stub for PostChannel.prototype._loadTransmitProfiles.\r\n// Removed Stub for PostChannel.prototype._setTransmitProfile.\r\n// Removed Stub for PostChannel.prototype._backOffTransmission.\r\n// Removed Stub for PostChannel.prototype._clearBackOff.\r\n// Removed Stub for PostChannel.prototype.getOfflineSupport.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    PostChannel.__ieDyn=1;\n\n    return PostChannel;\r\n}(BaseTelemetryPlugin));\r\nexport { PostChannel };\r\n//# sourceMappingURL=PostChannel.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrReduce, objKeys, strEndsWith } from \"@microsoft/applicationinsights-core-js\";\r\nimport { DEFAULT_BREEZE_ENDPOINT } from \"./Constants\";\r\nimport { _DYN_INGESTIONENDPOINT, _DYN_LENGTH, _DYN_SPLIT, _DYN_TO_LOWER_CASE } from \"./__DynamicConstants\";\r\nvar _FIELDS_SEPARATOR = \";\";\r\nvar _FIELD_KEY_VALUE_SEPARATOR = \"=\";\r\nexport function parseConnectionString(connectionString) {\r\n    if (!connectionString) {\r\n        return {};\r\n    }\r\n    var kvPairs = connectionString[_DYN_SPLIT /* @min:%2esplit */](_FIELDS_SEPARATOR);\r\n    var result = arrReduce(kvPairs, function (fields, kv) {\r\n        var kvParts = kv[_DYN_SPLIT /* @min:%2esplit */](_FIELD_KEY_VALUE_SEPARATOR);\r\n        if (kvParts[_DYN_LENGTH /* @min:%2elength */] === 2) { // only save fields with valid formats\r\n            var key = kvParts[0][_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n            var value = kvParts[1];\r\n            fields[key] = value;\r\n        }\r\n        return fields;\r\n    }, {});\r\n    if (objKeys(result)[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        // this is a valid connection string, so parse the results\r\n        if (result.endpointsuffix) {\r\n            // apply the default endpoints\r\n            var locationPrefix = result.location ? result.location + \".\" : \"\";\r\n            result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] = result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] || (\"https://\" + locationPrefix + \"dc.\" + result.endpointsuffix);\r\n        }\r\n        // apply user override endpoint or the default endpoints\r\n        result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] = result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] || DEFAULT_BREEZE_ENDPOINT;\r\n        if (strEndsWith(result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */], \"/\")) {\r\n            result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] = result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */].slice(0, -1);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport var ConnectionStringParser = {\r\n    parse: parseConnectionString\r\n};\r\n//# sourceMappingURL=ConnectionStringParser.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n/**\r\n * This is an internal property used to cause internal (reporting) requests to be ignored from reporting\r\n * additional telemetry, to handle polyfil implementations ALL urls used with a disabled request will\r\n * also be ignored for future requests even when this property is not provided.\r\n * Tagging as Ignore as this is an internal value and is not expected to be used outside of the SDK\r\n * @ignore\r\n */\r\nexport var DisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nexport var SampleRate = \"sampleRate\";\r\nexport var ProcessLegacy = \"ProcessLegacy\";\r\nexport var HttpMethod = \"http.method\";\r\nexport var DEFAULT_BREEZE_ENDPOINT = \"https://dc.services.visualstudio.com\";\r\nexport var DEFAULT_BREEZE_PATH = \"/v2/track\";\r\nexport var strNotSpecified = \"not_specified\";\r\nexport var strIkey = \"iKey\";\r\n//# sourceMappingURL=Constants.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createEnumStyle } from \"@microsoft/applicationinsights-core-js\";\r\nexport var StorageType = createEnumStyle({\r\n    LocalStorage: 0 /* eStorageType.LocalStorage */,\r\n    SessionStorage: 1 /* eStorageType.SessionStorage */\r\n});\r\nexport var DistributedTracingModes = createEnumStyle({\r\n    AI: 0 /* eDistributedTracingModes.AI */,\r\n    AI_AND_W3C: 1 /* eDistributedTracingModes.AI_AND_W3C */,\r\n    W3C: 2 /* eDistributedTracingModes.W3C */\r\n});\r\n/**\r\n * The EventPersistence contains a set of values that specify the event's persistence.\r\n */\r\nexport var EventPersistence = createEnumStyle({\r\n    /**\r\n     * Normal persistence.\r\n     */\r\n    Normal: 1 /* EventPersistenceValue.Normal */,\r\n    /**\r\n     * Critical persistence.\r\n     */\r\n    Critical: 2 /* EventPersistenceValue.Critical */\r\n});\r\n//# sourceMappingURL=Enums.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, isString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_LENGTH, _DYN_TO_LOWER_CASE } from \"./__DynamicConstants\";\r\nvar strEmpty = \"\";\r\nexport function stringToBoolOrDefault(str, defaultValue) {\r\n    if (defaultValue === void 0) { defaultValue = false; }\r\n    if (str === undefined || str === null) {\r\n        return defaultValue;\r\n    }\r\n    return str.toString()[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() === \"true\";\r\n}\r\n/**\r\n * Convert ms to c# time span format\r\n */\r\nexport function msToTimeSpan(totalms) {\r\n    if (isNaN(totalms) || totalms < 0) {\r\n        totalms = 0;\r\n    }\r\n    totalms = Math.round(totalms);\r\n    var ms = strEmpty + totalms % 1000;\r\n    var sec = strEmpty + Math.floor(totalms / 1000) % 60;\r\n    var min = strEmpty + Math.floor(totalms / (1000 * 60)) % 60;\r\n    var hour = strEmpty + Math.floor(totalms / (1000 * 60 * 60)) % 24;\r\n    var days = Math.floor(totalms / (1000 * 60 * 60 * 24));\r\n    ms = ms[_DYN_LENGTH /* @min:%2elength */] === 1 ? \"00\" + ms : ms[_DYN_LENGTH /* @min:%2elength */] === 2 ? \"0\" + ms : ms;\r\n    sec = sec[_DYN_LENGTH /* @min:%2elength */] < 2 ? \"0\" + sec : sec;\r\n    min = min[_DYN_LENGTH /* @min:%2elength */] < 2 ? \"0\" + min : min;\r\n    hour = hour[_DYN_LENGTH /* @min:%2elength */] < 2 ? \"0\" + hour : hour;\r\n    return (days > 0 ? days + \".\" : strEmpty) + hour + \":\" + min + \":\" + sec + \".\" + ms;\r\n}\r\nexport function getExtensionByName(extensions, identifier) {\r\n    var extension = null;\r\n    arrForEach(extensions, function (value) {\r\n        if (value.identifier === identifier) {\r\n            extension = value;\r\n            return -1;\r\n        }\r\n    });\r\n    return extension;\r\n}\r\nexport function isCrossOriginError(message, url, lineNumber, columnNumber, error) {\r\n    return !error && isString(message) && (message === \"Script error.\" || message === \"Script error\");\r\n}\r\n//# sourceMappingURL=HelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport { createClassFromInterface } from \"@microsoft/applicationinsights-core-js\";\r\nfunction _aiNameFunc(baseName) {\r\n    var aiName = \"ai.\" + baseName + \".\";\r\n    return function (name) {\r\n        return aiName + name;\r\n    };\r\n}\r\nvar _aiApplication = _aiNameFunc(\"application\");\r\nvar _aiDevice = _aiNameFunc(\"device\");\r\nvar _aiLocation = _aiNameFunc(\"location\");\r\nvar _aiOperation = _aiNameFunc(\"operation\");\r\nvar _aiSession = _aiNameFunc(\"session\");\r\nvar _aiUser = _aiNameFunc(\"user\");\r\nvar _aiCloud = _aiNameFunc(\"cloud\");\r\nvar _aiInternal = _aiNameFunc(\"internal\");\r\nvar ContextTagKeys = /** @class */ (function (_super) {\r\n    __extends(ContextTagKeys, _super);\r\n    function ContextTagKeys() {\r\n        return _super.call(this) || this;\r\n    }\r\n    return ContextTagKeys;\r\n}(createClassFromInterface({\r\n    applicationVersion: _aiApplication(\"ver\"),\r\n    applicationBuild: _aiApplication(\"build\"),\r\n    applicationTypeId: _aiApplication(\"typeId\"),\r\n    applicationId: _aiApplication(\"applicationId\"),\r\n    applicationLayer: _aiApplication(\"layer\"),\r\n    deviceId: _aiDevice(\"id\"),\r\n    deviceIp: _aiDevice(\"ip\"),\r\n    deviceLanguage: _aiDevice(\"language\"),\r\n    deviceLocale: _aiDevice(\"locale\"),\r\n    deviceModel: _aiDevice(\"model\"),\r\n    deviceFriendlyName: _aiDevice(\"friendlyName\"),\r\n    deviceNetwork: _aiDevice(\"network\"),\r\n    deviceNetworkName: _aiDevice(\"networkName\"),\r\n    deviceOEMName: _aiDevice(\"oemName\"),\r\n    deviceOS: _aiDevice(\"os\"),\r\n    deviceOSVersion: _aiDevice(\"osVersion\"),\r\n    deviceRoleInstance: _aiDevice(\"roleInstance\"),\r\n    deviceRoleName: _aiDevice(\"roleName\"),\r\n    deviceScreenResolution: _aiDevice(\"screenResolution\"),\r\n    deviceType: _aiDevice(\"type\"),\r\n    deviceMachineName: _aiDevice(\"machineName\"),\r\n    deviceVMName: _aiDevice(\"vmName\"),\r\n    deviceBrowser: _aiDevice(\"browser\"),\r\n    deviceBrowserVersion: _aiDevice(\"browserVersion\"),\r\n    locationIp: _aiLocation(\"ip\"),\r\n    locationCountry: _aiLocation(\"country\"),\r\n    locationProvince: _aiLocation(\"province\"),\r\n    locationCity: _aiLocation(\"city\"),\r\n    operationId: _aiOperation(\"id\"),\r\n    operationName: _aiOperation(\"name\"),\r\n    operationParentId: _aiOperation(\"parentId\"),\r\n    operationRootId: _aiOperation(\"rootId\"),\r\n    operationSyntheticSource: _aiOperation(\"syntheticSource\"),\r\n    operationCorrelationVector: _aiOperation(\"correlationVector\"),\r\n    sessionId: _aiSession(\"id\"),\r\n    sessionIsFirst: _aiSession(\"isFirst\"),\r\n    sessionIsNew: _aiSession(\"isNew\"),\r\n    userAccountAcquisitionDate: _aiUser(\"accountAcquisitionDate\"),\r\n    userAccountId: _aiUser(\"accountId\"),\r\n    userAgent: _aiUser(\"userAgent\"),\r\n    userId: _aiUser(\"id\"),\r\n    userStoreRegion: _aiUser(\"storeRegion\"),\r\n    userAuthUserId: _aiUser(\"authUserId\"),\r\n    userAnonymousUserAcquisitionDate: _aiUser(\"anonUserAcquisitionDate\"),\r\n    userAuthenticatedUserAcquisitionDate: _aiUser(\"authUserAcquisitionDate\"),\r\n    cloudName: _aiCloud(\"name\"),\r\n    cloudRole: _aiCloud(\"role\"),\r\n    cloudRoleVer: _aiCloud(\"roleVer\"),\r\n    cloudRoleInstance: _aiCloud(\"roleInstance\"),\r\n    cloudEnvironment: _aiCloud(\"environment\"),\r\n    cloudLocation: _aiCloud(\"location\"),\r\n    cloudDeploymentUnit: _aiCloud(\"deploymentUnit\"),\r\n    internalNodeName: _aiInternal(\"nodeName\"),\r\n    internalSdkVersion: _aiInternal(\"sdkVersion\"),\r\n    internalAgentVersion: _aiInternal(\"agentVersion\"),\r\n    internalSnippet: _aiInternal(\"snippet\"),\r\n    internalSdkSrc: _aiInternal(\"sdkSrc\")\r\n})));\r\nexport { ContextTagKeys };\r\n//# sourceMappingURL=ContextTagKeys.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createEnumStyle } from \"@microsoft/applicationinsights-core-js\";\r\n/**\r\n * Defines the level of severity for the event.\r\n */\r\nexport var SeverityLevel = createEnumStyle({\r\n    Verbose: 0 /* eSeverityLevel.Verbose */,\r\n    Information: 1 /* eSeverityLevel.Information */,\r\n    Warning: 2 /* eSeverityLevel.Warning */,\r\n    Error: 3 /* eSeverityLevel.Error */,\r\n    Critical: 4 /* eSeverityLevel.Critical */\r\n});\r\n//# sourceMappingURL=SeverityLevel.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { ContextTagKeys } from \"./Contracts/ContextTagKeys\";\r\nexport var Extensions = {\r\n    UserExt: \"user\",\r\n    DeviceExt: \"device\",\r\n    TraceExt: \"trace\",\r\n    WebExt: \"web\",\r\n    AppExt: \"app\",\r\n    OSExt: \"os\",\r\n    SessionExt: \"ses\",\r\n    SDKExt: \"sdk\"\r\n};\r\nexport var CtxTagKeys = new ContextTagKeys();\r\n//# sourceMappingURL=PartAExtensions.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { arrForEach, createUniqueNamespace, eventOff, eventOn, getDocument, getNavigator, getWindow, isNullOrUndefined, isUndefined, mergeEvtNamespace } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_PUSH } from \"./__DynamicConstants\";\r\nfunction _disableEvents(target, evtNamespace) {\r\n    eventOff(target, null, null, evtNamespace);\r\n}\r\n/**\r\n * Create a new OfflineListener instance to monitor browser online / offline events\r\n * @param parentEvtNamespace - The parent event namespace to append to any specific events for this instance\r\n */\r\nexport function createOfflineListener(parentEvtNamespace) {\r\n    var _document = getDocument();\r\n    var _navigator = getNavigator(); // Gets the window.navigator or workerNavigator depending on the global\r\n    var _isListening = false;\r\n    var listenerList = [];\r\n    // Set the initial state\r\n    // rState is changed by the browser, both via events and when we check the navigator.onLine property\r\n    var rState = 1 /* eOfflineValue.Online */;\r\n    if (_navigator && !isNullOrUndefined(_navigator.onLine) && !_navigator.onLine) { // navigator.onLine is undefined in react-native\r\n        rState = 2 /* eOfflineValue.Offline */;\r\n    }\r\n    // ustate is changed by the user calling setOnlineState\r\n    var uState = 0 /* eOfflineValue.Unknown */;\r\n    // current state would be updated each time rState or uState is changed\r\n    // it is a resolved value of rState and uState\r\n    var _currentState = calCurrentState();\r\n    var _evtNamespace = mergeEvtNamespace(createUniqueNamespace(\"OfflineListener\"), parentEvtNamespace);\r\n    try {\r\n        if (_enableEvents(getWindow())) {\r\n            _isListening = true;\r\n        }\r\n        if (_document) {\r\n            // Also attach to the document.body or document\r\n            var target = _document.body || _document;\r\n            if (target.ononline) {\r\n                if (_enableEvents(target)) {\r\n                    _isListening = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        // this makes react-native less angry\r\n        _isListening = false;\r\n    }\r\n    function _enableEvents(target) {\r\n        var enabled = false;\r\n        if (target) {\r\n            enabled = eventOn(target, \"online\", _setOnline, _evtNamespace);\r\n            if (enabled) {\r\n                eventOn(target, \"offline\", _setOffline, _evtNamespace);\r\n            }\r\n        }\r\n        return enabled;\r\n    }\r\n    function _isOnline() {\r\n        return _currentState;\r\n    }\r\n    function calCurrentState() {\r\n        if (uState === 2 /* eOfflineValue.Offline */ || rState === 2 /* eOfflineValue.Offline */) {\r\n            return false;\r\n        }\r\n        return true; // if both unknown, then we assume the network is good\r\n    }\r\n    function listnerNoticeCheck() {\r\n        // we were offline and are now online or we were online and now offline\r\n        var newState = calCurrentState();\r\n        if (_currentState !== newState) {\r\n            _currentState = newState; // use the resolved state to update\r\n            // send all the callbacks with the current state\r\n            arrForEach(listenerList, function (callback) {\r\n                var offlineState = {\r\n                    isOnline: _currentState,\r\n                    rState: rState,\r\n                    uState: uState\r\n                };\r\n                try {\r\n                    callback(offlineState);\r\n                }\r\n                catch (e) {\r\n                    // Do nothing, just making sure we run all of the callbacks\r\n                }\r\n            });\r\n        }\r\n    }\r\n    function setOnlineState(newState) {\r\n        uState = newState;\r\n        listnerNoticeCheck();\r\n    }\r\n    function _setOnline() {\r\n        rState = 1 /* eOfflineValue.Online */;\r\n        listnerNoticeCheck();\r\n    }\r\n    function _setOffline() {\r\n        rState = 2 /* eOfflineValue.Offline */;\r\n        listnerNoticeCheck();\r\n    }\r\n    function _unload() {\r\n        var win = getWindow();\r\n        if (win && _isListening) {\r\n            _disableEvents(win, _evtNamespace);\r\n            if (_document) {\r\n                // Also attach to the document.body or document\r\n                var target = _document.body || _document;\r\n                if (!isUndefined(target.ononline)) {\r\n                    _disableEvents(target, _evtNamespace);\r\n                }\r\n            }\r\n            _isListening = false;\r\n        }\r\n    }\r\n    function addListener(callback) {\r\n        listenerList[_DYN_PUSH /* @min:%2epush */](callback);\r\n        // Define rm as an instance of IUnloadHook\r\n        return {\r\n            rm: function () {\r\n                var index = listenerList.indexOf(callback);\r\n                if (index > -1) {\r\n                    return listenerList.splice(index, 1);\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n        };\r\n    }\r\n    return {\r\n        isOnline: _isOnline,\r\n        isListening: function () { return _isListening; },\r\n        unload: _unload,\r\n        addListener: addListener,\r\n        setOnlineState: setOnlineState\r\n    };\r\n}\r\n//# sourceMappingURL=Offline.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createValueMap } from \"@microsoft/applicationinsights-core-js\";\r\nexport var RequestHeaders = createValueMap({\r\n    requestContextHeader: [0 /* eRequestHeaders.requestContextHeader */, \"Request-Context\"],\r\n    requestContextTargetKey: [1 /* eRequestHeaders.requestContextTargetKey */, \"appId\"],\r\n    requestContextAppIdFormat: [2 /* eRequestHeaders.requestContextAppIdFormat */, \"appId=cid-v1:\"],\r\n    requestIdHeader: [3 /* eRequestHeaders.requestIdHeader */, \"Request-Id\"],\r\n    traceParentHeader: [4 /* eRequestHeaders.traceParentHeader */, \"traceparent\"],\r\n    traceStateHeader: [5 /* eRequestHeaders.traceStateHeader */, \"tracestate\"],\r\n    sdkContextHeader: [6 /* eRequestHeaders.sdkContextHeader */, \"Sdk-Context\"],\r\n    sdkContextHeaderAppIdRequest: [7 /* eRequestHeaders.sdkContextHeaderAppIdRequest */, \"appId\"],\r\n    requestContextHeaderLowerCase: [8 /* eRequestHeaders.requestContextHeaderLowerCase */, \"request-context\"]\r\n});\r\n//# sourceMappingURL=RequestResponseHeaders.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { _throwInternal, dumpObj, getExceptionName, getGlobal, getGlobalInst, isNullOrUndefined, objForEachKey } from \"@microsoft/applicationinsights-core-js\";\r\nimport { StorageType } from \"./Enums\";\r\nimport { _DYN_PUSH, _DYN_REMOVE_ITEM, _DYN_TO_STRING } from \"./__DynamicConstants\";\r\nvar _canUseLocalStorage = undefined;\r\nvar _canUseSessionStorage = undefined;\r\nvar _storagePrefix = \"\";\r\n/**\r\n * Gets the localStorage object if available\r\n * @return {Storage} - Returns the storage object if available else returns null\r\n */\r\nfunction _getLocalStorageObject() {\r\n    if (utlCanUseLocalStorage()) {\r\n        return _getVerifiedStorageObject(StorageType.LocalStorage);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Tests storage object (localStorage or sessionStorage) to verify that it is usable\r\n * More details here: https://mathiasbynens.be/notes/localstorage-pattern\r\n * @param storageType - Type of storage\r\n * @return {Storage} Returns storage object verified that it is usable\r\n */\r\nfunction _getVerifiedStorageObject(storageType) {\r\n    try {\r\n        if (isNullOrUndefined(getGlobal())) {\r\n            return null;\r\n        }\r\n        var uid = (new Date)[_DYN_TO_STRING /* @min:%2etoString */]();\r\n        var storage = getGlobalInst(storageType === StorageType.LocalStorage ? \"localStorage\" : \"sessionStorage\");\r\n        var name_1 = _storagePrefix + uid;\r\n        storage.setItem(name_1, uid);\r\n        var fail = storage.getItem(name_1) !== uid;\r\n        storage[_DYN_REMOVE_ITEM /* @min:%2eremoveItem */](name_1);\r\n        if (!fail) {\r\n            return storage;\r\n        }\r\n    }\r\n    catch (exception) {\r\n        // eslint-disable-next-line no-empty\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Gets the sessionStorage object if available\r\n * @return {Storage} - Returns the storage object if available else returns null\r\n */\r\nfunction _getSessionStorageObject() {\r\n    if (utlCanUseSessionStorage()) {\r\n        return _getVerifiedStorageObject(StorageType.SessionStorage);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Disables the global SDK usage of local or session storage if available\r\n */\r\nexport function utlDisableStorage() {\r\n    _canUseLocalStorage = false;\r\n    _canUseSessionStorage = false;\r\n}\r\nexport function utlSetStoragePrefix(storagePrefix) {\r\n    _storagePrefix = storagePrefix || \"\";\r\n}\r\n/**\r\n * Re-enables the global SDK usage of local or session storage if available\r\n */\r\nexport function utlEnableStorage() {\r\n    _canUseLocalStorage = utlCanUseLocalStorage(true);\r\n    _canUseSessionStorage = utlCanUseSessionStorage(true);\r\n}\r\n/**\r\n * Returns whether LocalStorage can be used, if the reset parameter is passed a true this will override\r\n * any previous disable calls.\r\n * @param reset - Should the usage be reset and determined only based on whether LocalStorage is available\r\n */\r\nexport function utlCanUseLocalStorage(reset) {\r\n    if (reset || _canUseLocalStorage === undefined) {\r\n        _canUseLocalStorage = !!_getVerifiedStorageObject(StorageType.LocalStorage);\r\n    }\r\n    return _canUseLocalStorage;\r\n}\r\nexport function utlGetLocalStorage(logger, name) {\r\n    var storage = _getLocalStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            return storage.getItem(name);\r\n        }\r\n        catch (e) {\r\n            _canUseLocalStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 1 /* _eInternalMessageId.BrowserCannotReadLocalStorage */, \"Browser failed read of local storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function utlSetLocalStorage(logger, name, data) {\r\n    var storage = _getLocalStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage.setItem(name, data);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseLocalStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 3 /* _eInternalMessageId.BrowserCannotWriteLocalStorage */, \"Browser failed write to local storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function utlRemoveStorage(logger, name) {\r\n    var storage = _getLocalStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage[_DYN_REMOVE_ITEM /* @min:%2eremoveItem */](name);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseLocalStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 5 /* _eInternalMessageId.BrowserFailedRemovalFromLocalStorage */, \"Browser failed removal of local storage item. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function utlCanUseSessionStorage(reset) {\r\n    if (reset || _canUseSessionStorage === undefined) {\r\n        _canUseSessionStorage = !!_getVerifiedStorageObject(StorageType.SessionStorage);\r\n    }\r\n    return _canUseSessionStorage;\r\n}\r\nexport function utlGetSessionStorageKeys() {\r\n    var keys = [];\r\n    if (utlCanUseSessionStorage()) {\r\n        objForEachKey(getGlobalInst(\"sessionStorage\"), function (key) {\r\n            keys[_DYN_PUSH /* @min:%2epush */](key);\r\n        });\r\n    }\r\n    return keys;\r\n}\r\nexport function utlGetSessionStorage(logger, name) {\r\n    var storage = _getSessionStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            return storage.getItem(name);\r\n        }\r\n        catch (e) {\r\n            _canUseSessionStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 2 /* _eInternalMessageId.BrowserCannotReadSessionStorage */, \"Browser failed read of session storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function utlSetSessionStorage(logger, name, data) {\r\n    var storage = _getSessionStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage.setItem(name, data);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseSessionStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 4 /* _eInternalMessageId.BrowserCannotWriteSessionStorage */, \"Browser failed write to session storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function utlRemoveSessionStorage(logger, name) {\r\n    var storage = _getSessionStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage[_DYN_REMOVE_ITEM /* @min:%2eremoveItem */](name);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseSessionStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 6 /* _eInternalMessageId.BrowserFailedRemovalFromSessionStorage */, \"Browser failed removal of session storage item. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=StorageHelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nvar Data = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Data(baseType, data) {\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        this.aiDataContract = {\r\n            baseType: 1 /* FieldType.Required */,\r\n            baseData: 1 /* FieldType.Required */\r\n        };\r\n        this.baseType = baseType;\r\n        this.baseData = data;\r\n    }\r\n    return Data;\r\n}());\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { _throwInternal, getJSON, hasJSON, isObject, objForEachKey, strTrim } from \"@microsoft/applicationinsights-core-js\";\r\nimport { asString, strSubstr, strSubstring } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH, _DYN_STRINGIFY, _DYN_TO_STRING } from \"../../__DynamicConstants\";\r\nexport function dataSanitizeKeyAndAddUniqueness(logger, key, map) {\r\n    var origLength = key[_DYN_LENGTH /* @min:%2elength */];\r\n    var field = dataSanitizeKey(logger, key);\r\n    // validation truncated the length.  We need to add uniqueness\r\n    if (field[_DYN_LENGTH /* @min:%2elength */] !== origLength) {\r\n        var i = 0;\r\n        var uniqueField = field;\r\n        while (map[uniqueField] !== undefined) {\r\n            i++;\r\n            uniqueField = strSubstring(field, 0, 150 /* DataSanitizerValues.MAX_NAME_LENGTH */ - 3) + dsPadNumber(i);\r\n        }\r\n        field = uniqueField;\r\n    }\r\n    return field;\r\n}\r\nexport function dataSanitizeKey(logger, name) {\r\n    var nameTrunc;\r\n    if (name) {\r\n        // Remove any leading or trailing whitespace\r\n        name = strTrim(asString(name));\r\n        // truncate the string to 150 chars\r\n        if (name[_DYN_LENGTH /* @min:%2elength */] > 150 /* DataSanitizerValues.MAX_NAME_LENGTH */) {\r\n            nameTrunc = strSubstring(name, 0, 150 /* DataSanitizerValues.MAX_NAME_LENGTH */);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 57 /* _eInternalMessageId.NameTooLong */, \"name is too long.  It has been truncated to \" + 150 /* DataSanitizerValues.MAX_NAME_LENGTH */ + \" characters.\", { name: name }, true);\r\n        }\r\n    }\r\n    return nameTrunc || name;\r\n}\r\nexport function dataSanitizeString(logger, value, maxLength) {\r\n    if (maxLength === void 0) { maxLength = 1024 /* DataSanitizerValues.MAX_STRING_LENGTH */; }\r\n    var valueTrunc;\r\n    if (value) {\r\n        maxLength = maxLength ? maxLength : 1024 /* DataSanitizerValues.MAX_STRING_LENGTH */; // in case default parameters dont work\r\n        value = strTrim(asString(value));\r\n        if (value[_DYN_LENGTH /* @min:%2elength */] > maxLength) {\r\n            valueTrunc = strSubstring(value, 0, maxLength);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 61 /* _eInternalMessageId.StringValueTooLong */, \"string value is too long. It has been truncated to \" + maxLength + \" characters.\", { value: value }, true);\r\n        }\r\n    }\r\n    return valueTrunc || value;\r\n}\r\nexport function dataSanitizeUrl(logger, url) {\r\n    return dataSanitizeInput(logger, url, 2048 /* DataSanitizerValues.MAX_URL_LENGTH */, 66 /* _eInternalMessageId.UrlTooLong */);\r\n}\r\nexport function dataSanitizeMessage(logger, message) {\r\n    var messageTrunc;\r\n    if (message) {\r\n        if (message[_DYN_LENGTH /* @min:%2elength */] > 32768 /* DataSanitizerValues.MAX_MESSAGE_LENGTH */) {\r\n            messageTrunc = strSubstring(message, 0, 32768 /* DataSanitizerValues.MAX_MESSAGE_LENGTH */);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 56 /* _eInternalMessageId.MessageTruncated */, \"message is too long, it has been truncated to \" + 32768 /* DataSanitizerValues.MAX_MESSAGE_LENGTH */ + \" characters.\", { message: message }, true);\r\n        }\r\n    }\r\n    return messageTrunc || message;\r\n}\r\nexport function dataSanitizeException(logger, exception) {\r\n    var exceptionTrunc;\r\n    if (exception) {\r\n        // Make surte its a string\r\n        var value = \"\" + exception;\r\n        if (value[_DYN_LENGTH /* @min:%2elength */] > 32768 /* DataSanitizerValues.MAX_EXCEPTION_LENGTH */) {\r\n            exceptionTrunc = strSubstring(value, 0, 32768 /* DataSanitizerValues.MAX_EXCEPTION_LENGTH */);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 52 /* _eInternalMessageId.ExceptionTruncated */, \"exception is too long, it has been truncated to \" + 32768 /* DataSanitizerValues.MAX_EXCEPTION_LENGTH */ + \" characters.\", { exception: exception }, true);\r\n        }\r\n    }\r\n    return exceptionTrunc || exception;\r\n}\r\nexport function dataSanitizeProperties(logger, properties) {\r\n    if (properties) {\r\n        var tempProps_1 = {};\r\n        objForEachKey(properties, function (prop, value) {\r\n            if (isObject(value) && hasJSON()) {\r\n                // Stringify any part C properties\r\n                try {\r\n                    value = getJSON()[_DYN_STRINGIFY /* @min:%2estringify */](value);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 49 /* _eInternalMessageId.CannotSerializeObjectNonSerializable */, \"custom property is not valid\", { exception: e }, true);\r\n                }\r\n            }\r\n            value = dataSanitizeString(logger, value, 8192 /* DataSanitizerValues.MAX_PROPERTY_LENGTH */);\r\n            prop = dataSanitizeKeyAndAddUniqueness(logger, prop, tempProps_1);\r\n            tempProps_1[prop] = value;\r\n        });\r\n        properties = tempProps_1;\r\n    }\r\n    return properties;\r\n}\r\nexport function dataSanitizeMeasurements(logger, measurements) {\r\n    if (measurements) {\r\n        var tempMeasurements_1 = {};\r\n        objForEachKey(measurements, function (measure, value) {\r\n            measure = dataSanitizeKeyAndAddUniqueness(logger, measure, tempMeasurements_1);\r\n            tempMeasurements_1[measure] = value;\r\n        });\r\n        measurements = tempMeasurements_1;\r\n    }\r\n    return measurements;\r\n}\r\nexport function dataSanitizeId(logger, id) {\r\n    return id ? dataSanitizeInput(logger, id, 128 /* DataSanitizerValues.MAX_ID_LENGTH */, 69 /* _eInternalMessageId.IdTooLong */)[_DYN_TO_STRING /* @min:%2etoString */]() : id;\r\n}\r\nexport function dataSanitizeInput(logger, input, maxLength, _msgId) {\r\n    var inputTrunc;\r\n    if (input) {\r\n        input = strTrim(asString(input));\r\n        if (input[_DYN_LENGTH /* @min:%2elength */] > maxLength) {\r\n            inputTrunc = strSubstring(input, 0, maxLength);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, _msgId, \"input is too long, it has been truncated to \" + maxLength + \" characters.\", { data: input }, true);\r\n        }\r\n    }\r\n    return inputTrunc || input;\r\n}\r\nexport function dsPadNumber(num) {\r\n    var s = \"00\" + num;\r\n    return strSubstr(s, s[_DYN_LENGTH /* @min:%2elength */] - 3);\r\n}\r\n//# sourceMappingURL=DataSanitizer.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { toISOString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { strNotSpecified } from \"../../Constants\";\r\nimport { _DYN_NAME } from \"../../__DynamicConstants\";\r\nimport { dataSanitizeString } from \"./DataSanitizer\";\r\nvar Envelope = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Envelope(logger, data, name) {\r\n        var _this = this;\r\n        var _self = this;\r\n        _self.ver = 1;\r\n        _self.sampleRate = 100.0;\r\n        _self.tags = {};\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        _self.data = data;\r\n        _self.time = toISOString(new Date());\r\n        _self.aiDataContract = {\r\n            time: 1 /* FieldType.Required */,\r\n            iKey: 1 /* FieldType.Required */,\r\n            name: 1 /* FieldType.Required */,\r\n            sampleRate: function () {\r\n                return (_this.sampleRate === 100) ? 4 /* FieldType.Hidden */ : 1 /* FieldType.Required */;\r\n            },\r\n            tags: 1 /* FieldType.Required */,\r\n            data: 1 /* FieldType.Required */\r\n        };\r\n    }\r\n    return Envelope;\r\n}());\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES } from \"../__DynamicConstants\";\r\nimport { dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString } from \"./Common/DataSanitizer\";\r\nvar Event = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the EventTelemetry object\r\n     */\r\n    function Event(logger, name, properties, measurements) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            name: 1 /* FieldType.Required */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n    }\r\n    Event.envelopeType = \"Microsoft.ApplicationInsights.{0}.Event\";\r\n    Event.dataType = \"EventData\";\r\n    return Event;\r\n}());\r\nexport { Event };\r\n//# sourceMappingURL=Event.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { __assignFn as __assign } from \"@microsoft/applicationinsights-shims\";\r\nimport { arrForEach, arrMap, isArray, isError, isFunction, isNullOrUndefined, isObject, isString, strTrim } from \"@microsoft/applicationinsights-core-js\";\r\nimport { getWindow, strIndexOf } from \"@nevware21/ts-utils\";\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_ASSEMBLY, _DYN_EXCEPTIONS, _DYN_FILE_NAME, _DYN_HAS_FULL_STACK, _DYN_IS_MANUAL, _DYN_LENGTH, _DYN_LEVEL, _DYN_LINE, _DYN_MEASUREMENTS, _DYN_MESSAGE, _DYN_METHOD, _DYN_NAME, _DYN_PARSED_STACK, _DYN_PROBLEM_GROUP, _DYN_PROPERTIES, _DYN_PUSH, _DYN_SEVERITY_LEVEL, _DYN_SIZE_IN_BYTES, _DYN_SPLIT, _DYN_STRINGIFY, _DYN_TO_STRING, _DYN_TYPE_NAME, _DYN__CREATE_FROM_INTERFA1 } from \"../__DynamicConstants\";\r\nimport { dataSanitizeException, dataSanitizeMeasurements, dataSanitizeMessage, dataSanitizeProperties, dataSanitizeString } from \"./Common/DataSanitizer\";\r\nvar NoMethod = \"<no_method>\";\r\nvar strError = \"error\";\r\nvar strStack = \"stack\";\r\nvar strStackDetails = \"stackDetails\";\r\nvar strErrorSrc = \"errorSrc\";\r\nvar strMessage = \"message\";\r\nvar strDescription = \"description\";\r\nfunction _stringify(value, convertToString) {\r\n    var result = value;\r\n    if (result && !isString(result)) {\r\n        if (JSON && JSON[_DYN_STRINGIFY /* @min:%2estringify */]) {\r\n            result = JSON[_DYN_STRINGIFY /* @min:%2estringify */](value);\r\n            if (convertToString && (!result || result === \"{}\")) {\r\n                if (isFunction(value[_DYN_TO_STRING /* @min:%2etoString */])) {\r\n                    result = value[_DYN_TO_STRING /* @min:%2etoString */]();\r\n                }\r\n                else {\r\n                    result = \"\" + value;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            result = \"\" + value + \" - (Missing JSON.stringify)\";\r\n        }\r\n    }\r\n    return result || \"\";\r\n}\r\nfunction _formatMessage(theEvent, errorType) {\r\n    var evtMessage = theEvent;\r\n    if (theEvent) {\r\n        if (evtMessage && !isString(evtMessage)) {\r\n            evtMessage = theEvent[strMessage] || theEvent[strDescription] || evtMessage;\r\n        }\r\n        // Make sure the message is a string\r\n        if (evtMessage && !isString(evtMessage)) {\r\n            // tslint:disable-next-line: prefer-conditional-expression\r\n            evtMessage = _stringify(evtMessage, true);\r\n        }\r\n        if (theEvent[\"filename\"]) {\r\n            // Looks like an event object with filename\r\n            evtMessage = evtMessage + \" @\" + (theEvent[\"filename\"] || \"\") + \":\" + (theEvent[\"lineno\"] || \"?\") + \":\" + (theEvent[\"colno\"] || \"?\");\r\n        }\r\n    }\r\n    // Automatically add the error type to the message if it does already appear to be present\r\n    if (errorType && errorType !== \"String\" && errorType !== \"Object\" && errorType !== \"Error\" && strIndexOf(evtMessage || \"\", errorType) === -1) {\r\n        evtMessage = errorType + \": \" + evtMessage;\r\n    }\r\n    return evtMessage || \"\";\r\n}\r\nfunction _isExceptionDetailsInternal(value) {\r\n    try {\r\n        if (isObject(value)) {\r\n            return \"hasFullStack\" in value && \"typeName\" in value;\r\n        }\r\n    }\r\n    catch (e) {\r\n        // This can happen with some native browser objects, but should not happen for the type we are checking for\r\n    }\r\n    return false;\r\n}\r\nfunction _isExceptionInternal(value) {\r\n    try {\r\n        if (isObject(value)) {\r\n            return (\"ver\" in value && \"exceptions\" in value && \"properties\" in value);\r\n        }\r\n    }\r\n    catch (e) {\r\n        // This can happen with some native browser objects, but should not happen for the type we are checking for\r\n    }\r\n    return false;\r\n}\r\nfunction _isStackDetails(details) {\r\n    return details && details.src && isString(details.src) && details.obj && isArray(details.obj);\r\n}\r\nfunction _convertStackObj(errorStack) {\r\n    var src = errorStack || \"\";\r\n    if (!isString(src)) {\r\n        if (isString(src[strStack])) {\r\n            src = src[strStack];\r\n        }\r\n        else {\r\n            src = \"\" + src;\r\n        }\r\n    }\r\n    var items = src[_DYN_SPLIT /* @min:%2esplit */](\"\\n\");\r\n    return {\r\n        src: src,\r\n        obj: items\r\n    };\r\n}\r\nfunction _getOperaStack(errorMessage) {\r\n    var stack = [];\r\n    var lines = errorMessage[_DYN_SPLIT /* @min:%2esplit */](\"\\n\");\r\n    for (var lp = 0; lp < lines[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n        var entry = lines[lp];\r\n        if (lines[lp + 1]) {\r\n            entry += \"@\" + lines[lp + 1];\r\n            lp++;\r\n        }\r\n        stack[_DYN_PUSH /* @min:%2epush */](entry);\r\n    }\r\n    return {\r\n        src: errorMessage,\r\n        obj: stack\r\n    };\r\n}\r\nfunction _getStackFromErrorObj(errorObj) {\r\n    var details = null;\r\n    if (errorObj) {\r\n        try {\r\n            /* Using bracket notation is support older browsers (IE 7/8 -- dont remember the version) that throw when using dot\r\n            notation for undefined objects and we don't want to loose the error from being reported */\r\n            if (errorObj[strStack]) {\r\n                // Chrome/Firefox\r\n                details = _convertStackObj(errorObj[strStack]);\r\n            }\r\n            else if (errorObj[strError] && errorObj[strError][strStack]) {\r\n                // Edge error event provides the stack and error object\r\n                details = _convertStackObj(errorObj[strError][strStack]);\r\n            }\r\n            else if (errorObj[\"exception\"] && errorObj.exception[strStack]) {\r\n                details = _convertStackObj(errorObj.exception[strStack]);\r\n            }\r\n            else if (_isStackDetails(errorObj)) {\r\n                details = errorObj;\r\n            }\r\n            else if (_isStackDetails(errorObj[strStackDetails])) {\r\n                details = errorObj[strStackDetails];\r\n            }\r\n            else if (getWindow() && getWindow()[\"opera\"] && errorObj[strMessage]) {\r\n                // Opera\r\n                details = _getOperaStack(errorObj[_DYN_MESSAGE /* @min:%2emessage */]);\r\n            }\r\n            else if (errorObj[\"reason\"] && errorObj.reason[strStack]) {\r\n                // UnhandledPromiseRejection\r\n                details = _convertStackObj(errorObj.reason[strStack]);\r\n            }\r\n            else if (isString(errorObj)) {\r\n                details = _convertStackObj(errorObj);\r\n            }\r\n            else {\r\n                var evtMessage = errorObj[strMessage] || errorObj[strDescription] || \"\";\r\n                if (isString(errorObj[strErrorSrc])) {\r\n                    if (evtMessage) {\r\n                        evtMessage += \"\\n\";\r\n                    }\r\n                    evtMessage += \" from \" + errorObj[strErrorSrc];\r\n                }\r\n                if (evtMessage) {\r\n                    details = _convertStackObj(evtMessage);\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            // something unexpected happened so to avoid failing to report any error lets swallow the exception\r\n            // and fallback to the callee/caller method\r\n            details = _convertStackObj(e);\r\n        }\r\n    }\r\n    return details || {\r\n        src: \"\",\r\n        obj: null\r\n    };\r\n}\r\nfunction _formatStackTrace(stackDetails) {\r\n    var stack = \"\";\r\n    if (stackDetails) {\r\n        if (stackDetails.obj) {\r\n            arrForEach(stackDetails.obj, function (entry) {\r\n                stack += entry + \"\\n\";\r\n            });\r\n        }\r\n        else {\r\n            stack = stackDetails.src || \"\";\r\n        }\r\n    }\r\n    return stack;\r\n}\r\nfunction _parseStack(stack) {\r\n    var parsedStack;\r\n    var frames = stack.obj;\r\n    if (frames && frames[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        parsedStack = [];\r\n        var level_1 = 0;\r\n        var totalSizeInBytes_1 = 0;\r\n        arrForEach(frames, function (frame) {\r\n            var theFrame = frame[_DYN_TO_STRING /* @min:%2etoString */]();\r\n            if (_StackFrame.regex.test(theFrame)) {\r\n                var parsedFrame = new _StackFrame(theFrame, level_1++);\r\n                totalSizeInBytes_1 += parsedFrame[_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */];\r\n                parsedStack[_DYN_PUSH /* @min:%2epush */](parsedFrame);\r\n            }\r\n        });\r\n        // DP Constraint - exception parsed stack must be < 32KB\r\n        // remove frames from the middle to meet the threshold\r\n        var exceptionParsedStackThreshold = 32 * 1024;\r\n        if (totalSizeInBytes_1 > exceptionParsedStackThreshold) {\r\n            var left = 0;\r\n            var right = parsedStack[_DYN_LENGTH /* @min:%2elength */] - 1;\r\n            var size = 0;\r\n            var acceptedLeft = left;\r\n            var acceptedRight = right;\r\n            while (left < right) {\r\n                // check size\r\n                var lSize = parsedStack[left][_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */];\r\n                var rSize = parsedStack[right][_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */];\r\n                size += lSize + rSize;\r\n                if (size > exceptionParsedStackThreshold) {\r\n                    // remove extra frames from the middle\r\n                    var howMany = acceptedRight - acceptedLeft + 1;\r\n                    parsedStack.splice(acceptedLeft, howMany);\r\n                    break;\r\n                }\r\n                // update pointers\r\n                acceptedLeft = left;\r\n                acceptedRight = right;\r\n                left++;\r\n                right--;\r\n            }\r\n        }\r\n    }\r\n    return parsedStack;\r\n}\r\nfunction _getErrorType(errorType) {\r\n    // Gets the Error Type by passing the constructor (used to get the true type of native error object).\r\n    var typeName = \"\";\r\n    if (errorType) {\r\n        typeName = errorType.typeName || errorType[_DYN_NAME /* @min:%2ename */] || \"\";\r\n        if (!typeName) {\r\n            try {\r\n                var funcNameRegex = /function (.{1,200})\\(/;\r\n                var results = (funcNameRegex).exec((errorType).constructor[_DYN_TO_STRING /* @min:%2etoString */]());\r\n                typeName = (results && results[_DYN_LENGTH /* @min:%2elength */] > 1) ? results[1] : \"\";\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty -- Ignoring any failures as nothing we can do\r\n            }\r\n        }\r\n    }\r\n    return typeName;\r\n}\r\n/**\r\n * Formats the provided errorObj for display and reporting, it may be a String, Object, integer or undefined depending on the browser.\r\n * @param errorObj - The supplied errorObj\r\n */\r\nexport function _formatErrorCode(errorObj) {\r\n    if (errorObj) {\r\n        try {\r\n            if (!isString(errorObj)) {\r\n                var errorType = _getErrorType(errorObj);\r\n                var result = _stringify(errorObj, false);\r\n                if (!result || result === \"{}\") {\r\n                    if (errorObj[strError]) {\r\n                        // Looks like an MS Error Event\r\n                        errorObj = errorObj[strError];\r\n                        errorType = _getErrorType(errorObj);\r\n                    }\r\n                    result = _stringify(errorObj, true);\r\n                }\r\n                if (strIndexOf(result, errorType) !== 0 && errorType !== \"String\") {\r\n                    return errorType + \":\" + result;\r\n                }\r\n                return result;\r\n            }\r\n        }\r\n        catch (e) {\r\n            // eslint-disable-next-line no-empty -- Ignoring any failures as nothing we can do\r\n        }\r\n    }\r\n    // Fallback to just letting the object format itself into a string\r\n    return \"\" + (errorObj || \"\");\r\n}\r\nvar Exception = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the ExceptionTelemetry object\r\n     */\r\n    function Exception(logger, exception, properties, measurements, severityLevel, id) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            exceptions: 1 /* FieldType.Required */,\r\n            severityLevel: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2; // TODO: handle the CS\"4.0\" ==> breeze 2 conversion in a better way\r\n        if (!_isExceptionInternal(exception)) {\r\n            if (!properties) {\r\n                properties = {};\r\n            }\r\n            if (id) {\r\n                properties.id = id;\r\n            }\r\n            _self[_DYN_EXCEPTIONS /* @min:%2eexceptions */] = [new _ExceptionDetails(logger, exception, properties)];\r\n            _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n            _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n            if (severityLevel) {\r\n                _self[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */] = severityLevel;\r\n            }\r\n            if (id) {\r\n                _self.id = id;\r\n            }\r\n        }\r\n        else {\r\n            _self[_DYN_EXCEPTIONS /* @min:%2eexceptions */] = exception[_DYN_EXCEPTIONS /* @min:%2eexceptions */] || [];\r\n            _self[_DYN_PROPERTIES /* @min:%2eproperties */] = exception[_DYN_PROPERTIES /* @min:%2eproperties */];\r\n            _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = exception[_DYN_MEASUREMENTS /* @min:%2emeasurements */];\r\n            if (exception[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */]) {\r\n                _self[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */] = exception[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */];\r\n            }\r\n            if (exception.id) {\r\n                _self.id = exception.id;\r\n                exception[_DYN_PROPERTIES /* @min:%2eproperties */].id = exception.id;\r\n            }\r\n            if (exception[_DYN_PROBLEM_GROUP /* @min:%2eproblemGroup */]) {\r\n                _self[_DYN_PROBLEM_GROUP /* @min:%2eproblemGroup */] = exception[_DYN_PROBLEM_GROUP /* @min:%2eproblemGroup */];\r\n            }\r\n            // bool/int types, use isNullOrUndefined\r\n            if (!isNullOrUndefined(exception[_DYN_IS_MANUAL /* @min:%2eisManual */])) {\r\n                _self[_DYN_IS_MANUAL /* @min:%2eisManual */] = exception[_DYN_IS_MANUAL /* @min:%2eisManual */];\r\n            }\r\n        }\r\n    }\r\n    Exception.CreateAutoException = function (message, url, lineNumber, columnNumber, error, evt, stack, errorSrc) {\r\n        var _a;\r\n        var errorType = _getErrorType(error || evt || message);\r\n        return _a = {},\r\n            _a[_DYN_MESSAGE /* @min:message */] = _formatMessage(message, errorType),\r\n            _a.url = url,\r\n            _a.lineNumber = lineNumber,\r\n            _a.columnNumber = columnNumber,\r\n            _a.error = _formatErrorCode(error || evt || message),\r\n            _a.evt = _formatErrorCode(evt || message),\r\n            _a[_DYN_TYPE_NAME /* @min:typeName */] = errorType,\r\n            _a.stackDetails = _getStackFromErrorObj(stack || error || evt),\r\n            _a.errorSrc = errorSrc,\r\n            _a;\r\n    };\r\n    Exception.CreateFromInterface = function (logger, exception, properties, measurements) {\r\n        var exceptions = exception[_DYN_EXCEPTIONS /* @min:%2eexceptions */]\r\n            && arrMap(exception[_DYN_EXCEPTIONS /* @min:%2eexceptions */], function (ex) { return _ExceptionDetails[_DYN__CREATE_FROM_INTERFA1 /* @min:%2eCreateFromInterface */](logger, ex); });\r\n        var exceptionData = new Exception(logger, __assign(__assign({}, exception), { exceptions: exceptions }), properties, measurements);\r\n        return exceptionData;\r\n    };\r\n    Exception.prototype.toInterface = function () {\r\n        var _a;\r\n        var _b = this, exceptions = _b.exceptions, properties = _b.properties, measurements = _b.measurements, severityLevel = _b.severityLevel, problemGroup = _b.problemGroup, id = _b.id, isManual = _b.isManual;\r\n        var exceptionDetailsInterface = exceptions instanceof Array\r\n            && arrMap(exceptions, function (exception) { return exception.toInterface(); })\r\n            || undefined;\r\n        return _a = {\r\n                ver: \"4.0\"\r\n            },\r\n            _a[_DYN_EXCEPTIONS /* @min:exceptions */] = exceptionDetailsInterface,\r\n            _a.severityLevel = severityLevel,\r\n            _a.properties = properties,\r\n            _a.measurements = measurements,\r\n            _a.problemGroup = problemGroup,\r\n            _a.id = id,\r\n            _a.isManual = isManual,\r\n            _a;\r\n    };\r\n    /**\r\n     * Creates a simple exception with 1 stack frame. Useful for manual constracting of exception.\r\n     */\r\n    Exception.CreateSimpleException = function (message, typeName, assembly, fileName, details, line) {\r\n        var _a;\r\n        return {\r\n            exceptions: [\r\n                (_a = {},\r\n                    _a[_DYN_HAS_FULL_STACK /* @min:hasFullStack */] = true,\r\n                    _a.message = message,\r\n                    _a.stack = details,\r\n                    _a.typeName = typeName,\r\n                    _a)\r\n            ]\r\n        };\r\n    };\r\n    Exception.envelopeType = \"Microsoft.ApplicationInsights.{0}.Exception\";\r\n    Exception.dataType = \"ExceptionData\";\r\n    Exception.formatError = _formatErrorCode;\r\n    return Exception;\r\n}());\r\nexport { Exception };\r\nvar _ExceptionDetails = /** @class */ (function () {\r\n    function _ExceptionDetails(logger, exception, properties) {\r\n        this.aiDataContract = {\r\n            id: 0 /* FieldType.Default */,\r\n            outerId: 0 /* FieldType.Default */,\r\n            typeName: 1 /* FieldType.Required */,\r\n            message: 1 /* FieldType.Required */,\r\n            hasFullStack: 0 /* FieldType.Default */,\r\n            stack: 0 /* FieldType.Default */,\r\n            parsedStack: 2 /* FieldType.Array */\r\n        };\r\n        var _self = this;\r\n        if (!_isExceptionDetailsInternal(exception)) {\r\n            var error = exception;\r\n            var evt = error && error.evt;\r\n            if (!isError(error)) {\r\n                error = error[strError] || evt || error;\r\n            }\r\n            _self[_DYN_TYPE_NAME /* @min:%2etypeName */] = dataSanitizeString(logger, _getErrorType(error)) || strNotSpecified;\r\n            _self[_DYN_MESSAGE /* @min:%2emessage */] = dataSanitizeMessage(logger, _formatMessage(exception || error, _self[_DYN_TYPE_NAME /* @min:%2etypeName */])) || strNotSpecified;\r\n            var stack = exception[strStackDetails] || _getStackFromErrorObj(exception);\r\n            _self[_DYN_PARSED_STACK /* @min:%2eparsedStack */] = _parseStack(stack);\r\n            // after parsedStack is inited, iterate over each frame object, sanitize its assembly field\r\n            if (isArray(_self[_DYN_PARSED_STACK /* @min:%2eparsedStack */])) {\r\n                arrMap(_self[_DYN_PARSED_STACK /* @min:%2eparsedStack */], function (frame) {\r\n                    frame[_DYN_ASSEMBLY /* @min:%2eassembly */] = dataSanitizeString(logger, frame[_DYN_ASSEMBLY /* @min:%2eassembly */]);\r\n                    frame[_DYN_FILE_NAME /* @min:%2efileName */] = dataSanitizeString(logger, frame[_DYN_FILE_NAME /* @min:%2efileName */]);\r\n                });\r\n            }\r\n            _self[strStack] = dataSanitizeException(logger, _formatStackTrace(stack));\r\n            _self.hasFullStack = isArray(_self.parsedStack) && _self.parsedStack[_DYN_LENGTH /* @min:%2elength */] > 0;\r\n            if (properties) {\r\n                properties[_DYN_TYPE_NAME /* @min:%2etypeName */] = properties[_DYN_TYPE_NAME /* @min:%2etypeName */] || _self[_DYN_TYPE_NAME /* @min:%2etypeName */];\r\n            }\r\n        }\r\n        else {\r\n            _self[_DYN_TYPE_NAME /* @min:%2etypeName */] = exception[_DYN_TYPE_NAME /* @min:%2etypeName */];\r\n            _self[_DYN_MESSAGE /* @min:%2emessage */] = exception[_DYN_MESSAGE /* @min:%2emessage */];\r\n            _self[strStack] = exception[strStack];\r\n            _self[_DYN_PARSED_STACK /* @min:%2eparsedStack */] = exception[_DYN_PARSED_STACK /* @min:%2eparsedStack */] || [];\r\n            _self[_DYN_HAS_FULL_STACK /* @min:%2ehasFullStack */] = exception[_DYN_HAS_FULL_STACK /* @min:%2ehasFullStack */];\r\n        }\r\n    }\r\n    _ExceptionDetails.prototype.toInterface = function () {\r\n        var _a;\r\n        var _self = this;\r\n        var parsedStack = _self[_DYN_PARSED_STACK /* @min:%2eparsedStack */] instanceof Array\r\n            && arrMap(_self[_DYN_PARSED_STACK /* @min:%2eparsedStack */], function (frame) { return frame.toInterface(); });\r\n        var exceptionDetailsInterface = (_a = {\r\n                id: _self.id,\r\n                outerId: _self.outerId,\r\n                typeName: _self[_DYN_TYPE_NAME /* @min:%2etypeName */],\r\n                message: _self[_DYN_MESSAGE /* @min:%2emessage */],\r\n                hasFullStack: _self[_DYN_HAS_FULL_STACK /* @min:%2ehasFullStack */],\r\n                stack: _self[strStack]\r\n            },\r\n            _a[_DYN_PARSED_STACK /* @min:parsedStack */] = parsedStack || undefined,\r\n            _a);\r\n        return exceptionDetailsInterface;\r\n    };\r\n    _ExceptionDetails.CreateFromInterface = function (logger, exception) {\r\n        var parsedStack = (exception[_DYN_PARSED_STACK /* @min:%2eparsedStack */] instanceof Array\r\n            && arrMap(exception[_DYN_PARSED_STACK /* @min:%2eparsedStack */], function (frame) { return _StackFrame[_DYN__CREATE_FROM_INTERFA1 /* @min:%2eCreateFromInterface */](frame); }))\r\n            || exception[_DYN_PARSED_STACK /* @min:%2eparsedStack */];\r\n        var exceptionDetails = new _ExceptionDetails(logger, __assign(__assign({}, exception), { parsedStack: parsedStack }));\r\n        return exceptionDetails;\r\n    };\r\n    return _ExceptionDetails;\r\n}());\r\nexport { _ExceptionDetails };\r\nvar _StackFrame = /** @class */ (function () {\r\n    function _StackFrame(sourceFrame, level) {\r\n        this.aiDataContract = {\r\n            level: 1 /* FieldType.Required */,\r\n            method: 1 /* FieldType.Required */,\r\n            assembly: 0 /* FieldType.Default */,\r\n            fileName: 0 /* FieldType.Default */,\r\n            line: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self[_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */] = 0;\r\n        // Not converting this to isString() as typescript uses this logic to \"understand\" the different\r\n        // types for the 2 different code paths\r\n        if (typeof sourceFrame === \"string\") {\r\n            var frame = sourceFrame;\r\n            _self[_DYN_LEVEL /* @min:%2elevel */] = level;\r\n            _self[_DYN_METHOD /* @min:%2emethod */] = NoMethod;\r\n            _self[_DYN_ASSEMBLY /* @min:%2eassembly */] = strTrim(frame);\r\n            _self[_DYN_FILE_NAME /* @min:%2efileName */] = \"\";\r\n            _self[_DYN_LINE /* @min:%2eline */] = 0;\r\n            var matches = frame.match(_StackFrame.regex);\r\n            if (matches && matches[_DYN_LENGTH /* @min:%2elength */] >= 5) {\r\n                _self[_DYN_METHOD /* @min:%2emethod */] = strTrim(matches[2]) || _self[_DYN_METHOD /* @min:%2emethod */];\r\n                _self[_DYN_FILE_NAME /* @min:%2efileName */] = strTrim(matches[4]);\r\n                _self[_DYN_LINE /* @min:%2eline */] = parseInt(matches[5]) || 0;\r\n            }\r\n        }\r\n        else {\r\n            _self[_DYN_LEVEL /* @min:%2elevel */] = sourceFrame[_DYN_LEVEL /* @min:%2elevel */];\r\n            _self[_DYN_METHOD /* @min:%2emethod */] = sourceFrame[_DYN_METHOD /* @min:%2emethod */];\r\n            _self[_DYN_ASSEMBLY /* @min:%2eassembly */] = sourceFrame[_DYN_ASSEMBLY /* @min:%2eassembly */];\r\n            _self[_DYN_FILE_NAME /* @min:%2efileName */] = sourceFrame[_DYN_FILE_NAME /* @min:%2efileName */];\r\n            _self[_DYN_LINE /* @min:%2eline */] = sourceFrame[_DYN_LINE /* @min:%2eline */];\r\n            _self[_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */] = 0;\r\n        }\r\n        _self.sizeInBytes += _self.method[_DYN_LENGTH /* @min:%2elength */];\r\n        _self.sizeInBytes += _self.fileName[_DYN_LENGTH /* @min:%2elength */];\r\n        _self.sizeInBytes += _self.assembly[_DYN_LENGTH /* @min:%2elength */];\r\n        // todo: these might need to be removed depending on how the back-end settles on their size calculation\r\n        _self[_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */] += _StackFrame.baseSize;\r\n        _self.sizeInBytes += _self.level.toString()[_DYN_LENGTH /* @min:%2elength */];\r\n        _self.sizeInBytes += _self.line.toString()[_DYN_LENGTH /* @min:%2elength */];\r\n    }\r\n    _StackFrame.CreateFromInterface = function (frame) {\r\n        return new _StackFrame(frame, null /* level is available in frame interface */);\r\n    };\r\n    _StackFrame.prototype.toInterface = function () {\r\n        var _self = this;\r\n        return {\r\n            level: _self[_DYN_LEVEL /* @min:%2elevel */],\r\n            method: _self[_DYN_METHOD /* @min:%2emethod */],\r\n            assembly: _self[_DYN_ASSEMBLY /* @min:%2eassembly */],\r\n            fileName: _self[_DYN_FILE_NAME /* @min:%2efileName */],\r\n            line: _self[_DYN_LINE /* @min:%2eline */]\r\n        };\r\n    };\r\n    // regex to match stack frames from ie/chrome/ff\r\n    // methodName=$2, fileName=$4, lineNo=$5, column=$6\r\n    _StackFrame.regex = /^([\\s]+at)?[\\s]{0,50}([^\\@\\()]+?)[\\s]{0,50}(\\@|\\()([^\\(\\n]+):([0-9]+):([0-9]+)(\\)?)$/;\r\n    _StackFrame.baseSize = 58; // '{\"method\":\"\",\"level\":,\"assembly\":\"\",\"fileName\":\"\",\"line\":}'.length\r\n    return _StackFrame;\r\n}());\r\nexport { _StackFrame };\r\n//# sourceMappingURL=Exception.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nvar DataPoint = /** @class */ (function () {\r\n    function DataPoint() {\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        this.aiDataContract = {\r\n            name: 1 /* FieldType.Required */,\r\n            kind: 0 /* FieldType.Default */,\r\n            value: 1 /* FieldType.Required */,\r\n            count: 0 /* FieldType.Default */,\r\n            min: 0 /* FieldType.Default */,\r\n            max: 0 /* FieldType.Default */,\r\n            stdDev: 0 /* FieldType.Default */\r\n        };\r\n        /**\r\n         * Metric type. Single measurement or the aggregated value.\r\n         */\r\n        this.kind = 0 /* DataPointType.Measurement */;\r\n    }\r\n    return DataPoint;\r\n}());\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_COUNT, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES } from \"../__DynamicConstants\";\r\nimport { DataPoint } from \"./Common/DataPoint\";\r\nimport { dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString } from \"./Common/DataSanitizer\";\r\nvar Metric = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the MetricTelemetry object\r\n     */\r\n    function Metric(logger, name, value, count, min, max, stdDev, properties, measurements) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            metrics: 1 /* FieldType.Required */,\r\n            properties: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        var dataPoint = new DataPoint();\r\n        dataPoint[_DYN_COUNT /* @min:%2ecount */] = count > 0 ? count : undefined;\r\n        dataPoint.max = isNaN(max) || max === null ? undefined : max;\r\n        dataPoint.min = isNaN(min) || min === null ? undefined : min;\r\n        dataPoint[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        dataPoint.value = value;\r\n        dataPoint.stdDev = isNaN(stdDev) || stdDev === null ? undefined : stdDev;\r\n        _self.metrics = [dataPoint];\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n    }\r\n    Metric.envelopeType = \"Microsoft.ApplicationInsights.{0}.Metric\";\r\n    Metric.dataType = \"MetricData\";\r\n    return Metric;\r\n}());\r\nexport { Metric };\r\n//# sourceMappingURL=Metric.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { msToTimeSpan } from \"../HelperFuncs\";\r\nimport { _DYN_DURATION, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES } from \"../__DynamicConstants\";\r\nimport { dataSanitizeId, dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString, dataSanitizeUrl } from \"./Common/DataSanitizer\";\r\nvar PageView = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageView(logger, name, url, durationMs, properties, measurements, id) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            name: 0 /* FieldType.Default */,\r\n            url: 0 /* FieldType.Default */,\r\n            duration: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */,\r\n            id: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        _self.id = dataSanitizeId(logger, id);\r\n        _self.url = dataSanitizeUrl(logger, url);\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        if (!isNaN(durationMs)) {\r\n            _self[_DYN_DURATION /* @min:%2eduration */] = msToTimeSpan(durationMs);\r\n        }\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n    }\r\n    PageView.envelopeType = \"Microsoft.ApplicationInsights.{0}.Pageview\";\r\n    PageView.dataType = \"PageviewData\";\r\n    return PageView;\r\n}());\r\nexport { PageView };\r\n//# sourceMappingURL=PageView.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_DURATION, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES, _DYN_RECEIVED_RESPONSE } from \"../__DynamicConstants\";\r\nimport { dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString, dataSanitizeUrl } from \"./Common/DataSanitizer\";\r\nvar PageViewPerformance = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageViewPerformance(logger, name, url, unused, properties, measurements, cs4BaseData) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            name: 0 /* FieldType.Default */,\r\n            url: 0 /* FieldType.Default */,\r\n            duration: 0 /* FieldType.Default */,\r\n            perfTotal: 0 /* FieldType.Default */,\r\n            networkConnect: 0 /* FieldType.Default */,\r\n            sentRequest: 0 /* FieldType.Default */,\r\n            receivedResponse: 0 /* FieldType.Default */,\r\n            domProcessing: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        _self.url = dataSanitizeUrl(logger, url);\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n        if (cs4BaseData) {\r\n            _self.domProcessing = cs4BaseData.domProcessing;\r\n            _self[_DYN_DURATION /* @min:%2eduration */] = cs4BaseData[_DYN_DURATION /* @min:%2eduration */];\r\n            _self.networkConnect = cs4BaseData.networkConnect;\r\n            _self.perfTotal = cs4BaseData.perfTotal;\r\n            _self[_DYN_RECEIVED_RESPONSE /* @min:%2ereceivedResponse */] = cs4BaseData[_DYN_RECEIVED_RESPONSE /* @min:%2ereceivedResponse */];\r\n            _self.sentRequest = cs4BaseData.sentRequest;\r\n        }\r\n    }\r\n    PageViewPerformance.envelopeType = \"Microsoft.ApplicationInsights.{0}.PageviewPerformance\";\r\n    PageViewPerformance.dataType = \"PageviewPerformanceData\";\r\n    return PageViewPerformance;\r\n}());\r\nexport { PageViewPerformance };\r\n//# sourceMappingURL=PageViewPerformance.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { msToTimeSpan } from \"../HelperFuncs\";\r\nimport { AjaxHelperParseDependencyPath } from \"../Util\";\r\nimport { _DYN_DURATION, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES } from \"../__DynamicConstants\";\r\nimport { dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString, dataSanitizeUrl } from \"./Common/DataSanitizer\";\r\nvar RemoteDependencyData = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the RemoteDependencyData object\r\n     */\r\n    function RemoteDependencyData(logger, id, absoluteUrl, commandName, value, success, resultCode, method, requestAPI, correlationContext, properties, measurements) {\r\n        if (requestAPI === void 0) { requestAPI = \"Ajax\"; }\r\n        this.aiDataContract = {\r\n            id: 1 /* FieldType.Required */,\r\n            ver: 1 /* FieldType.Required */,\r\n            name: 0 /* FieldType.Default */,\r\n            resultCode: 0 /* FieldType.Default */,\r\n            duration: 0 /* FieldType.Default */,\r\n            success: 0 /* FieldType.Default */,\r\n            data: 0 /* FieldType.Default */,\r\n            target: 0 /* FieldType.Default */,\r\n            type: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */,\r\n            kind: 0 /* FieldType.Default */,\r\n            value: 0 /* FieldType.Default */,\r\n            count: 0 /* FieldType.Default */,\r\n            min: 0 /* FieldType.Default */,\r\n            max: 0 /* FieldType.Default */,\r\n            stdDev: 0 /* FieldType.Default */,\r\n            dependencyKind: 0 /* FieldType.Default */,\r\n            dependencySource: 0 /* FieldType.Default */,\r\n            commandName: 0 /* FieldType.Default */,\r\n            dependencyTypeName: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        _self.id = id;\r\n        _self[_DYN_DURATION /* @min:%2eduration */] = msToTimeSpan(value);\r\n        _self.success = success;\r\n        _self.resultCode = resultCode + \"\";\r\n        _self.type = dataSanitizeString(logger, requestAPI);\r\n        var dependencyFields = AjaxHelperParseDependencyPath(logger, absoluteUrl, method, commandName);\r\n        _self.data = dataSanitizeUrl(logger, commandName) || dependencyFields.data; // get a value from hosturl if commandName not available\r\n        _self.target = dataSanitizeString(logger, dependencyFields.target);\r\n        if (correlationContext) {\r\n            _self.target = \"\".concat(_self.target, \" | \").concat(correlationContext);\r\n        }\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, dependencyFields[_DYN_NAME /* @min:%2ename */]);\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n    }\r\n    RemoteDependencyData.envelopeType = \"Microsoft.ApplicationInsights.{0}.RemoteDependency\";\r\n    RemoteDependencyData.dataType = \"RemoteDependencyData\";\r\n    return RemoteDependencyData;\r\n}());\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_MEASUREMENTS, _DYN_MESSAGE, _DYN_PROPERTIES, _DYN_SEVERITY_LEVEL } from \"../__DynamicConstants\";\r\nimport { dataSanitizeMeasurements, dataSanitizeMessage, dataSanitizeProperties } from \"./Common/DataSanitizer\";\r\nvar Trace = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the TraceTelemetry object\r\n     */\r\n    function Trace(logger, message, severityLevel, properties, measurements) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            message: 1 /* FieldType.Required */,\r\n            severityLevel: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        message = message || strNotSpecified;\r\n        _self[_DYN_MESSAGE /* @min:%2emessage */] = dataSanitizeMessage(logger, message);\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n        if (severityLevel) {\r\n            _self[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */] = severityLevel;\r\n        }\r\n    }\r\n    Trace.envelopeType = \"Microsoft.ApplicationInsights.{0}.Message\";\r\n    Trace.dataType = \"MessageData\";\r\n    return Trace;\r\n}());\r\nexport { Trace };\r\n//# sourceMappingURL=Trace.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { getDocument, isString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_LENGTH, _DYN_PATHNAME, _DYN_TO_LOWER_CASE } from \"./__DynamicConstants\";\r\nvar _document = getDocument() || {};\r\nvar _htmlAnchorIdx = 0;\r\n// Use an array of temporary values as it's possible for multiple calls to parseUrl() will be called with different URLs\r\n// Using a cache size of 5 for now as it current depth usage is at least 2, so adding a minor buffer to handle future updates\r\nvar _htmlAnchorElement = [null, null, null, null, null];\r\nexport function urlParseUrl(url) {\r\n    var anchorIdx = _htmlAnchorIdx;\r\n    var anchorCache = _htmlAnchorElement;\r\n    var tempAnchor = anchorCache[anchorIdx];\r\n    if (!_document.createElement) {\r\n        // Always create the temp instance if createElement is not available\r\n        tempAnchor = { host: urlParseHost(url, true) };\r\n    }\r\n    else if (!anchorCache[anchorIdx]) {\r\n        // Create and cache the unattached anchor instance\r\n        tempAnchor = anchorCache[anchorIdx] = _document.createElement(\"a\");\r\n    }\r\n    tempAnchor.href = url;\r\n    // Move the cache index forward\r\n    anchorIdx++;\r\n    if (anchorIdx >= anchorCache[_DYN_LENGTH /* @min:%2elength */]) {\r\n        anchorIdx = 0;\r\n    }\r\n    _htmlAnchorIdx = anchorIdx;\r\n    return tempAnchor;\r\n}\r\nexport function urlGetAbsoluteUrl(url) {\r\n    var result;\r\n    var a = urlParseUrl(url);\r\n    if (a) {\r\n        result = a.href;\r\n    }\r\n    return result;\r\n}\r\nexport function urlGetPathName(url) {\r\n    var result;\r\n    var a = urlParseUrl(url);\r\n    if (a) {\r\n        result = a[_DYN_PATHNAME /* @min:%2epathname */];\r\n    }\r\n    return result;\r\n}\r\nexport function urlGetCompleteUrl(method, absoluteUrl) {\r\n    if (method) {\r\n        return method.toUpperCase() + \" \" + absoluteUrl;\r\n    }\r\n    return absoluteUrl;\r\n}\r\n// Fallback method to grab host from url if document.createElement method is not available\r\nexport function urlParseHost(url, inclPort) {\r\n    var fullHost = urlParseFullHost(url, inclPort) || \"\";\r\n    if (fullHost) {\r\n        var match = fullHost.match(/(www\\d{0,5}\\.)?([^\\/:]{1,256})(:\\d{1,20})?/i);\r\n        if (match != null && match[_DYN_LENGTH /* @min:%2elength */] > 3 && isString(match[2]) && match[2][_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            return match[2] + (match[3] || \"\");\r\n        }\r\n    }\r\n    return fullHost;\r\n}\r\nexport function urlParseFullHost(url, inclPort) {\r\n    var result = null;\r\n    if (url) {\r\n        var match = url.match(/(\\w{1,150}):\\/\\/([^\\/:]{1,256})(:\\d{1,20})?/i);\r\n        if (match != null && match[_DYN_LENGTH /* @min:%2elength */] > 2 && isString(match[2]) && match[2][_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            result = match[2] || \"\";\r\n            if (inclPort && match[_DYN_LENGTH /* @min:%2elength */] > 2) {\r\n                var protocol = (match[1] || \"\")[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n                var port = match[3] || \"\";\r\n                // IE includes the standard port so pass it off if it's the same as the protocol\r\n                if (protocol === \"http\" && port === \":80\") {\r\n                    port = \"\";\r\n                }\r\n                else if (protocol === \"https\" && port === \":443\") {\r\n                    port = \"\";\r\n                }\r\n                result += port;\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=UrlHelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, dateNow, getPerformance, isNullOrUndefined, isValidSpanId, isValidTraceId } from \"@microsoft/applicationinsights-core-js\";\r\nimport { strIndexOf } from \"@nevware21/ts-utils\";\r\nimport { DEFAULT_BREEZE_ENDPOINT, DEFAULT_BREEZE_PATH } from \"./Constants\";\r\nimport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nimport { dataSanitizeString } from \"./Telemetry/Common/DataSanitizer\";\r\nimport { urlParseFullHost, urlParseUrl } from \"./UrlHelperFuncs\";\r\nimport { _DYN_CORRELATION_HEADER_E0, _DYN_LENGTH, _DYN_NAME, _DYN_PATHNAME, _DYN_SPLIT, _DYN_TO_LOWER_CASE } from \"./__DynamicConstants\";\r\n// listing only non-geo specific locations\r\nvar _internalEndpoints = [\r\n    DEFAULT_BREEZE_ENDPOINT + DEFAULT_BREEZE_PATH,\r\n    \"https://breeze.aimon.applicationinsights.io\" + DEFAULT_BREEZE_PATH,\r\n    \"https://dc-int.services.visualstudio.com\" + DEFAULT_BREEZE_PATH\r\n];\r\nvar _correlationIdPrefix = \"cid-v1:\";\r\nexport function isInternalApplicationInsightsEndpoint(endpointUrl) {\r\n    return arrIndexOf(_internalEndpoints, endpointUrl[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]()) !== -1;\r\n}\r\nexport function correlationIdSetPrefix(prefix) {\r\n    _correlationIdPrefix = prefix;\r\n}\r\nexport function correlationIdGetPrefix() {\r\n    return _correlationIdPrefix;\r\n}\r\n/**\r\n * Checks if a request url is not on a excluded domain list and if it is safe to add correlation headers.\r\n * Headers are always included if the current domain matches the request domain. If they do not match (CORS),\r\n * they are regex-ed across correlationHeaderDomains and correlationHeaderExcludedDomains to determine if headers are included.\r\n * Some environments don't give information on currentHost via window.location.host (e.g. Cordova). In these cases, the user must\r\n * manually supply domains to include correlation headers on. Else, no headers will be included at all.\r\n */\r\nexport function correlationIdCanIncludeCorrelationHeader(config, requestUrl, currentHost) {\r\n    if (!requestUrl || (config && config.disableCorrelationHeaders)) {\r\n        return false;\r\n    }\r\n    if (config && config[_DYN_CORRELATION_HEADER_E0 /* @min:%2ecorrelationHeaderExcludePatterns */]) {\r\n        for (var i = 0; i < config.correlationHeaderExcludePatterns[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n            if (config[_DYN_CORRELATION_HEADER_E0 /* @min:%2ecorrelationHeaderExcludePatterns */][i].test(requestUrl)) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    var requestHost = urlParseUrl(requestUrl).host[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    if (requestHost && (strIndexOf(requestHost, \":443\") !== -1 || strIndexOf(requestHost, \":80\") !== -1)) {\r\n        // [Bug #1260] IE can include the port even for http and https URLs so if present\r\n        // try and parse it to remove if it matches the default protocol port\r\n        requestHost = (urlParseFullHost(requestUrl, true) || \"\")[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    }\r\n    if ((!config || !config.enableCorsCorrelation) && (requestHost && requestHost !== currentHost)) {\r\n        return false;\r\n    }\r\n    var includedDomains = config && config.correlationHeaderDomains;\r\n    if (includedDomains) {\r\n        var matchExists_1;\r\n        arrForEach(includedDomains, function (domain) {\r\n            var regex = new RegExp(domain.toLowerCase().replace(/\\\\/g, \"\\\\\\\\\").replace(/\\./g, \"\\\\.\").replace(/\\*/g, \".*\"));\r\n            matchExists_1 = matchExists_1 || regex.test(requestHost);\r\n        });\r\n        if (!matchExists_1) {\r\n            return false;\r\n        }\r\n    }\r\n    var excludedDomains = config && config.correlationHeaderExcludedDomains;\r\n    if (!excludedDomains || excludedDomains[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n        return true;\r\n    }\r\n    for (var i = 0; i < excludedDomains[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n        var regex = new RegExp(excludedDomains[i].toLowerCase().replace(/\\\\/g, \"\\\\\\\\\").replace(/\\./g, \"\\\\.\").replace(/\\*/g, \".*\"));\r\n        if (regex.test(requestHost)) {\r\n            return false;\r\n        }\r\n    }\r\n    // if we don't know anything about the requestHost, require the user to use included/excludedDomains.\r\n    // Previously we always returned false for a falsy requestHost\r\n    return requestHost && requestHost[_DYN_LENGTH /* @min:%2elength */] > 0;\r\n}\r\n/**\r\n * Combines target appId and target role name from response header.\r\n */\r\nexport function correlationIdGetCorrelationContext(responseHeader) {\r\n    if (responseHeader) {\r\n        var correlationId = correlationIdGetCorrelationContextValue(responseHeader, RequestHeaders[1 /* eRequestHeaders.requestContextTargetKey */]);\r\n        if (correlationId && correlationId !== _correlationIdPrefix) {\r\n            return correlationId;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Gets key from correlation response header\r\n */\r\nexport function correlationIdGetCorrelationContextValue(responseHeader, key) {\r\n    if (responseHeader) {\r\n        var keyValues = responseHeader[_DYN_SPLIT /* @min:%2esplit */](\",\");\r\n        for (var i = 0; i < keyValues[_DYN_LENGTH /* @min:%2elength */]; ++i) {\r\n            var keyValue = keyValues[i][_DYN_SPLIT /* @min:%2esplit */](\"=\");\r\n            if (keyValue[_DYN_LENGTH /* @min:%2elength */] === 2 && keyValue[0] === key) {\r\n                return keyValue[1];\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function AjaxHelperParseDependencyPath(logger, absoluteUrl, method, commandName) {\r\n    var target, name = commandName, data = commandName;\r\n    if (absoluteUrl && absoluteUrl[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        var parsedUrl = urlParseUrl(absoluteUrl);\r\n        target = parsedUrl.host;\r\n        if (!name) {\r\n            if (parsedUrl[_DYN_PATHNAME /* @min:%2epathname */] != null) {\r\n                var pathName = (parsedUrl.pathname[_DYN_LENGTH /* @min:%2elength */] === 0) ? \"/\" : parsedUrl[_DYN_PATHNAME /* @min:%2epathname */];\r\n                if (pathName.charAt(0) !== \"/\") {\r\n                    pathName = \"/\" + pathName;\r\n                }\r\n                data = parsedUrl[_DYN_PATHNAME /* @min:%2epathname */];\r\n                name = dataSanitizeString(logger, method ? method + \" \" + pathName : pathName);\r\n            }\r\n            else {\r\n                name = dataSanitizeString(logger, absoluteUrl);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        target = commandName;\r\n        name = commandName;\r\n    }\r\n    return {\r\n        target: target,\r\n        name: name,\r\n        data: data\r\n    };\r\n}\r\nexport function dateTimeUtilsNow() {\r\n    // returns the window or webworker performance object\r\n    var perf = getPerformance();\r\n    if (perf && perf.now && perf.timing) {\r\n        var now = perf.now() + perf.timing.navigationStart;\r\n        // Known issue with IE where this calculation can be negative, so if it is then ignore and fallback\r\n        if (now > 0) {\r\n            return now;\r\n        }\r\n    }\r\n    return dateNow();\r\n}\r\nexport function dateTimeUtilsDuration(start, end) {\r\n    var result = null;\r\n    if (start !== 0 && end !== 0 && !isNullOrUndefined(start) && !isNullOrUndefined(end)) {\r\n        result = end - start;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Creates a IDistributedTraceContext from an optional telemetryTrace\r\n * @param telemetryTrace - The telemetryTrace instance that is being wrapped\r\n * @param parentCtx - An optional parent distributed trace instance, almost always undefined as this scenario is only used in the case of multiple property handlers.\r\n * @returns A new IDistributedTraceContext instance that is backed by the telemetryTrace or temporary object\r\n */\r\nexport function createDistributedTraceContextFromTrace(telemetryTrace, parentCtx) {\r\n    var trace = telemetryTrace || {};\r\n    return {\r\n        getName: function () {\r\n            return trace[_DYN_NAME /* @min:%2ename */];\r\n        },\r\n        setName: function (newValue) {\r\n            parentCtx && parentCtx.setName(newValue);\r\n            trace[_DYN_NAME /* @min:%2ename */] = newValue;\r\n        },\r\n        getTraceId: function () {\r\n            return trace.traceID;\r\n        },\r\n        setTraceId: function (newValue) {\r\n            parentCtx && parentCtx.setTraceId(newValue);\r\n            if (isValidTraceId(newValue)) {\r\n                trace.traceID = newValue;\r\n            }\r\n        },\r\n        getSpanId: function () {\r\n            return trace.parentID;\r\n        },\r\n        setSpanId: function (newValue) {\r\n            parentCtx && parentCtx.setSpanId(newValue);\r\n            if (isValidSpanId(newValue)) {\r\n                trace.parentID = newValue;\r\n            }\r\n        },\r\n        getTraceFlags: function () {\r\n            return trace.traceFlags;\r\n        },\r\n        setTraceFlags: function (newTraceFlags) {\r\n            parentCtx && parentCtx.setTraceFlags(newTraceFlags);\r\n            trace.traceFlags = newTraceFlags;\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=Util.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_SPLIT = \"split\"; // Count: 6\r\nexport var _DYN_LENGTH = \"length\"; // Count: 41\r\nexport var _DYN_TO_LOWER_CASE = \"toLowerCase\"; // Count: 6\r\nexport var _DYN_INGESTIONENDPOINT = \"ingestionendpoint\"; // Count: 6\r\nexport var _DYN_TO_STRING = \"toString\"; // Count: 9\r\nexport var _DYN_PUSH = \"push\"; // Count: 5\r\nexport var _DYN_REMOVE_ITEM = \"removeItem\"; // Count: 3\r\nexport var _DYN_NAME = \"name\"; // Count: 11\r\nexport var _DYN_MESSAGE = \"message\"; // Count: 10\r\nexport var _DYN_COUNT = \"count\"; // Count: 8\r\nexport var _DYN_PRE_TRIGGER_DATE = \"preTriggerDate\"; // Count: 4\r\nexport var _DYN_DISABLED = \"disabled\"; // Count: 3\r\nexport var _DYN_INTERVAL = \"interval\"; // Count: 3\r\nexport var _DYN_DAYS_OF_MONTH = \"daysOfMonth\"; // Count: 3\r\nexport var _DYN_DATE = \"date\"; // Count: 5\r\nexport var _DYN_GET_UTCDATE = \"getUTCDate\"; // Count: 3\r\nexport var _DYN_STRINGIFY = \"stringify\"; // Count: 4\r\nexport var _DYN_PATHNAME = \"pathname\"; // Count: 4\r\nexport var _DYN_CORRELATION_HEADER_E0 = \"correlationHeaderExcludePatterns\"; // Count: 2\r\nexport var _DYN_EXTENSION_CONFIG = \"extensionConfig\"; // Count: 4\r\nexport var _DYN_EXCEPTIONS = \"exceptions\"; // Count: 6\r\nexport var _DYN_PARSED_STACK = \"parsedStack\"; // Count: 13\r\nexport var _DYN_PROPERTIES = \"properties\"; // Count: 9\r\nexport var _DYN_MEASUREMENTS = \"measurements\"; // Count: 9\r\nexport var _DYN_SIZE_IN_BYTES = \"sizeInBytes\"; // Count: 11\r\nexport var _DYN_TYPE_NAME = \"typeName\"; // Count: 11\r\nexport var _DYN_SEVERITY_LEVEL = \"severityLevel\"; // Count: 5\r\nexport var _DYN_PROBLEM_GROUP = \"problemGroup\"; // Count: 3\r\nexport var _DYN_IS_MANUAL = \"isManual\"; // Count: 3\r\nexport var _DYN__CREATE_FROM_INTERFA1 = \"CreateFromInterface\"; // Count: 2\r\nexport var _DYN_ASSEMBLY = \"assembly\"; // Count: 7\r\nexport var _DYN_FILE_NAME = \"fileName\"; // Count: 8\r\nexport var _DYN_HAS_FULL_STACK = \"hasFullStack\"; // Count: 6\r\nexport var _DYN_LEVEL = \"level\"; // Count: 5\r\nexport var _DYN_METHOD = \"method\"; // Count: 7\r\nexport var _DYN_LINE = \"line\"; // Count: 6\r\nexport var _DYN_DURATION = \"duration\"; // Count: 4\r\nexport var _DYN_RECEIVED_RESPONSE = \"receivedResponse\"; // Count: 2\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { _throwInternal, arrIndexOf, isNotNullOrUndefined, isNullOrUndefined, onConfigChange, randomValue, safeGetLogger, strTrim } from \"@microsoft/applicationinsights-core-js\";\r\nimport { arrForEach, objForEachKey } from \"@nevware21/ts-utils\";\r\nimport { utlCanUseLocalStorage, utlGetLocalStorage, utlSetLocalStorage } from \"./StorageHelperFuncs\";\r\nimport { _DYN_COUNT, _DYN_DATE, _DYN_DAYS_OF_MONTH, _DYN_DISABLED, _DYN_GET_UTCDATE, _DYN_INTERVAL, _DYN_LENGTH, _DYN_MESSAGE, _DYN_PRE_TRIGGER_DATE, _DYN_PUSH, _DYN_STRINGIFY } from \"./__DynamicConstants\";\r\nvar THROTTLE_STORAGE_PREFIX = \"appInsightsThrottle\";\r\nvar ThrottleMgr = /** @class */ (function () {\r\n    function ThrottleMgr(core, namePrefix) {\r\n        var _self = this;\r\n        var _canUseLocalStorage;\r\n        var _logger;\r\n        var _config;\r\n        var _localStorageObj;\r\n        var _isTriggered; //_isTriggered is to make sure that we only trigger throttle once a day\r\n        var _namePrefix;\r\n        var _queue;\r\n        var _isReady = false;\r\n        var _isSpecificDaysGiven = false;\r\n        _initConfig();\r\n        // Special internal method to allow the unit tests and DebugPlugin to hook embedded objects\r\n        _self[\"_getDbgPlgTargets\"] = function () {\r\n            return [_queue];\r\n        };\r\n        _self.getConfig = function () {\r\n            return _config;\r\n        };\r\n        /**\r\n         * Check if it is the correct day to send message.\r\n         * If _isTriggered is true, even if canThrottle returns true, message will not be sent,\r\n         * because we only allow triggering sendMessage() once a day.\r\n         * @returns if the current date is the valid date to send message\r\n         */\r\n        _self.canThrottle = function (msgId) {\r\n            var localObj = _getLocalStorageObjByKey(msgId);\r\n            var cfg = _getCfgByKey(msgId);\r\n            return _canThrottle(cfg, _canUseLocalStorage, localObj);\r\n        };\r\n        /**\r\n         * Check if throttle is triggered on current day(UTC)\r\n         * if canThrottle returns false, isTriggered will return false\r\n         * @returns if throttle is triggered on current day(UTC)\r\n         */\r\n        _self.isTriggered = function (msgId) {\r\n            return _isTrigger(msgId);\r\n        };\r\n        /**\r\n         * Before isReady set to true, all message will be stored in queue.\r\n         * Message will only be sent out after isReady set to true.\r\n         * Initial and default value: false\r\n         * @returns isReady state\r\n         */\r\n        _self.isReady = function () {\r\n            return _isReady;\r\n        };\r\n        /**\r\n         * Flush all message with given message key in queue with isReady state set to true.\r\n         * @returns if message queue is flushed\r\n         */\r\n        _self.flush = function (msgId) {\r\n            try {\r\n                var queue = _getQueueByKey(msgId);\r\n                if (queue && queue[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var items = queue.slice(0);\r\n                    _queue[msgId] = [];\r\n                    arrForEach(items, function (item) {\r\n                        _flushMessage(item.msgID, item[_DYN_MESSAGE /* @min:%2emessage */], item.severity, false);\r\n                    });\r\n                    return true;\r\n                }\r\n            }\r\n            catch (err) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return false;\r\n        };\r\n        /**\r\n         * Flush all message in queue with isReady state set to true.\r\n         * @returns if message queue is flushed\r\n         */\r\n        _self.flushAll = function () {\r\n            try {\r\n                if (_queue) {\r\n                    var result_1 = true;\r\n                    objForEachKey(_queue, function (key) {\r\n                        var isFlushed = _self.flush(parseInt(key));\r\n                        result_1 = result_1 && isFlushed;\r\n                    });\r\n                    return result_1;\r\n                }\r\n            }\r\n            catch (err) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return false;\r\n        };\r\n        /**\r\n         * Set isReady State\r\n         * if isReady set to true, message queue will be flushed automatically.\r\n         * @param isReady isReady State\r\n         * @pa\r\n         * @returns if message queue is flushed\r\n         */\r\n        _self.onReadyState = function (isReady, flushAll) {\r\n            if (flushAll === void 0) { flushAll = true; }\r\n            _isReady = isNullOrUndefined(isReady) ? true : isReady;\r\n            if (_isReady && flushAll) {\r\n                return _self.flushAll();\r\n            }\r\n            return null;\r\n        };\r\n        _self.sendMessage = function (msgID, message, severity) {\r\n            return _flushMessage(msgID, message, severity, true);\r\n        };\r\n        function _flushMessage(msgID, message, severity, saveUnsentMsg) {\r\n            if (_isReady) {\r\n                var isSampledIn = _canSampledIn(msgID);\r\n                if (!isSampledIn) {\r\n                    return;\r\n                }\r\n                var cfg = _getCfgByKey(msgID);\r\n                var localStorageObj = _getLocalStorageObjByKey(msgID);\r\n                var canThrottle = _canThrottle(cfg, _canUseLocalStorage, localStorageObj);\r\n                var throttled = false;\r\n                var number = 0;\r\n                var isTriggered = _isTrigger(msgID);\r\n                try {\r\n                    if (canThrottle && !isTriggered) {\r\n                        number = Math.min(cfg.limit.maxSendNumber, localStorageObj[_DYN_COUNT /* @min:%2ecount */] + 1);\r\n                        localStorageObj[_DYN_COUNT /* @min:%2ecount */] = 0;\r\n                        throttled = true;\r\n                        _isTriggered[msgID] = true;\r\n                        localStorageObj[_DYN_PRE_TRIGGER_DATE /* @min:%2epreTriggerDate */] = new Date();\r\n                    }\r\n                    else {\r\n                        _isTriggered[msgID] = canThrottle;\r\n                        localStorageObj[_DYN_COUNT /* @min:%2ecount */] += 1;\r\n                    }\r\n                    var localStorageName = _getLocalStorageName(msgID);\r\n                    _resetLocalStorage(_logger, localStorageName, localStorageObj);\r\n                    for (var i = 0; i < number; i++) {\r\n                        _sendMessage(msgID, _logger, message, severity);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return {\r\n                    isThrottled: throttled,\r\n                    throttleNum: number\r\n                };\r\n            }\r\n            else {\r\n                if (!!saveUnsentMsg) {\r\n                    var queue = _getQueueByKey(msgID);\r\n                    queue[_DYN_PUSH /* @min:%2epush */]({\r\n                        msgID: msgID,\r\n                        message: message,\r\n                        severity: severity\r\n                    });\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        function _initConfig() {\r\n            _logger = safeGetLogger(core);\r\n            _isTriggered = {};\r\n            _localStorageObj = {};\r\n            _queue = {};\r\n            _config = {};\r\n            _setCfgByKey(109 /* _eInternalMessageId.DefaultThrottleMsgKey */);\r\n            _namePrefix = isNotNullOrUndefined(namePrefix) ? namePrefix : \"\";\r\n            core.addUnloadHook(onConfigChange(core.config, function (details) {\r\n                var coreConfig = details.cfg;\r\n                _canUseLocalStorage = utlCanUseLocalStorage();\r\n                var configMgr = coreConfig.throttleMgrCfg || {};\r\n                objForEachKey(configMgr, function (key, cfg) {\r\n                    _setCfgByKey(parseInt(key), cfg);\r\n                });\r\n            }));\r\n        }\r\n        function _getCfgByKey(msgID) {\r\n            return _config[msgID] || _config[109 /* _eInternalMessageId.DefaultThrottleMsgKey */];\r\n        }\r\n        function _setCfgByKey(msgID, config) {\r\n            var _a, _b;\r\n            try {\r\n                var cfg = config || {};\r\n                var curCfg = {};\r\n                curCfg[_DYN_DISABLED /* @min:%2edisabled */] = !!cfg[_DYN_DISABLED /* @min:%2edisabled */];\r\n                var configInterval = cfg[_DYN_INTERVAL /* @min:%2einterval */] || {};\r\n                _isSpecificDaysGiven = (configInterval === null || configInterval === void 0 ? void 0 : configInterval.daysOfMonth) && (configInterval === null || configInterval === void 0 ? void 0 : configInterval.daysOfMonth[_DYN_LENGTH /* @min:%2elength */]) > 0;\r\n                curCfg[_DYN_INTERVAL /* @min:%2einterval */] = _getIntervalConfig(configInterval);\r\n                var limit = {\r\n                    samplingRate: ((_a = cfg.limit) === null || _a === void 0 ? void 0 : _a.samplingRate) || 100,\r\n                    // dafault: every time sent only 1 event\r\n                    maxSendNumber: ((_b = cfg.limit) === null || _b === void 0 ? void 0 : _b.maxSendNumber) || 1\r\n                };\r\n                curCfg.limit = limit;\r\n                _config[msgID] = curCfg;\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n        }\r\n        function _getIntervalConfig(interval) {\r\n            interval = interval || {};\r\n            var monthInterval = interval === null || interval === void 0 ? void 0 : interval.monthInterval;\r\n            var dayInterval = interval === null || interval === void 0 ? void 0 : interval.dayInterval;\r\n            // default: send data every 3 month each year\r\n            if (isNullOrUndefined(monthInterval) && isNullOrUndefined(dayInterval)) {\r\n                interval.monthInterval = 3;\r\n                if (!_isSpecificDaysGiven) {\r\n                    // default: send data on 28th\r\n                    interval[_DYN_DAYS_OF_MONTH /* @min:%2edaysOfMonth */] = [28];\r\n                    _isSpecificDaysGiven = true;\r\n                }\r\n            }\r\n            interval = {\r\n                // dafault: sent every three months\r\n                monthInterval: interval === null || interval === void 0 ? void 0 : interval.monthInterval,\r\n                dayInterval: interval === null || interval === void 0 ? void 0 : interval.dayInterval,\r\n                daysOfMonth: interval === null || interval === void 0 ? void 0 : interval.daysOfMonth\r\n            };\r\n            return interval;\r\n        }\r\n        function _canThrottle(config, canUseLocalStorage, localStorageObj) {\r\n            if (config && !config[_DYN_DISABLED /* @min:%2edisabled */] && canUseLocalStorage && isNotNullOrUndefined(localStorageObj)) {\r\n                var curDate = _getThrottleDate();\r\n                var date = localStorageObj[_DYN_DATE /* @min:%2edate */];\r\n                var interval = config[_DYN_INTERVAL /* @min:%2einterval */];\r\n                var monthCheck = 1;\r\n                if (interval === null || interval === void 0 ? void 0 : interval.monthInterval) {\r\n                    var monthExpand = (curDate.getUTCFullYear() - date.getUTCFullYear()) * 12 + curDate.getUTCMonth() - date.getUTCMonth();\r\n                    monthCheck = _checkInterval(interval.monthInterval, 0, monthExpand);\r\n                }\r\n                var dayCheck = 1;\r\n                if (_isSpecificDaysGiven) {\r\n                    dayCheck = arrIndexOf(interval[_DYN_DAYS_OF_MONTH /* @min:%2edaysOfMonth */], curDate[_DYN_GET_UTCDATE /* @min:%2egetUTCDate */]());\r\n                }\r\n                else if (interval === null || interval === void 0 ? void 0 : interval.dayInterval) {\r\n                    var daySpan = Math.floor((curDate.getTime() - date.getTime()) / 86400000);\r\n                    dayCheck = _checkInterval(interval.dayInterval, 0, daySpan);\r\n                }\r\n                return monthCheck >= 0 && dayCheck >= 0;\r\n            }\r\n            return false;\r\n        }\r\n        function _getLocalStorageName(msgKey, prefix) {\r\n            var fix = isNotNullOrUndefined(prefix) ? prefix : \"\";\r\n            if (msgKey) {\r\n                return THROTTLE_STORAGE_PREFIX + fix + \"-\" + msgKey;\r\n            }\r\n            return null;\r\n        }\r\n        // returns if throttle is triggered on current Date\r\n        function _isTriggeredOnCurDate(preTriggerDate) {\r\n            try {\r\n                if (preTriggerDate) {\r\n                    var curDate = new Date();\r\n                    return preTriggerDate.getUTCFullYear() === curDate.getUTCFullYear() &&\r\n                        preTriggerDate.getUTCMonth() === curDate.getUTCMonth() &&\r\n                        preTriggerDate[_DYN_GET_UTCDATE /* @min:%2egetUTCDate */]() === curDate[_DYN_GET_UTCDATE /* @min:%2egetUTCDate */]();\r\n                }\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return false;\r\n        }\r\n        // transfer local storage string value to object that identifies start date, current count and preTriggerDate\r\n        function _getLocalStorageObj(value, logger, storageName) {\r\n            try {\r\n                var storageObj = {\r\n                    date: _getThrottleDate(),\r\n                    count: 0\r\n                };\r\n                if (value) {\r\n                    var obj = JSON.parse(value);\r\n                    var curObj = {\r\n                        date: _getThrottleDate(obj[_DYN_DATE /* @min:%2edate */]) || storageObj[_DYN_DATE /* @min:%2edate */],\r\n                        count: obj[_DYN_COUNT /* @min:%2ecount */] || storageObj[_DYN_COUNT /* @min:%2ecount */],\r\n                        preTriggerDate: obj.preTriggerDate ? _getThrottleDate(obj[_DYN_PRE_TRIGGER_DATE /* @min:%2epreTriggerDate */]) : undefined\r\n                    };\r\n                    return curObj;\r\n                }\r\n                else {\r\n                    _resetLocalStorage(logger, storageName, storageObj);\r\n                    return storageObj;\r\n                }\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return null;\r\n        }\r\n        // if datestr is not defined, current date will be returned\r\n        function _getThrottleDate(dateStr) {\r\n            // if new Date() can't be created through the provided dateStr, null will be returned.\r\n            try {\r\n                if (dateStr) {\r\n                    var date = new Date(dateStr);\r\n                    //make sure it is a valid Date Object\r\n                    if (!isNaN(date.getDate())) {\r\n                        return date;\r\n                    }\r\n                }\r\n                else {\r\n                    return new Date();\r\n                }\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return null;\r\n        }\r\n        function _resetLocalStorage(logger, storageName, obj) {\r\n            try {\r\n                return utlSetLocalStorage(logger, storageName, strTrim(JSON[_DYN_STRINGIFY /* @min:%2estringify */](obj)));\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return false;\r\n        }\r\n        function _checkInterval(interval, start, current) {\r\n            if (interval <= 0) {\r\n                return 1;\r\n            }\r\n            // count from start year\r\n            return (current >= start) && (current - start) % interval == 0 ? Math.floor((current - start) / interval) + 1 : -1;\r\n        }\r\n        function _sendMessage(msgID, logger, message, severity) {\r\n            _throwInternal(logger, severity || 1 /* eLoggingSeverity.CRITICAL */, msgID, message);\r\n        }\r\n        // NOTE: config.limit.samplingRate is set to 4 decimal places,\r\n        // so config.limit.samplingRate = 1 means 0.0001%\r\n        function _canSampledIn(msgID) {\r\n            try {\r\n                var cfg = _getCfgByKey(msgID);\r\n                return randomValue(1000000) <= cfg.limit.samplingRate;\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return false;\r\n        }\r\n        function _getLocalStorageObjByKey(key) {\r\n            try {\r\n                var curObj = _localStorageObj[key];\r\n                if (!curObj) {\r\n                    var localStorageName = _getLocalStorageName(key, _namePrefix);\r\n                    curObj = _getLocalStorageObj(utlGetLocalStorage(_logger, localStorageName), _logger, localStorageName);\r\n                    _localStorageObj[key] = curObj;\r\n                }\r\n                return _localStorageObj[key];\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return null;\r\n        }\r\n        function _isTrigger(key) {\r\n            var isTrigger = _isTriggered[key];\r\n            if (isNullOrUndefined(isTrigger)) {\r\n                isTrigger = false;\r\n                var localStorageObj = _getLocalStorageObjByKey(key);\r\n                if (localStorageObj) {\r\n                    isTrigger = _isTriggeredOnCurDate(localStorageObj[_DYN_PRE_TRIGGER_DATE /* @min:%2epreTriggerDate */]);\r\n                }\r\n                _isTriggered[key] = isTrigger;\r\n            }\r\n            return _isTriggered[key];\r\n        }\r\n        function _getQueueByKey(key) {\r\n            _queue = _queue || {};\r\n            if (isNullOrUndefined(_queue[key])) {\r\n                _queue[key] = [];\r\n            }\r\n            return _queue[key];\r\n        }\r\n    }\r\n    return ThrottleMgr;\r\n}());\r\nexport { ThrottleMgr };\r\n//# sourceMappingURL=ThrottleMgr.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { isNullOrUndefined } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_EXTENSION_CONFIG } from \"../__DynamicConstants\";\r\nvar ConfigurationManager = /** @class */ (function () {\r\n    function ConfigurationManager() {\r\n    }\r\n    ConfigurationManager.getConfig = function (config, field, identifier, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        var configValue;\r\n        if (identifier && config[_DYN_EXTENSION_CONFIG /* @min:%2eextensionConfig */] && config[_DYN_EXTENSION_CONFIG /* @min:%2eextensionConfig */][identifier] && !isNullOrUndefined(config[_DYN_EXTENSION_CONFIG /* @min:%2eextensionConfig */][identifier][field])) {\r\n            configValue = config[_DYN_EXTENSION_CONFIG /* @min:%2eextensionConfig */][identifier][field];\r\n        }\r\n        else {\r\n            configValue = config[field];\r\n        }\r\n        return !isNullOrUndefined(configValue) ? configValue : defaultValue;\r\n    };\r\n    return ConfigurationManager;\r\n}());\r\nexport { ConfigurationManager };\r\n//# sourceMappingURL=IConfig.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { isNullOrUndefined, objForEachKey, throwError, toISOString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { strIkey, strNotSpecified } from \"./Constants\";\r\nimport { dataSanitizeString } from \"./Telemetry/Common/DataSanitizer\";\r\nimport { _DYN_NAME } from \"./__DynamicConstants\";\r\n/**\r\n * Create a telemetry item that the 1DS channel understands\r\n * @param item - domain specific properties; part B\r\n * @param baseType - telemetry item type. ie PageViewData\r\n * @param envelopeName - name of the envelope. ie Microsoft.ApplicationInsights.<instrumentation key>.PageView\r\n * @param customProperties - user defined custom properties; part C\r\n * @param systemProperties - system properties that are added to the context; part A\r\n * @returns ITelemetryItem that is sent to channel\r\n */\r\nexport function createTelemetryItem(item, baseType, envelopeName, logger, customProperties, systemProperties) {\r\n    var _a;\r\n    envelopeName = dataSanitizeString(logger, envelopeName) || strNotSpecified;\r\n    if (isNullOrUndefined(item) ||\r\n        isNullOrUndefined(baseType) ||\r\n        isNullOrUndefined(envelopeName)) {\r\n        throwError(\"Input doesn't contain all required fields\");\r\n    }\r\n    var iKey = \"\";\r\n    if (item[strIkey]) {\r\n        iKey = item[strIkey];\r\n        delete item[strIkey];\r\n    }\r\n    var telemetryItem = (_a = {},\r\n        _a[_DYN_NAME /* @min:name */] = envelopeName,\r\n        _a.time = toISOString(new Date()),\r\n        _a.iKey = iKey,\r\n        _a.ext = systemProperties ? systemProperties : {},\r\n        _a.tags = [],\r\n        _a.data = {},\r\n        _a.baseType = baseType,\r\n        _a.baseData = item // Part B\r\n    ,\r\n        _a);\r\n    // Part C\r\n    if (!isNullOrUndefined(customProperties)) {\r\n        objForEachKey(customProperties, function (prop, value) {\r\n            telemetryItem.data[prop] = value;\r\n        });\r\n    }\r\n    return telemetryItem;\r\n}\r\nvar TelemetryItemCreator = /** @class */ (function () {\r\n    function TelemetryItemCreator() {\r\n    }\r\n    /**\r\n     * Create a telemetry item that the 1DS channel understands\r\n     * @param item - domain specific properties; part B\r\n     * @param baseType - telemetry item type. ie PageViewData\r\n     * @param envelopeName - name of the envelope. ie Microsoft.ApplicationInsights.<instrumentation key>.PageView\r\n     * @param customProperties - user defined custom properties; part C\r\n     * @param systemProperties - system properties that are added to the context; part A\r\n     * @returns ITelemetryItem that is sent to channel\r\n     */\r\n    TelemetryItemCreator.create = createTelemetryItem;\r\n    return TelemetryItemCreator;\r\n}());\r\nexport { TelemetryItemCreator };\r\n//# sourceMappingURL=TelemetryItemCreator.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { getDocument, isFunction } from \"@microsoft/applicationinsights-core-js\";\r\nexport function createDomEvent(eventName) {\r\n    var event = null;\r\n    if (isFunction(Event)) { // Use Event constructor when available\r\n        event = new Event(eventName);\r\n    }\r\n    else { // Event has no constructor in IE\r\n        var doc = getDocument();\r\n        if (doc && doc.createEvent) {\r\n            event = doc.createEvent(\"Event\");\r\n            event.initEvent(eventName, true, true);\r\n        }\r\n    }\r\n    return event;\r\n}\r\n//# sourceMappingURL=DomHelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n// Licensed under the\r\nexport { correlationIdSetPrefix, correlationIdGetPrefix, correlationIdCanIncludeCorrelationHeader, correlationIdGetCorrelationContext, correlationIdGetCorrelationContextValue, dateTimeUtilsNow, dateTimeUtilsDuration, isInternalApplicationInsightsEndpoint, createDistributedTraceContextFromTrace } from \"./Util\";\r\nexport { ThrottleMgr } from \"./ThrottleMgr\";\r\nexport { parseConnectionString, ConnectionStringParser } from \"./ConnectionStringParser\";\r\nexport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nexport { DisabledPropertyName, ProcessLegacy, SampleRate, HttpMethod, DEFAULT_BREEZE_ENDPOINT, DEFAULT_BREEZE_PATH, strNotSpecified } from \"./Constants\";\r\nexport { Envelope } from \"./Telemetry/Common/Envelope\";\r\nexport { Event } from \"./Telemetry/Event\";\r\nexport { Exception } from \"./Telemetry/Exception\";\r\nexport { Metric } from \"./Telemetry/Metric\";\r\nexport { PageView } from \"./Telemetry/PageView\";\r\nexport { RemoteDependencyData } from \"./Telemetry/RemoteDependencyData\";\r\nexport { Trace } from \"./Telemetry/Trace\";\r\nexport { PageViewPerformance } from \"./Telemetry/PageViewPerformance\";\r\nexport { Data } from \"./Telemetry/Common/Data\";\r\nexport { SeverityLevel } from \"./Interfaces/Contracts/SeverityLevel\";\r\nexport { ConfigurationManager } from \"./Interfaces/IConfig\";\r\nexport { ContextTagKeys } from \"./Interfaces/Contracts/ContextTagKeys\";\r\nexport { dataSanitizeKeyAndAddUniqueness, dataSanitizeKey, dataSanitizeString, dataSanitizeUrl, dataSanitizeMessage, dataSanitizeException, dataSanitizeProperties, dataSanitizeMeasurements, dataSanitizeId, dataSanitizeInput, dsPadNumber } from \"./Telemetry/Common/DataSanitizer\";\r\nexport { TelemetryItemCreator, createTelemetryItem } from \"./TelemetryItemCreator\";\r\nexport { CtxTagKeys, Extensions } from \"./Interfaces/PartAExtensions\";\r\nexport { DistributedTracingModes, EventPersistence } from \"./Enums\";\r\nexport { stringToBoolOrDefault, msToTimeSpan, getExtensionByName, isCrossOriginError } from \"./HelperFuncs\";\r\nexport { isBeaconsSupported as isBeaconApiSupported, createTraceParent, parseTraceParent, isValidTraceId, isValidSpanId, isValidTraceParent, isSampledFlag, formatTraceParent, findW3cTraceParent, findAllScripts } from \"@microsoft/applicationinsights-core-js\";\r\nexport { createDomEvent } from \"./DomHelperFuncs\";\r\nexport { utlDisableStorage, utlEnableStorage, utlCanUseLocalStorage, utlGetLocalStorage, utlSetLocalStorage, utlRemoveStorage, utlCanUseSessionStorage, utlGetSessionStorageKeys, utlGetSessionStorage, utlSetSessionStorage, utlRemoveSessionStorage, utlSetStoragePrefix } from \"./StorageHelperFuncs\";\r\nexport { urlParseUrl, urlGetAbsoluteUrl, urlGetPathName, urlGetCompleteUrl, urlParseHost, urlParseFullHost } from \"./UrlHelperFuncs\";\r\nexport { createOfflineListener } from \"./Offline\";\r\nexport var PropertiesPluginIdentifier = \"AppInsightsPropertiesPlugin\";\r\nexport var BreezeChannelIdentifier = \"AppInsightsChannelPlugin\";\r\nexport var AnalyticsPluginIdentifier = \"ApplicationInsightsAnalytics\";\r\n//# sourceMappingURL=applicationinsights-common.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { asString, isBoolean, isFunction, isNullOrUndefined, isString } from \"@nevware21/ts-utils\";\r\nimport { STR_EMPTY } from \"../JavaScriptSDK/InternalConstants\";\r\nimport { _DYN_BLK_VAL, _DYN_TO_LOWER_CASE } from \"../__DynamicConstants\";\r\n/**\r\n * @internal\r\n * @ignore\r\n * @param str\r\n * @param defaultValue\r\n * @returns\r\n */\r\nfunction _stringToBoolOrDefault(theValue, defaultValue, theConfig) {\r\n    if (!theValue && isNullOrUndefined(theValue)) {\r\n        return defaultValue;\r\n    }\r\n    if (isBoolean(theValue)) {\r\n        return theValue;\r\n    }\r\n    return asString(theValue)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() === \"true\";\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance with the field defined as an object\r\n * that should be merged\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfMerge(defaultValue) {\r\n    return {\r\n        mrg: true,\r\n        v: defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance with the provided field set function\r\n * @param setter - The IConfigCheckFn function to validate the user provided value\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfSet(setter, defaultValue) {\r\n    return {\r\n        set: setter,\r\n        v: defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance with the provided field validator\r\n * @param validator - The IConfigCheckFn function to validate the user provided value\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @param fallBackName - The fallback configuration name if the current value is not available\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfValidate(validator, defaultValue, fallBackName) {\r\n    return {\r\n        fb: fallBackName,\r\n        isVal: validator,\r\n        v: defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance that will validate and convert the user\r\n * provided value to a boolean from a string or boolean value\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @param fallBackName - The fallback configuration name if the current value is not available\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfBoolean(defaultValue, fallBackName) {\r\n    return {\r\n        fb: fallBackName,\r\n        set: _stringToBoolOrDefault,\r\n        v: !!defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance that will validate that the user\r\n * provided value is a function.\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfFunc(defaultValue) {\r\n    return {\r\n        isVal: isFunction,\r\n        v: defaultValue || null\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance that will validate that the user\r\n * provided value is a function.\r\n * @param defaultValue - The default string value to apply it not provided or it's not valid, defaults to an empty string\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfString(defaultValue) {\r\n    return {\r\n        isVal: isString,\r\n        v: asString(defaultValue || STR_EMPTY)\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance identifying that value associated with this property\r\n * should not have it's properties converted into a dynamic config properties.\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfBlockPropValue(defaultValue) {\r\n    var _a;\r\n    return _a = {},\r\n        _a[_DYN_BLK_VAL /* @min:blkVal */] = true,\r\n        _a.v = defaultValue,\r\n        _a;\r\n}\r\n//# sourceMappingURL=ConfigDefaultHelpers.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { asString, isArray, isDefined, isNullOrUndefined, isObject, isPlainObject, isUndefined, objForEachKey, objHasOwn } from \"@nevware21/ts-utils\";\r\nimport { _DYN_BLK_VAL, _DYN_LENGTH, _DYN_RD_ONLY } from \"../__DynamicConstants\";\r\nfunction _isConfigDefaults(value) {\r\n    return (value && isObject(value) && (value.isVal || value.fb || objHasOwn(value, \"v\") || objHasOwn(value, \"mrg\") || objHasOwn(value, \"ref\") || value.set));\r\n}\r\nfunction _getDefault(dynamicHandler, theConfig, cfgDefaults) {\r\n    var defValue;\r\n    var isDefaultValid = cfgDefaults.dfVal || isDefined;\r\n    // There is a fallback config key so try and grab that first\r\n    if (theConfig && cfgDefaults.fb) {\r\n        var fallbacks = cfgDefaults.fb;\r\n        if (!isArray(fallbacks)) {\r\n            fallbacks = [fallbacks];\r\n        }\r\n        for (var lp = 0; lp < fallbacks[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n            var fallback = fallbacks[lp];\r\n            var fbValue = theConfig[fallback];\r\n            if (isDefaultValid(fbValue)) {\r\n                defValue = fbValue;\r\n            }\r\n            else if (dynamicHandler) {\r\n                // Needed to ensure that the fallback value (and potentially) new field is also dynamic even if null/undefined\r\n                fbValue = dynamicHandler.cfg[fallback];\r\n                if (isDefaultValid(fbValue)) {\r\n                    defValue = fbValue;\r\n                }\r\n                // Needed to ensure that the fallback value (and potentially) new field is also dynamic even if null/undefined\r\n                dynamicHandler.set(dynamicHandler.cfg, asString(fallback), fbValue);\r\n            }\r\n            if (isDefaultValid(defValue)) {\r\n                // We have a valid default so break out of the look\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    // If the value is still not defined and we have a default value then use that\r\n    if (!isDefaultValid(defValue) && isDefaultValid(cfgDefaults.v)) {\r\n        defValue = cfgDefaults.v;\r\n    }\r\n    return defValue;\r\n}\r\n/**\r\n * Recursively resolve the default value\r\n * @param dynamicHandler\r\n * @param theConfig\r\n * @param cfgDefaults\r\n * @returns\r\n */\r\nfunction _resolveDefaultValue(dynamicHandler, theConfig, cfgDefaults) {\r\n    var theValue = cfgDefaults;\r\n    if (cfgDefaults && _isConfigDefaults(cfgDefaults)) {\r\n        theValue = _getDefault(dynamicHandler, theConfig, cfgDefaults);\r\n    }\r\n    if (theValue) {\r\n        if (_isConfigDefaults(theValue)) {\r\n            theValue = _resolveDefaultValue(dynamicHandler, theConfig, theValue);\r\n        }\r\n        var newValue_1;\r\n        if (isArray(theValue)) {\r\n            newValue_1 = [];\r\n            newValue_1[_DYN_LENGTH /* @min:%2elength */] = theValue[_DYN_LENGTH /* @min:%2elength */];\r\n        }\r\n        else if (isPlainObject(theValue)) {\r\n            newValue_1 = {};\r\n        }\r\n        if (newValue_1) {\r\n            objForEachKey(theValue, function (key, value) {\r\n                if (value && _isConfigDefaults(value)) {\r\n                    value = _resolveDefaultValue(dynamicHandler, theConfig, value);\r\n                }\r\n                newValue_1[key] = value;\r\n            });\r\n            theValue = newValue_1;\r\n        }\r\n    }\r\n    return theValue;\r\n}\r\n/**\r\n * Applies the default value on the config property and makes sure that it's dynamic\r\n * @param theConfig\r\n * @param name\r\n * @param defaultValue\r\n */\r\nexport function _applyDefaultValue(dynamicHandler, theConfig, name, defaultValue) {\r\n    // Resolve the initial config value from the provided value or use the defined default\r\n    var isValid;\r\n    var setFn;\r\n    var defValue;\r\n    var cfgDefaults = defaultValue;\r\n    var mergeDf;\r\n    var reference;\r\n    var readOnly;\r\n    var blkDynamicValue;\r\n    if (_isConfigDefaults(cfgDefaults)) {\r\n        // looks like a IConfigDefault\r\n        isValid = cfgDefaults.isVal;\r\n        setFn = cfgDefaults.set;\r\n        readOnly = cfgDefaults[_DYN_RD_ONLY /* @min:%2erdOnly */];\r\n        blkDynamicValue = cfgDefaults[_DYN_BLK_VAL /* @min:%2eblkVal */];\r\n        mergeDf = cfgDefaults.mrg;\r\n        reference = cfgDefaults.ref;\r\n        if (!reference && isUndefined(reference)) {\r\n            reference = !!mergeDf;\r\n        }\r\n        defValue = _getDefault(dynamicHandler, theConfig, cfgDefaults);\r\n    }\r\n    else {\r\n        defValue = defaultValue;\r\n    }\r\n    if (blkDynamicValue) {\r\n        // Mark the property so that any value assigned will be blocked from conversion, we need to do this\r\n        // before assigning or fetching the value to ensure it's not converted\r\n        dynamicHandler[_DYN_BLK_VAL /* @min:%2eblkVal */](theConfig, name);\r\n    }\r\n    // Set the value to the default value;\r\n    var theValue;\r\n    var usingDefault = true;\r\n    var cfgValue = theConfig[name];\r\n    // try and get and user provided values\r\n    if (cfgValue || !isNullOrUndefined(cfgValue)) {\r\n        // Use the defined theConfig[name] value\r\n        theValue = cfgValue;\r\n        usingDefault = false;\r\n        // The values are different and we have a special default value check, which is used to\r\n        // override config values like empty strings to continue using the default\r\n        if (isValid && theValue !== defValue && !isValid(theValue)) {\r\n            theValue = defValue;\r\n            usingDefault = true;\r\n        }\r\n        if (setFn) {\r\n            theValue = setFn(theValue, defValue, theConfig);\r\n            usingDefault = theValue === defValue;\r\n        }\r\n    }\r\n    if (!usingDefault) {\r\n        if (isPlainObject(theValue) || isArray(defValue)) {\r\n            // we are using the user supplied value and it's an object\r\n            if (mergeDf && defValue && (isPlainObject(defValue) || isArray(defValue))) {\r\n                // Resolve/apply the defaults\r\n                objForEachKey(defValue, function (dfName, dfValue) {\r\n                    // Sets the value and makes it dynamic (if it doesn't already exist)\r\n                    _applyDefaultValue(dynamicHandler, theValue, dfName, dfValue);\r\n                });\r\n            }\r\n        }\r\n    }\r\n    else if (defValue) {\r\n        // Just resolve the default\r\n        theValue = _resolveDefaultValue(dynamicHandler, theConfig, defValue);\r\n    }\r\n    else {\r\n        theValue = defValue;\r\n    }\r\n    // if (theValue && usingDefault && (isPlainObject(theValue) || isArray(theValue))) {\r\n    //     theValue = _cfgDeepCopy(theValue);\r\n    // }\r\n    // Needed to ensure that the (potentially) new field is dynamic even if null/undefined\r\n    dynamicHandler.set(theConfig, name, theValue);\r\n    if (reference) {\r\n        dynamicHandler.ref(theConfig, name);\r\n    }\r\n    if (readOnly) {\r\n        dynamicHandler[_DYN_RD_ONLY /* @min:%2erdOnly */](theConfig, name);\r\n    }\r\n}\r\n//# sourceMappingURL=ConfigDefaults.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, createCustomError, dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nvar aggregationErrorType;\r\n/**\r\n * Throws an Aggregation Error which includes all of the errors that led to this error occurring\r\n * @param message - The message describing the aggregation error (the sourceError details are added to this)\r\n * @param sourceErrors - An array of the errors that caused this situation\r\n */\r\nexport function throwAggregationError(message, sourceErrors) {\r\n    if (!aggregationErrorType) {\r\n        aggregationErrorType = createCustomError(\"AggregationError\", function (self, args) {\r\n            if (args[_DYN_LENGTH /* @min:%2elength */] > 1) {\r\n                // Save the provided errors\r\n                self.errors = args[1];\r\n            }\r\n        });\r\n    }\r\n    var theMessage = message || \"One or more errors occurred.\";\r\n    arrForEach(sourceErrors, function (srcError, idx) {\r\n        theMessage += \"\\n\".concat(idx, \" > \").concat(dumpObj(srcError));\r\n    });\r\n    throw new aggregationErrorType(theMessage, sourceErrors || []);\r\n}\r\n//# sourceMappingURL=AggregationError.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, dumpObj, isArray, objDefine, objDefineProp, objForEachKey, objGetOwnPropertyDescriptor } from \"@nevware21/ts-utils\";\r\nimport { UNDEFINED_VALUE } from \"../JavaScriptSDK/InternalConstants\";\r\nimport { _DYN_APPLY, _DYN_HDLR, _DYN_LOGGER, _DYN_PUSH, _DYN_SPLICE, _DYN_THROW_INTERNAL } from \"../__DynamicConstants\";\r\nimport { CFG_HANDLER_LINK, _canMakeDynamic, blockDynamicConversion, throwInvalidAccess } from \"./DynamicSupport\";\r\nvar arrayMethodsToPatch = [\r\n    \"push\",\r\n    \"pop\",\r\n    \"shift\",\r\n    \"unshift\",\r\n    \"splice\"\r\n];\r\nexport var _throwDynamicError = function (logger, name, desc, e) {\r\n    logger && logger[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](3 /* eLoggingSeverity.DEBUG */, 108 /* _eInternalMessageId.DynamicConfigException */, \"\".concat(desc, \" [\").concat(name, \"] failed - \") + dumpObj(e));\r\n};\r\nfunction _patchArray(state, target, name) {\r\n    if (isArray(target)) {\r\n        // Monkey Patch the methods that might change the array\r\n        arrForEach(arrayMethodsToPatch, function (method) {\r\n            var orgMethod = target[method];\r\n            target[method] = function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var result = orgMethod[_DYN_APPLY /* @min:%2eapply */](this, args);\r\n                // items may be added, removed or moved so need to make some new dynamic properties\r\n                _makeDynamicObject(state, target, name, \"Patching\");\r\n                return result;\r\n            };\r\n        });\r\n    }\r\n}\r\nfunction _getOwnPropGetter(target, name) {\r\n    var propDesc = objGetOwnPropertyDescriptor(target, name);\r\n    return propDesc && propDesc.get;\r\n}\r\nfunction _createDynamicProperty(state, theConfig, name, value) {\r\n    // Does not appear to be dynamic so lets make it so\r\n    var detail = {\r\n        n: name,\r\n        h: [],\r\n        trk: function (handler) {\r\n            if (handler && handler.fn) {\r\n                if (arrIndexOf(detail.h, handler) === -1) {\r\n                    // Add this handler to the collection that should be notified when the value changes\r\n                    detail.h[_DYN_PUSH /* @min:%2epush */](handler);\r\n                }\r\n                state.trk(handler, detail);\r\n            }\r\n        },\r\n        clr: function (handler) {\r\n            var idx = arrIndexOf(detail.h, handler);\r\n            if (idx !== -1) {\r\n                detail.h[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\r\n            }\r\n        }\r\n    };\r\n    // Flag to optimize lookup response time by avoiding additional function calls\r\n    var checkDynamic = true;\r\n    var isObjectOrArray = false;\r\n    function _getProperty() {\r\n        if (checkDynamic) {\r\n            isObjectOrArray = isObjectOrArray || _canMakeDynamic(_getProperty, state, value);\r\n            // Make sure that if it's an object that we make it dynamic\r\n            if (value && !value[CFG_HANDLER_LINK] && isObjectOrArray) {\r\n                // It doesn't look like it's already dynamic so lets make sure it's converted the object into a dynamic Config as well\r\n                value = _makeDynamicObject(state, value, name, \"Converting\");\r\n            }\r\n            // If it needed to be converted it now has been\r\n            checkDynamic = false;\r\n        }\r\n        // If there is an active handler then add it to the tracking set of handlers\r\n        var activeHandler = state.act;\r\n        if (activeHandler) {\r\n            detail.trk(activeHandler);\r\n        }\r\n        return value;\r\n    }\r\n    // Tag this getter as our dynamic property and provide shortcut for notifying a change\r\n    _getProperty[state.prop] = {\r\n        chng: function () {\r\n            state.add(detail);\r\n        }\r\n    };\r\n    function _setProperty(newValue) {\r\n        if (value !== newValue) {\r\n            if (!!_getProperty[state.ro] && !state.upd) {\r\n                // field is marked as readonly so return false\r\n                throwInvalidAccess(\"[\" + name + \"] is read-only:\" + dumpObj(theConfig));\r\n            }\r\n            if (checkDynamic) {\r\n                isObjectOrArray = isObjectOrArray || _canMakeDynamic(_getProperty, state, value);\r\n                checkDynamic = false;\r\n            }\r\n            // The value must be a plain object or an array to enforce the reference (in-place updates)\r\n            var isReferenced = isObjectOrArray && _getProperty[state.rf];\r\n            if (isObjectOrArray) {\r\n                // We are about to replace a plain object or an array\r\n                if (isReferenced) {\r\n                    // Reassign the properties from the current value to the same properties from the newValue\r\n                    // This will set properties not in the newValue to undefined\r\n                    objForEachKey(value, function (key) {\r\n                        value[key] = newValue ? newValue[key] : UNDEFINED_VALUE;\r\n                    });\r\n                    // Now assign / re-assign value with all of the keys from newValue\r\n                    try {\r\n                        objForEachKey(newValue, function (key, theValue) {\r\n                            _setDynamicProperty(state, value, key, theValue);\r\n                        });\r\n                        // Now drop newValue so when we assign value later it keeps the existing reference\r\n                        newValue = value;\r\n                    }\r\n                    catch (e) {\r\n                        // Unable to convert to dynamic property so just leave as non-dynamic\r\n                        _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, \"Assigning\", e);\r\n                        // Mark as not an object or array so we don't try and do this again\r\n                        isObjectOrArray = false;\r\n                    }\r\n                }\r\n                else if (value && value[CFG_HANDLER_LINK]) {\r\n                    // As we are replacing the value, if it's already dynamic then we need to notify the listeners\r\n                    // for every property it has already\r\n                    objForEachKey(value, function (key) {\r\n                        // Check if the value is dynamic\r\n                        var getter = _getOwnPropGetter(value, key);\r\n                        if (getter) {\r\n                            // And if it is tell it's listeners that the value has changed\r\n                            var valueState = getter[state.prop];\r\n                            valueState && valueState.chng();\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if (newValue !== value) {\r\n                var newIsObjectOrArray = newValue && _canMakeDynamic(_getProperty, state, newValue);\r\n                if (!isReferenced && newIsObjectOrArray) {\r\n                    // As the newValue is an object/array lets preemptively make it dynamic\r\n                    newValue = _makeDynamicObject(state, newValue, name, \"Converting\");\r\n                }\r\n                // Now assign the internal \"value\" to the newValue\r\n                value = newValue;\r\n                isObjectOrArray = newIsObjectOrArray;\r\n            }\r\n            // Cause any listeners to be scheduled for notification\r\n            state.add(detail);\r\n        }\r\n    }\r\n    objDefine(theConfig, detail.n, { g: _getProperty, s: _setProperty });\r\n}\r\nexport function _setDynamicProperty(state, target, name, value) {\r\n    if (target) {\r\n        // To be a dynamic property it needs to have a get function\r\n        var getter = _getOwnPropGetter(target, name);\r\n        var isDynamic = getter && !!getter[state.prop];\r\n        if (!isDynamic) {\r\n            _createDynamicProperty(state, target, name, value);\r\n        }\r\n        else {\r\n            // Looks like it's already dynamic just assign the new value\r\n            target[name] = value;\r\n        }\r\n    }\r\n    return target;\r\n}\r\nexport function _setDynamicPropertyState(state, target, name, flags) {\r\n    if (target) {\r\n        // To be a dynamic property it needs to have a get function\r\n        var getter = _getOwnPropGetter(target, name);\r\n        var isDynamic = getter && !!getter[state.prop];\r\n        var inPlace = flags && flags[0 /* _eSetDynamicPropertyFlags.inPlace */];\r\n        var rdOnly = flags && flags[1 /* _eSetDynamicPropertyFlags.readOnly */];\r\n        var blkProp = flags && flags[2 /* _eSetDynamicPropertyFlags.blockDynamicProperty */];\r\n        if (!isDynamic) {\r\n            if (blkProp) {\r\n                try {\r\n                    // Attempt to mark the target as blocked from conversion\r\n                    blockDynamicConversion(target);\r\n                }\r\n                catch (e) {\r\n                    _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, \"Blocking\", e);\r\n                }\r\n            }\r\n            try {\r\n                // Make sure it's dynamic so that we can tag the property as per the state\r\n                _setDynamicProperty(state, target, name, target[name]);\r\n                getter = _getOwnPropGetter(target, name);\r\n            }\r\n            catch (e) {\r\n                // Unable to convert to dynamic property so just leave as non-dynamic\r\n                _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, \"State\", e);\r\n            }\r\n        }\r\n        // Assign the optional flags if true\r\n        if (inPlace) {\r\n            getter[state.rf] = inPlace;\r\n        }\r\n        if (rdOnly) {\r\n            getter[state.ro] = rdOnly;\r\n        }\r\n        if (blkProp) {\r\n            getter[state.blkVal] = true;\r\n        }\r\n    }\r\n    return target;\r\n}\r\nexport function _makeDynamicObject(state, target, name, desc) {\r\n    try {\r\n        // Assign target with new value properties (converting into dynamic properties in the process)\r\n        objForEachKey(target, function (key, value) {\r\n            // Assign and/or make the property dynamic\r\n            _setDynamicProperty(state, target, key, value);\r\n        });\r\n        if (!target[CFG_HANDLER_LINK]) {\r\n            // Link the config back to the dynamic config details\r\n            objDefineProp(target, CFG_HANDLER_LINK, {\r\n                get: function () {\r\n                    return state[_DYN_HDLR /* @min:%2ehdlr */];\r\n                }\r\n            });\r\n            _patchArray(state, target, name);\r\n        }\r\n    }\r\n    catch (e) {\r\n        // Unable to convert to dynamic property so just leave as non-dynamic\r\n        _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, desc, e);\r\n    }\r\n    return target;\r\n}\r\n//# sourceMappingURL=DynamicProperty.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, dumpObj, newSymbol, scheduleTimeout } from \"@nevware21/ts-utils\";\r\nimport { throwAggregationError } from \"../JavaScriptSDK/AggregationError\";\r\nimport { _DYN_BLK_VAL, _DYN_CANCEL, _DYN_HDLR, _DYN_LENGTH, _DYN_LOGGER, _DYN_NOTIFY, _DYN_PUSH, _DYN_RD_ONLY, _DYN_SET_DF, _DYN_THROW_INTERNAL } from \"../__DynamicConstants\";\r\nvar symPrefix = \"[[ai_\";\r\nvar symPostfix = \"]]\";\r\nexport function _createState(cfgHandler) {\r\n    var _a;\r\n    var dynamicPropertySymbol = newSymbol(symPrefix + \"get\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyReadOnly = newSymbol(symPrefix + \"ro\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyReferenced = newSymbol(symPrefix + \"rf\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyBlockValue = newSymbol(symPrefix + \"blkVal\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyDetail = newSymbol(symPrefix + \"dtl\" + cfgHandler.uid + symPostfix);\r\n    var _waitingHandlers = null;\r\n    var _watcherTimer = null;\r\n    var theState;\r\n    function _useHandler(activeHandler, callback) {\r\n        var prevWatcher = theState.act;\r\n        try {\r\n            theState.act = activeHandler;\r\n            if (activeHandler && activeHandler[dynamicPropertyDetail]) {\r\n                // Clear out the previously tracked details for this handler, so that access are re-evaluated\r\n                arrForEach(activeHandler[dynamicPropertyDetail], function (detail) {\r\n                    detail.clr(activeHandler);\r\n                });\r\n                activeHandler[dynamicPropertyDetail] = [];\r\n            }\r\n            callback({\r\n                cfg: cfgHandler.cfg,\r\n                set: cfgHandler.set.bind(cfgHandler),\r\n                setDf: cfgHandler[_DYN_SET_DF /* @min:%2esetDf */].bind(cfgHandler),\r\n                ref: cfgHandler.ref.bind(cfgHandler),\r\n                rdOnly: cfgHandler[_DYN_RD_ONLY /* @min:%2erdOnly */].bind(cfgHandler)\r\n            });\r\n        }\r\n        catch (e) {\r\n            var logger = cfgHandler[_DYN_LOGGER /* @min:%2elogger */];\r\n            if (logger) {\r\n                // Don't let one individual failure break everyone\r\n                logger[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](1 /* eLoggingSeverity.CRITICAL */, 107 /* _eInternalMessageId.ConfigWatcherException */, dumpObj(e));\r\n            }\r\n            // Re-throw the exception so that any true \"error\" is reported back to the called\r\n            throw e;\r\n        }\r\n        finally {\r\n            theState.act = prevWatcher || null;\r\n        }\r\n    }\r\n    function _notifyWatchers() {\r\n        if (_waitingHandlers) {\r\n            var notifyHandlers = _waitingHandlers;\r\n            _waitingHandlers = null;\r\n            // Stop any timer as we are running them now anyway\r\n            _watcherTimer && _watcherTimer[_DYN_CANCEL /* @min:%2ecancel */]();\r\n            _watcherTimer = null;\r\n            var watcherFailures_1 = [];\r\n            // Now run the handlers\r\n            arrForEach(notifyHandlers, function (handler) {\r\n                if (handler) {\r\n                    if (handler[dynamicPropertyDetail]) {\r\n                        arrForEach(handler[dynamicPropertyDetail], function (detail) {\r\n                            // Clear out this handler from  previously tracked details, so that access are re-evaluated\r\n                            detail.clr(handler);\r\n                        });\r\n                        handler[dynamicPropertyDetail] = null;\r\n                    }\r\n                    // The handler may have self removed as part of another handler so re-check\r\n                    if (handler.fn) {\r\n                        try {\r\n                            _useHandler(handler, handler.fn);\r\n                        }\r\n                        catch (e) {\r\n                            // Don't let a single failing watcher cause other watches to fail\r\n                            watcherFailures_1[_DYN_PUSH /* @min:%2epush */](e);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            // During notification we may have had additional updates -- so notify those updates as well\r\n            if (_waitingHandlers) {\r\n                try {\r\n                    _notifyWatchers();\r\n                }\r\n                catch (e) {\r\n                    watcherFailures_1[_DYN_PUSH /* @min:%2epush */](e);\r\n                }\r\n            }\r\n            if (watcherFailures_1[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                throwAggregationError(\"Watcher error(s): \", watcherFailures_1);\r\n            }\r\n        }\r\n    }\r\n    function _addWatcher(detail) {\r\n        if (detail && detail.h[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            if (!_waitingHandlers) {\r\n                _waitingHandlers = [];\r\n            }\r\n            if (!_watcherTimer) {\r\n                _watcherTimer = scheduleTimeout(function () {\r\n                    _watcherTimer = null;\r\n                    _notifyWatchers();\r\n                }, 0);\r\n            }\r\n            // Add all of the handlers for this detail (if not already present) - using normal for-loop for performance\r\n            for (var idx = 0; idx < detail.h[_DYN_LENGTH /* @min:%2elength */]; idx++) {\r\n                var handler = detail.h[idx];\r\n                // Add this handler to the collection of handlers to re-execute\r\n                if (handler && arrIndexOf(_waitingHandlers, handler) === -1) {\r\n                    _waitingHandlers[_DYN_PUSH /* @min:%2epush */](handler);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function _trackHandler(handler, detail) {\r\n        if (handler) {\r\n            var details = handler[dynamicPropertyDetail] = handler[dynamicPropertyDetail] || [];\r\n            if (arrIndexOf(details, detail) === -1) {\r\n                // If this detail is not already listed as tracked then add it so that we re-evaluate it's usage\r\n                details[_DYN_PUSH /* @min:%2epush */](detail);\r\n            }\r\n        }\r\n    }\r\n    theState = (_a = {\r\n            prop: dynamicPropertySymbol,\r\n            ro: dynamicPropertyReadOnly,\r\n            rf: dynamicPropertyReferenced\r\n        },\r\n        _a[_DYN_BLK_VAL /* @min:blkVal */] = dynamicPropertyBlockValue,\r\n        _a[_DYN_HDLR /* @min:hdlr */] = cfgHandler,\r\n        _a.add = _addWatcher,\r\n        _a[_DYN_NOTIFY /* @min:notify */] = _notifyWatchers,\r\n        _a.use = _useHandler,\r\n        _a.trk = _trackHandler,\r\n        _a);\r\n    return theState;\r\n}\r\n//# sourceMappingURL=DynamicState.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { dumpObj, isUndefined, objDefine, objForEachKey } from \"@nevware21/ts-utils\";\r\nimport { createUniqueNamespace } from \"../JavaScriptSDK/DataCacheHelper\";\r\nimport { STR_NOT_DYNAMIC_ERROR } from \"../JavaScriptSDK/InternalConstants\";\r\nimport { _DYN_BLK_VAL, _DYN_LOGGER, _DYN_NOTIFY, _DYN_RD_ONLY, _DYN_SET_DF, _DYN_THROW_INTERNAL, _DYN_WARN_TO_CONSOLE, _DYN_WATCH } from \"../__DynamicConstants\";\r\nimport { _applyDefaultValue } from \"./ConfigDefaults\";\r\nimport { _makeDynamicObject, _setDynamicProperty, _setDynamicPropertyState, _throwDynamicError } from \"./DynamicProperty\";\r\nimport { _createState } from \"./DynamicState\";\r\nimport { CFG_HANDLER_LINK, _cfgDeepCopy, getDynamicConfigHandler, throwInvalidAccess } from \"./DynamicSupport\";\r\n/**\r\n * Identifies a function which will be re-called whenever any of it's accessed configuration values\r\n * change.\r\n * @param configHandler - The callback that will be called for the initial request and then whenever any\r\n * accessed configuration changes are identified.\r\n */\r\nfunction _createAndUseHandler(state, configHandler) {\r\n    var handler = {\r\n        fn: configHandler,\r\n        rm: function () {\r\n            // Clear all references to the handler so it can be garbage collected\r\n            // This will also cause this handler to never get called and eventually removed\r\n            handler.fn = null;\r\n            state = null;\r\n            configHandler = null;\r\n        }\r\n    };\r\n    objDefine(handler, \"toJSON\", { v: function () { return \"WatcherHandler\" + (handler.fn ? \"\" : \"[X]\"); } });\r\n    state.use(handler, configHandler);\r\n    return handler;\r\n}\r\n/**\r\n * Creates the dynamic config handler and associates with the target config as the root object\r\n * @param target - The config that you want to be root of the dynamic config\r\n * @param inPlace - Should the passed config be converted in-place or a new proxy returned\r\n * @returns The existing dynamic handler or a new instance with the provided config values\r\n */\r\nfunction _createDynamicHandler(logger, target, inPlace) {\r\n    var _a;\r\n    var dynamicHandler = getDynamicConfigHandler(target);\r\n    if (dynamicHandler) {\r\n        // The passed config is already dynamic so return it's tracker\r\n        return dynamicHandler;\r\n    }\r\n    var uid = createUniqueNamespace(\"dyncfg\", true);\r\n    var newTarget = (target && inPlace !== false) ? target : _cfgDeepCopy(target);\r\n    var theState;\r\n    function _notifyWatchers() {\r\n        theState[_DYN_NOTIFY /* @min:%2enotify */]();\r\n    }\r\n    function _setValue(target, name, value) {\r\n        try {\r\n            target = _setDynamicProperty(theState, target, name, value);\r\n        }\r\n        catch (e) {\r\n            // Unable to convert to dynamic property so just leave as non-dynamic\r\n            _throwDynamicError(logger, name, \"Setting value\", e);\r\n        }\r\n        return target[name];\r\n    }\r\n    function _watch(configHandler) {\r\n        return _createAndUseHandler(theState, configHandler);\r\n    }\r\n    function _block(configHandler, allowUpdate) {\r\n        theState.use(null, function (details) {\r\n            var prevUpd = theState.upd;\r\n            try {\r\n                if (!isUndefined(allowUpdate)) {\r\n                    theState.upd = allowUpdate;\r\n                }\r\n                configHandler(details);\r\n            }\r\n            finally {\r\n                theState.upd = prevUpd;\r\n            }\r\n        });\r\n    }\r\n    function _ref(target, name) {\r\n        var _a;\r\n        // Make sure it's dynamic and mark as referenced with it's current value\r\n        return _setDynamicPropertyState(theState, target, name, (_a = {}, _a[0 /* _eSetDynamicPropertyFlags.inPlace */] = true, _a))[name];\r\n    }\r\n    function _rdOnly(target, name) {\r\n        var _a;\r\n        // Make sure it's dynamic and mark as readonly with it's current value\r\n        return _setDynamicPropertyState(theState, target, name, (_a = {}, _a[1 /* _eSetDynamicPropertyFlags.readOnly */] = true, _a))[name];\r\n    }\r\n    function _blkPropValue(target, name) {\r\n        var _a;\r\n        // Make sure it's dynamic and mark as readonly with it's current value\r\n        return _setDynamicPropertyState(theState, target, name, (_a = {}, _a[2 /* _eSetDynamicPropertyFlags.blockDynamicProperty */] = true, _a))[name];\r\n    }\r\n    function _applyDefaults(theConfig, defaultValues) {\r\n        if (defaultValues) {\r\n            // Resolve/apply the defaults\r\n            objForEachKey(defaultValues, function (name, value) {\r\n                // Sets the value and makes it dynamic (if it doesn't already exist)\r\n                _applyDefaultValue(cfgHandler, theConfig, name, value);\r\n            });\r\n        }\r\n        return theConfig;\r\n    }\r\n    var cfgHandler = (_a = {\r\n            uid: null,\r\n            cfg: newTarget\r\n        },\r\n        _a[_DYN_LOGGER /* @min:logger */] = logger,\r\n        _a[_DYN_NOTIFY /* @min:notify */] = _notifyWatchers,\r\n        _a.set = _setValue,\r\n        _a[_DYN_SET_DF /* @min:setDf */] = _applyDefaults,\r\n        _a[_DYN_WATCH /* @min:watch */] = _watch,\r\n        _a.ref = _ref,\r\n        _a[_DYN_RD_ONLY /* @min:rdOnly */] = _rdOnly,\r\n        _a[_DYN_BLK_VAL /* @min:blkVal */] = _blkPropValue,\r\n        _a._block = _block,\r\n        _a);\r\n    objDefine(cfgHandler, \"uid\", {\r\n        c: false,\r\n        e: false,\r\n        w: false,\r\n        v: uid\r\n    });\r\n    theState = _createState(cfgHandler);\r\n    // Setup tracking for all defined default keys\r\n    _makeDynamicObject(theState, newTarget, \"config\", \"Creating\");\r\n    return cfgHandler;\r\n}\r\n/**\r\n * Log an invalid access message to the console\r\n * @param message\r\n */\r\nfunction _logInvalidAccess(logger, message) {\r\n    if (logger) {\r\n        logger[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */](message);\r\n        logger[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](2 /* eLoggingSeverity.WARNING */, 108 /* _eInternalMessageId.DynamicConfigException */, message);\r\n    }\r\n    else {\r\n        // We don't have a logger so just throw an exception\r\n        throwInvalidAccess(message);\r\n    }\r\n}\r\n/**\r\n * Create or return a dynamic version of the passed config, if it is not already dynamic\r\n * @param config - The config to be converted into a dynamic config\r\n * @param defaultConfig - The default values to apply on the config if the properties don't already exist\r\n * @param inPlace - Should the config be converted in-place into a dynamic config or a new instance returned, defaults to true\r\n * @returns The dynamic config handler for the config (whether new or existing)\r\n */\r\nexport function createDynamicConfig(config, defaultConfig, logger, inPlace) {\r\n    var dynamicHandler = _createDynamicHandler(logger, config || {}, inPlace);\r\n    if (defaultConfig) {\r\n        dynamicHandler[_DYN_SET_DF /* @min:%2esetDf */](dynamicHandler.cfg, defaultConfig);\r\n    }\r\n    return dynamicHandler;\r\n}\r\n/**\r\n * Watch and track changes for accesses to the current config, the provided config MUST already be\r\n * a dynamic config or a child accessed via the dynamic config\r\n * @param config\r\n * @param configHandler\r\n * @param logger - The logger instance to use if there is no existing handler\r\n * @returns A watcher handler instance that can be used to remove itself when being unloaded\r\n * @throws TypeError if the provided config is not a dynamic config instance\r\n */\r\nexport function onConfigChange(config, configHandler, logger) {\r\n    var handler = config[CFG_HANDLER_LINK] || config;\r\n    if (handler.cfg && (handler.cfg === config || handler.cfg[CFG_HANDLER_LINK] === handler)) {\r\n        return handler[_DYN_WATCH /* @min:%2ewatch */](configHandler);\r\n    }\r\n    _logInvalidAccess(logger, STR_NOT_DYNAMIC_ERROR + dumpObj(config));\r\n    return createDynamicConfig(config, null, logger)[_DYN_WATCH /* @min:%2ewatch */](configHandler);\r\n}\r\n//# sourceMappingURL=DynamicConfig.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { isArray, isPlainObject, objForEachKey, symbolFor, throwTypeError } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\n// Using Symbol.for so that if the same symbol was already created it would be returned\r\n// To handle multiple instances using potentially different versions we are not using\r\n// createUniqueNamespace()\r\nexport var CFG_HANDLER_LINK = symbolFor(\"[[ai_dynCfg_1]]\");\r\n/**\r\n * @internal\r\n * @ignore\r\n * The symbol to tag objects / arrays with if they should not be converted\r\n */\r\nvar BLOCK_DYNAMIC = symbolFor(\"[[ai_blkDynCfg_1]]\");\r\n/**\r\n * @internal\r\n * @ignore\r\n * The symbol to tag objects to indicate that when included into the configuration that\r\n * they should be converted into a trackable dynamic object.\r\n */\r\nvar FORCE_DYNAMIC = symbolFor(\"[[ai_frcDynCfg_1]]\");\r\nexport function _cfgDeepCopy(source) {\r\n    if (source) {\r\n        var target_1;\r\n        if (isArray(source)) {\r\n            target_1 = [];\r\n            target_1[_DYN_LENGTH /* @min:%2elength */] = source[_DYN_LENGTH /* @min:%2elength */];\r\n        }\r\n        else if (isPlainObject(source)) {\r\n            target_1 = {};\r\n        }\r\n        if (target_1) {\r\n            // Copying index values by property name as the extensionConfig can be an array or object\r\n            objForEachKey(source, function (key, value) {\r\n                // Perform a deep copy of the object\r\n                target_1[key] = _cfgDeepCopy(value);\r\n            });\r\n            return target_1;\r\n        }\r\n    }\r\n    return source;\r\n}\r\n/**\r\n * @internal\r\n * Get the dynamic config handler if the value is already dynamic\r\n * @param value\r\n * @returns\r\n */\r\nexport function getDynamicConfigHandler(value) {\r\n    if (value) {\r\n        var handler = value[CFG_HANDLER_LINK] || value;\r\n        if (handler.cfg && (handler.cfg === value || handler.cfg[CFG_HANDLER_LINK] === handler)) {\r\n            return handler;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Mark the provided value so that if it's included into the configuration it will NOT have\r\n * its properties converted into a dynamic (reactive) object. If the object is not a plain object\r\n * or an array (ie. a class) this function has not affect as only Objects and Arrays are converted\r\n * into dynamic objects in the dynamic configuration.\r\n *\r\n * When you have tagged a value as both {@link forceDynamicConversion} and blocked force will take precedence.\r\n *\r\n * You should only need to use this function, if you are creating dynamic \"classes\" from objects\r\n * which confirm to the require interface. A common case for this is during unit testing where it's\r\n * easier to create mock extensions.\r\n *\r\n * If `value` is falsy (null / undefined / 0 / empty string etc) it will not be tagged and\r\n * if there is an exception adding the property to the value (because its frozen etc) the\r\n * exception will be swallowed\r\n *\r\n * @example\r\n * ```ts\r\n * // This is a valid \"extension\", but it is technically an object\r\n * // So when included in the config.extensions it WILL be cloned and then\r\n * // converted into a dynamic object, where all of its properties will become\r\n * // get/set object properties and will be tracked. While this WILL still\r\n * // function, when attempt to use a mocking framework on top of this the\r\n * // functions are now technically get accessors which return a function\r\n * // and this can cause some mocking frameworks to fail.\r\n * let mockChannel = {\r\n *      pause: () => { },\r\n*      resume: () => { },\r\n*      teardown: () => { },\r\n*      flush: (async: any, callBack: any) => { },\r\n*      processTelemetry: (env: any) => { },\r\n*      setNextPlugin: (next: any) => { },\r\n*      initialize: (config: any, core: any, extensions: any) => { },\r\n*      identifier: \"testChannel\",\r\n*      priority: 1003\r\n* };\r\n * ```\r\n * @param value - The object that you want to block from being converted into a\r\n * trackable dynamic object\r\n * @returns The original value\r\n */\r\nexport function blockDynamicConversion(value) {\r\n    if (value && (isPlainObject(value) || isArray(value))) {\r\n        try {\r\n            value[BLOCK_DYNAMIC] = true;\r\n        }\r\n        catch (e) {\r\n            // Don't throw for this case as it's an ask only\r\n        }\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * This is the reverse case of {@link blockDynamicConversion} in that this will tag an\r\n * object to indicate that it should always be converted into a dynamic trackable object\r\n * even when not an object or array. So all properties of this object will become\r\n * get / set accessor functions.\r\n *\r\n * When you have tagged a value as both {@link forceDynamicConversion} and blocked force will take precedence.\r\n *\r\n * If `value` is falsy (null / undefined / 0 / empty string etc) it will not be tagged and\r\n * if there is an exception adding the property to the value (because its frozen etc) the\r\n * exception will be swallowed.\r\n * @param value - The object that should be tagged and converted if included into a dynamic\r\n * configuration.\r\n * @returns The original value\r\n */\r\nexport function forceDynamicConversion(value) {\r\n    if (value) {\r\n        try {\r\n            value[FORCE_DYNAMIC] = true;\r\n        }\r\n        catch (e) {\r\n            // Don't throw for this case as it's an ask only\r\n        }\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * @internal\r\n * @ignore\r\n * Helper function to check whether an object can or should be converted into a dynamic\r\n * object.\r\n * @param value - The object to check whether it should be converted\r\n * @returns `true` if the value should be converted otherwise `false`.\r\n */\r\nexport function _canMakeDynamic(getFunc, state, value) {\r\n    var result = false;\r\n    // Object must exist and be truthy\r\n    if (value && !getFunc[state.blkVal]) {\r\n        // Tagged as always convert\r\n        result = value[FORCE_DYNAMIC];\r\n        // Check that it's not explicitly tagged as blocked\r\n        if (!result && !value[BLOCK_DYNAMIC]) {\r\n            // Only convert plain objects or arrays by default\r\n            result = isPlainObject(value) || isArray(value);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Throws an invalid access exception\r\n * @param message - The message to include in the exception\r\n */\r\nexport function throwInvalidAccess(message) {\r\n    throwTypeError(\"InvalidAccess:\" + message);\r\n}\r\n//# sourceMappingURL=DynamicSupport.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createEnum, createTypeMap } from \"@nevware21/ts-utils\";\r\n/**\r\n * Create an enum style object which has both the key => value and value => key mappings\r\n * @param values - The values to populate on the new object\r\n * @returns\r\n */\r\nexport var createEnumStyle = createEnum;\r\n/**\r\n * Create a 2 index map that maps an enum's key and value to the defined map value, X[\"key\"] => mapValue and X[0] => mapValue.\r\n * Generic values\r\n * - E = the const enum type (typeof eRequestHeaders);\r\n * - V = Identifies the valid values for the keys, this should include both the enum numeric and string key of the type. The\r\n * resulting \"Value\" of each entry identifies the valid values withing the assignments.\r\n * @param values - The values to populate on the new object\r\n * @returns\r\n */\r\nexport var createValueMap = createTypeMap;\r\n//# sourceMappingURL=EnumHelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createEnumStyle } from \"../JavaScriptSDK.Enums/EnumHelperFuncs\";\r\n/**\r\n * The EventsDiscardedReason enumeration contains a set of values that specify the reason for discarding an event.\r\n */\r\nexport var EventsDiscardedReason = createEnumStyle({\r\n    /**\r\n     * Unknown.\r\n     */\r\n    Unknown: 0 /* eEventsDiscardedReason.Unknown */,\r\n    /**\r\n     * Status set to non-retryable.\r\n     */\r\n    NonRetryableStatus: 1 /* eEventsDiscardedReason.NonRetryableStatus */,\r\n    /**\r\n     * The event is invalid.\r\n     */\r\n    InvalidEvent: 2 /* eEventsDiscardedReason.InvalidEvent */,\r\n    /**\r\n     * The size of the event is too large.\r\n     */\r\n    SizeLimitExceeded: 3 /* eEventsDiscardedReason.SizeLimitExceeded */,\r\n    /**\r\n     * The server is not accepting events from this instrumentation key.\r\n     */\r\n    KillSwitch: 4 /* eEventsDiscardedReason.KillSwitch */,\r\n    /**\r\n     * The event queue is full.\r\n     */\r\n    QueueFull: 5 /* eEventsDiscardedReason.QueueFull */\r\n});\r\n/**\r\n *  The eBatchDiscardedReason enumeration contains a set of values that specify the reason for discarding offline batches.\r\n */\r\nexport var BatchDiscardedReason = createEnumStyle({\r\n    /**\r\n     * Unknown.\r\n     */\r\n    Unknown: 0 /* eBatchDiscardedReason.Unknown */,\r\n    /**\r\n      * Status set to non-retryable after sending\r\n      */\r\n    NonRetryableStatus: 1 /* eBatchDiscardedReason.NonRetryableStatus */,\r\n    /**\r\n     * Batches with lower number of critical events are dropped to free up storage space\r\n     */\r\n    CleanStorage: 2 /* eBatchDiscardedReason.CleanStorage */,\r\n    /**\r\n     * The batches in storage exceed max allowed time\r\n     */\r\n    MaxInStorageTimeExceeded: 3 /* eBatchDiscardedReason.MaxInStorageTimeExceeded */\r\n});\r\n//# sourceMappingURL=EventsDiscardedReason.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { createEnumStyle } from \"./EnumHelperFuncs\";\r\nexport var ActiveStatus = createEnumStyle({\r\n    NONE: 0 /* eActiveStatus.NONE */,\r\n    PENDING: 3 /* eActiveStatus.PENDING */,\r\n    INACTIVE: 1 /* eActiveStatus.INACTIVE */,\r\n    ACTIVE: 2 /* eActiveStatus.ACTIVE */\r\n});\r\n//# sourceMappingURL=InitActiveStatusEnum.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nvar _a;\r\nimport { __spreadArrayFn as __spreadArray } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { createPromise, createSyncAllSettledPromise, doAwaitResponse } from \"@nevware21/ts-async\";\r\nimport { arrAppend, arrForEach, arrIndexOf, createTimeout, deepExtend, hasDocument, isFunction, isNullOrUndefined, isPlainObject, isPromiseLike, objDeepFreeze, objDefine, objForEachKey, objFreeze, objHasOwn, scheduleTimeout, throwError } from \"@nevware21/ts-utils\";\r\nimport { createDynamicConfig, onConfigChange } from \"../Config/DynamicConfig\";\r\nimport { ActiveStatus } from \"../JavaScriptSDK.Enums/InitActiveStatusEnum\";\r\nimport { _DYN_ADD_NOTIFICATION_LIS1, _DYN_CANCEL, _DYN_CREATE_NEW, _DYN_ENABLED, _DYN_GET_NOTIFY_MGR, _DYN_GET_PLUGIN, _DYN_GET_PROCESS_TEL_CONT2, _DYN_IDENTIFIER, _DYN_INITIALIZE, _DYN_INSTRUMENTATION_KEY, _DYN_IS_ASYNC, _DYN_IS_INITIALIZED, _DYN_I_KEY, _DYN_LENGTH, _DYN_LOGGER, _DYN_LOGGING_LEVEL_CONSOL4, _DYN_MESSAGE, _DYN_MESSAGE_ID, _DYN_NAME, _DYN_NOTIFY, _DYN_ON_COMPLETE, _DYN_POLL_INTERNAL_LOGS, _DYN_PROCESS_NEXT, _DYN_PUSH, _DYN_REMOVE_NOTIFICATION_0, _DYN_SET_DF, _DYN_SPLICE, _DYN_STOP_POLLING_INTERNA3, _DYN_TEARDOWN, _DYN_TIME, _DYN_UNLOAD, _DYN_VALUE, _DYN_VERSION, _DYN_WATCH, _DYN__INACTIVE } from \"../__DynamicConstants\";\r\nimport { doUnloadAll, runTargetUnload } from \"./AsyncUtils\";\r\nimport { ChannelControllerPriority } from \"./Constants\";\r\nimport { createCookieMgr } from \"./CookieMgr\";\r\nimport { createUniqueNamespace } from \"./DataCacheHelper\";\r\nimport { getDebugListener } from \"./DbgExtensionUtils\";\r\nimport { DiagnosticLogger, _InternalLogMessage, _throwInternal, _warnToConsole } from \"./DiagnosticLogger\";\r\nimport { getSetValue, isNotNullOrUndefined, proxyFunctionAs, proxyFunctions, toISOString } from \"./HelperFuncs\";\r\nimport { STR_CHANNELS, STR_CORE, STR_CREATE_PERF_MGR, STR_DISABLED, STR_EMPTY, STR_EVENTS_DISCARDED, STR_EXTENSIONS, STR_EXTENSION_CONFIG, STR_GET_PERF_MGR, STR_PRIORITY, UNDEFINED_VALUE } from \"./InternalConstants\";\r\nimport { NotificationManager } from \"./NotificationManager\";\r\nimport { PerfManager, doPerf, getGblPerfMgr } from \"./PerfManager\";\r\nimport { createProcessTelemetryContext, createProcessTelemetryUnloadContext, createProcessTelemetryUpdateContext, createTelemetryProxyChain } from \"./ProcessTelemetryContext\";\r\nimport { _getPluginState, createDistributedTraceContext, initializePlugins, sortPlugins } from \"./TelemetryHelpers\";\r\nimport { TelemetryInitializerPlugin } from \"./TelemetryInitializerPlugin\";\r\nimport { createUnloadHandlerContainer } from \"./UnloadHandlerContainer\";\r\nimport { createUnloadHookContainer } from \"./UnloadHookContainer\";\r\nvar strValidationError = \"Plugins must provide initialize method\";\r\nvar strNotificationManager = \"_notificationManager\";\r\nvar strSdkUnloadingError = \"SDK is still unloading...\";\r\nvar strSdkNotInitialized = \"SDK is not initialized\";\r\nvar maxInitQueueSize = 100;\r\nvar maxInitTimeout = 50000;\r\n// const strPluginUnloadFailed = \"Failed to unload plugin\";\r\n/**\r\n * The default settings for the config.\r\n * WE MUST include all defaults here to ensure that the config is created with all of the properties\r\n * defined as dynamic.\r\n */\r\nvar defaultConfig = objDeepFreeze((_a = {\r\n        cookieCfg: {}\r\n    },\r\n    _a[STR_EXTENSIONS] = { rdOnly: true, ref: true, v: [] },\r\n    _a[STR_CHANNELS] = { rdOnly: true, ref: true, v: [] },\r\n    _a[STR_EXTENSION_CONFIG] = { ref: true, v: {} },\r\n    _a[STR_CREATE_PERF_MGR] = UNDEFINED_VALUE,\r\n    _a.loggingLevelConsole = 0 /* eLoggingSeverity.DISABLED */,\r\n    _a.diagnosticLogInterval = UNDEFINED_VALUE,\r\n    _a));\r\n/**\r\n * Helper to create the default performance manager\r\n * @param core\r\n * @param notificationMgr\r\n */\r\nfunction _createPerfManager(core, notificationMgr) {\r\n    return new PerfManager(notificationMgr);\r\n}\r\nfunction _validateExtensions(logger, channelPriority, allExtensions) {\r\n    var _a;\r\n    // Concat all available extensions\r\n    var coreExtensions = [];\r\n    var channels = [];\r\n    // Check if any two extensions have the same priority, then warn to console\r\n    // And extract the local extensions from the\r\n    var extPriorities = {};\r\n    // Extension validation\r\n    arrForEach(allExtensions, function (ext) {\r\n        // Check for ext.initialize\r\n        if (isNullOrUndefined(ext) || isNullOrUndefined(ext[_DYN_INITIALIZE /* @min:%2einitialize */])) {\r\n            throwError(strValidationError);\r\n        }\r\n        var extPriority = ext[STR_PRIORITY /* @min:%2epriority */];\r\n        var identifier = ext[_DYN_IDENTIFIER /* @min:%2eidentifier */];\r\n        if (ext && extPriority) {\r\n            if (!isNullOrUndefined(extPriorities[extPriority])) {\r\n                _warnToConsole(logger, \"Two extensions have same priority #\" + extPriority + \" - \" + extPriorities[extPriority] + \", \" + identifier);\r\n            }\r\n            else {\r\n                // set a value\r\n                extPriorities[extPriority] = identifier;\r\n            }\r\n        }\r\n        // Split extensions to core and channels\r\n        if (!extPriority || extPriority < channelPriority) {\r\n            // Add to core extension that will be managed by AppInsightsCore\r\n            coreExtensions[_DYN_PUSH /* @min:%2epush */](ext);\r\n        }\r\n        else {\r\n            channels[_DYN_PUSH /* @min:%2epush */](ext);\r\n        }\r\n    });\r\n    return _a = {},\r\n        _a[STR_CORE /* @min:core */] = coreExtensions,\r\n        _a[STR_CHANNELS /* @min:channels */] = channels,\r\n        _a;\r\n}\r\nfunction _isPluginPresent(thePlugin, plugins) {\r\n    var exists = false;\r\n    arrForEach(plugins, function (plugin) {\r\n        if (plugin === thePlugin) {\r\n            exists = true;\r\n            return -1;\r\n        }\r\n    });\r\n    return exists;\r\n}\r\nfunction _deepMergeConfig(details, target, newValues, merge) {\r\n    // Lets assign the new values to the existing config\r\n    if (newValues) {\r\n        objForEachKey(newValues, function (key, value) {\r\n            if (merge) {\r\n                if (isPlainObject(value) && isPlainObject(target[key])) {\r\n                    // The target is an object and it has a value\r\n                    _deepMergeConfig(details, target[key], value, merge);\r\n                }\r\n            }\r\n            if (merge && isPlainObject(value) && isPlainObject(target[key])) {\r\n                // The target is an object and it has a value\r\n                _deepMergeConfig(details, target[key], value, merge);\r\n            }\r\n            else {\r\n                // Just Assign (replace) and/or make the property dynamic\r\n                details.set(target, key, value);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction _findWatcher(listeners, newWatcher) {\r\n    var theListener = null;\r\n    var idx = -1;\r\n    arrForEach(listeners, function (listener, lp) {\r\n        if (listener.w === newWatcher) {\r\n            theListener = listener;\r\n            idx = lp;\r\n            return -1;\r\n        }\r\n    });\r\n    return { i: idx, l: theListener };\r\n}\r\nfunction _addDelayedCfgListener(listeners, newWatcher) {\r\n    var theListener = _findWatcher(listeners, newWatcher).l;\r\n    if (!theListener) {\r\n        theListener = {\r\n            w: newWatcher,\r\n            rm: function () {\r\n                var fnd = _findWatcher(listeners, newWatcher);\r\n                if (fnd.i !== -1) {\r\n                    listeners[_DYN_SPLICE /* @min:%2esplice */](fnd.i, 1);\r\n                }\r\n            }\r\n        };\r\n        listeners[_DYN_PUSH /* @min:%2epush */](theListener);\r\n    }\r\n    return theListener;\r\n}\r\nfunction _registerDelayedCfgListener(config, listeners, logger) {\r\n    arrForEach(listeners, function (listener) {\r\n        var unloadHdl = onConfigChange(config, listener.w, logger);\r\n        delete listener.w; // Clear the listener reference so it will get garbage collected.\r\n        // replace the remove function\r\n        listener.rm = function () {\r\n            unloadHdl.rm();\r\n        };\r\n    });\r\n}\r\n// Moved this outside of the closure to reduce the retained memory footprint\r\nfunction _initDebugListener(configHandler, unloadContainer, notificationManager, debugListener) {\r\n    // Will get recalled if any referenced config values are changed\r\n    unloadContainer.add(configHandler[_DYN_WATCH /* @min:%2ewatch */](function (details) {\r\n        var disableDbgExt = details.cfg.disableDbgExt;\r\n        if (disableDbgExt === true && debugListener) {\r\n            // Remove any previously loaded debug listener\r\n            notificationManager[_DYN_REMOVE_NOTIFICATION_0 /* @min:%2eremoveNotificationListener */](debugListener);\r\n            debugListener = null;\r\n        }\r\n        if (notificationManager && !debugListener && disableDbgExt !== true) {\r\n            debugListener = getDebugListener(details.cfg);\r\n            notificationManager[_DYN_ADD_NOTIFICATION_LIS1 /* @min:%2eaddNotificationListener */](debugListener);\r\n        }\r\n    }));\r\n    return debugListener;\r\n}\r\n// Moved this outside of the closure to reduce the retained memory footprint\r\nfunction _createUnloadHook(unloadHook) {\r\n    return objDefine({\r\n        rm: function () {\r\n            unloadHook.rm();\r\n        }\r\n    }, \"toJSON\", { v: function () { return \"aicore::onCfgChange<\" + JSON.stringify(unloadHook) + \">\"; } });\r\n}\r\n/**\r\n * @group Classes\r\n * @group Entrypoint\r\n */\r\nvar AppInsightsCore = /** @class */ (function () {\r\n    function AppInsightsCore() {\r\n        // NOTE!: DON'T set default values here, instead set them in the _initDefaults() function as it is also called during teardown()\r\n        var _configHandler;\r\n        var _isInitialized;\r\n        var _logger;\r\n        var _eventQueue;\r\n        var _notificationManager;\r\n        var _perfManager;\r\n        var _cfgPerfManager;\r\n        var _cookieManager;\r\n        var _pluginChain;\r\n        var _configExtensions;\r\n        var _channelConfig;\r\n        var _channels;\r\n        var _isUnloading;\r\n        var _telemetryInitializerPlugin;\r\n        var _internalLogsEventName;\r\n        var _evtNamespace;\r\n        var _unloadHandlers;\r\n        var _hookContainer;\r\n        var _debugListener;\r\n        var _traceCtx;\r\n        var _instrumentationKey;\r\n        var _cfgListeners;\r\n        var _extensions;\r\n        var _pluginVersionStringArr;\r\n        var _pluginVersionString;\r\n        var _activeStatus; // to indicate if ikey or endpoint url promised is resolved or not\r\n        var _endpoint;\r\n        var _initInMemoMaxSize; // max event count limit during wait for init promises to be resolved\r\n        var _isStatusSet; // track if active status is set in case of init timeout and init promises setting the status twice\r\n        var _initTimer;\r\n        /**\r\n         * Internal log poller\r\n         */\r\n        var _internalLogPoller;\r\n        var _internalLogPollerListening;\r\n        var _forceStopInternalLogPoller;\r\n        dynamicProto(AppInsightsCore, this, function (_self) {\r\n            // Set the default values (also called during teardown)\r\n            _initDefaults();\r\n            // Special internal method to allow the unit tests and DebugPlugin to hook embedded objects\r\n            _self[\"_getDbgPlgTargets\"] = function () {\r\n                return [_extensions, _eventQueue];\r\n            };\r\n            _self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = function () { return _isInitialized; };\r\n            // since version 3.3.0\r\n            _self.activeStatus = function () { return _activeStatus; };\r\n            // since version 3.3.0\r\n            // internal\r\n            _self._setPendingStatus = function () {\r\n                _activeStatus = 3 /* eActiveStatus.PENDING */;\r\n            };\r\n            // Creating the self.initialize = ()\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (config, extensions, logger, notificationManager) {\r\n                if (_isUnloading) {\r\n                    throwError(strSdkUnloadingError);\r\n                }\r\n                // Make sure core is only initialized once\r\n                if (_self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]()) {\r\n                    throwError(\"Core cannot be initialized more than once\");\r\n                }\r\n                _configHandler = createDynamicConfig(config, defaultConfig, logger || _self[_DYN_LOGGER /* @min:%2elogger */], false);\r\n                // Re-assigning the local config property so we don't have any references to the passed value and it can be garbage collected\r\n                config = _configHandler.cfg;\r\n                // This will be \"re-run\" if the referenced config properties are changed\r\n                _addUnloadHook(_configHandler[_DYN_WATCH /* @min:%2ewatch */](function (details) {\r\n                    var rootCfg = details.cfg;\r\n                    var isPending = _activeStatus === 3 /* eActiveStatus.PENDING */;\r\n                    if (isPending) {\r\n                        // means waiting for previous promises to be resolved, won't apply new changes\r\n                        return;\r\n                    }\r\n                    _initInMemoMaxSize = rootCfg.initInMemoMaxSize || maxInitQueueSize;\r\n                    // app Insights core only handle ikey and endpointurl, aisku will handle cs\r\n                    var ikey = rootCfg[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */];\r\n                    var endpointUrl = rootCfg.endpointUrl; // do not need to validate endpoint url, if it is null, default one will be set by sender\r\n                    if (isNullOrUndefined(ikey)) {\r\n                        _instrumentationKey = null;\r\n                        // if new ikey is null, set status to be inactive, all new events will be saved in memory or dropped\r\n                        _activeStatus = ActiveStatus[_DYN__INACTIVE /* @min:%2eINACTIVE */];\r\n                        var msg = \"Please provide instrumentation key\";\r\n                        if (!_isInitialized) {\r\n                            // only throw error during initialization\r\n                            throwError(msg);\r\n                        }\r\n                        else {\r\n                            _throwInternal(_logger, 1 /* eLoggingSeverity.CRITICAL */, 100 /* _eInternalMessageId.InvalidInstrumentationKey */, msg);\r\n                            _releaseQueues();\r\n                        }\r\n                        return;\r\n                    }\r\n                    var promises = [];\r\n                    if (isPromiseLike(ikey)) {\r\n                        promises[_DYN_PUSH /* @min:%2epush */](ikey);\r\n                        _instrumentationKey = null; // reset current local ikey variable (otherwise it will always be the previous ikeys if timeout is called before promise cb)\r\n                    }\r\n                    else {\r\n                        // string\r\n                        _instrumentationKey = ikey;\r\n                    }\r\n                    if (isPromiseLike(endpointUrl)) {\r\n                        promises[_DYN_PUSH /* @min:%2epush */](endpointUrl);\r\n                        _endpoint = null; // reset current local endpoint variable (otherwise it will always be the previous urls if timeout is called before promise cb)\r\n                    }\r\n                    else {\r\n                        // string or null\r\n                        _endpoint = endpointUrl;\r\n                    }\r\n                    // at least have one promise\r\n                    if (promises[_DYN_LENGTH /* @min:%2elength */]) {\r\n                        // reset to false for new dynamic changes\r\n                        _isStatusSet = false;\r\n                        _activeStatus = 3 /* eActiveStatus.PENDING */;\r\n                        var initTimeout = isNotNullOrUndefined(rootCfg.initTimeOut) ? rootCfg.initTimeOut : maxInitTimeout; // rootCfg.initTimeOut could be 0\r\n                        var allPromises = createSyncAllSettledPromise(promises);\r\n                        _initTimer = scheduleTimeout(function () {\r\n                            // set _isStatusSet to true\r\n                            // set active status\r\n                            // release queues\r\n                            _initTimer = null;\r\n                            if (!_isStatusSet) {\r\n                                _setStatus();\r\n                            }\r\n                        }, initTimeout);\r\n                        doAwaitResponse(allPromises, function (response) {\r\n                            try {\r\n                                if (_isStatusSet) {\r\n                                    // promises take too long to resolve, ignore them\r\n                                    // active status should be set by timeout already\r\n                                    return;\r\n                                }\r\n                                if (!response.rejected) {\r\n                                    var values = response[_DYN_VALUE /* @min:%2evalue */];\r\n                                    if (values && values[_DYN_LENGTH /* @min:%2elength */]) {\r\n                                        // ikey\r\n                                        var ikeyRes = values[0];\r\n                                        _instrumentationKey = ikeyRes && ikeyRes[_DYN_VALUE /* @min:%2evalue */];\r\n                                        // endpoint\r\n                                        if (values[_DYN_LENGTH /* @min:%2elength */] > 1) {\r\n                                            var endpointRes = values[1];\r\n                                            _endpoint = endpointRes && endpointRes[_DYN_VALUE /* @min:%2evalue */];\r\n                                        }\r\n                                    }\r\n                                    if (_instrumentationKey) {\r\n                                        // if ikey is null, no need to trigger extra dynamic changes for extensions\r\n                                        config[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */] = _instrumentationKey; // set config.instrumentationKey for extensions to consume\r\n                                        config.endpointUrl = _endpoint; // set config.endpointUrl for extensions to consume\r\n                                    }\r\n                                }\r\n                                // set _isStatusSet to true\r\n                                // set active status\r\n                                // release queues\r\n                                _setStatus();\r\n                            }\r\n                            catch (e) {\r\n                                if (!_isStatusSet) {\r\n                                    _setStatus();\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        // means no promises\r\n                        _setStatus();\r\n                    }\r\n                    //_instrumentationKey = details.cfg.instrumentationKey;\r\n                    // Mark the extensionConfig and all first level keys as referenced\r\n                    // This is so that calls to getExtCfg() will always return the same object\r\n                    // Even when a user may \"re-assign\" the plugin properties (or it's unloaded/reloaded)\r\n                    var extCfg = details.ref(details.cfg, STR_EXTENSION_CONFIG);\r\n                    objForEachKey(extCfg, function (key) {\r\n                        details.ref(extCfg, key);\r\n                    });\r\n                }));\r\n                _notificationManager = notificationManager;\r\n                // Initialize the debug listener outside of the closure to reduce the retained memory footprint\r\n                _debugListener = _initDebugListener(_configHandler, _hookContainer, _notificationManager && _self[_DYN_GET_NOTIFY_MGR /* @min:%2egetNotifyMgr */](), _debugListener);\r\n                _initPerfManager();\r\n                _self[_DYN_LOGGER /* @min:%2elogger */] = logger;\r\n                var cfgExtensions = config[STR_EXTENSIONS /* @min:%2eextensions */];\r\n                // Extension validation\r\n                _configExtensions = [];\r\n                _configExtensions[_DYN_PUSH /* @min:%2epush */].apply(_configExtensions, __spreadArray(__spreadArray([], extensions, false), cfgExtensions, false));\r\n                _channelConfig = config[STR_CHANNELS /* @min:%2echannels */];\r\n                _initPluginChain(null);\r\n                if (!_channels || _channels[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n                    throwError(\"No \" + STR_CHANNELS + \" available\");\r\n                }\r\n                if (_channelConfig && _channelConfig[_DYN_LENGTH /* @min:%2elength */] > 1) {\r\n                    var teeController = _self[_DYN_GET_PLUGIN /* @min:%2egetPlugin */](\"TeeChannelController\");\r\n                    if (!teeController || !teeController.plugin) {\r\n                        _throwInternal(_logger, 1 /* eLoggingSeverity.CRITICAL */, 28 /* _eInternalMessageId.SenderNotInitialized */, \"TeeChannel required\");\r\n                    }\r\n                }\r\n                _registerDelayedCfgListener(config, _cfgListeners, _logger);\r\n                _cfgListeners = null;\r\n                _isInitialized = true;\r\n                if (_activeStatus === ActiveStatus.ACTIVE) {\r\n                    _releaseQueues();\r\n                }\r\n            };\r\n            _self.getChannels = function () {\r\n                var controls = [];\r\n                if (_channels) {\r\n                    arrForEach(_channels, function (channel) {\r\n                        controls[_DYN_PUSH /* @min:%2epush */](channel);\r\n                    });\r\n                }\r\n                return objFreeze(controls);\r\n            };\r\n            _self.track = function (telemetryItem) {\r\n                doPerf(_self[STR_GET_PERF_MGR /* @min:%2egetPerfMgr */](), function () { return \"AppInsightsCore:track\"; }, function () {\r\n                    if (telemetryItem === null) {\r\n                        _notifyInvalidEvent(telemetryItem);\r\n                        // throw error\r\n                        throwError(\"Invalid telemetry item\");\r\n                    }\r\n                    // do basic validation before sending it through the pipeline\r\n                    if (!telemetryItem[_DYN_NAME /* @min:%2ename */] && isNullOrUndefined(telemetryItem[_DYN_NAME /* @min:%2ename */])) {\r\n                        _notifyInvalidEvent(telemetryItem);\r\n                        throwError(\"telemetry name required\");\r\n                    }\r\n                    // setup default iKey if not passed in\r\n                    telemetryItem[_DYN_I_KEY /* @min:%2eiKey */] = telemetryItem[_DYN_I_KEY /* @min:%2eiKey */] || _instrumentationKey;\r\n                    // add default timestamp if not passed in\r\n                    telemetryItem[_DYN_TIME /* @min:%2etime */] = telemetryItem[_DYN_TIME /* @min:%2etime */] || toISOString(new Date());\r\n                    // Common Schema 4.0\r\n                    telemetryItem.ver = telemetryItem.ver || \"4.0\";\r\n                    if (!_isUnloading && _self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]() && _activeStatus === ActiveStatus.ACTIVE) {\r\n                        // Process the telemetry plugin chain\r\n                        _createTelCtx()[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](telemetryItem);\r\n                    }\r\n                    else if (_activeStatus !== ActiveStatus[_DYN__INACTIVE /* @min:%2eINACTIVE */]) {\r\n                        // Queue events until all extensions are initialized\r\n                        if (_eventQueue[_DYN_LENGTH /* @min:%2elength */] <= _initInMemoMaxSize) {\r\n                            // set limit, if full, stop adding new events\r\n                            _eventQueue[_DYN_PUSH /* @min:%2epush */](telemetryItem);\r\n                        }\r\n                    }\r\n                }, function () { return ({ item: telemetryItem }); }, !(telemetryItem.sync));\r\n            };\r\n            _self[_DYN_GET_PROCESS_TEL_CONT2 /* @min:%2egetProcessTelContext */] = _createTelCtx;\r\n            _self[_DYN_GET_NOTIFY_MGR /* @min:%2egetNotifyMgr */] = function () {\r\n                if (!_notificationManager) {\r\n                    _notificationManager = new NotificationManager(_configHandler.cfg);\r\n                    // For backward compatibility only\r\n                    _self[strNotificationManager] = _notificationManager;\r\n                }\r\n                return _notificationManager;\r\n            };\r\n            /**\r\n             * Adds a notification listener. The SDK calls methods on the listener when an appropriate notification is raised.\r\n             * The added plugins must raise notifications. If the plugins do not implement the notifications, then no methods will be\r\n             * called.\r\n             * @param listener - An INotificationListener object.\r\n             */\r\n            _self[_DYN_ADD_NOTIFICATION_LIS1 /* @min:%2eaddNotificationListener */] = function (listener) {\r\n                _self.getNotifyMgr()[_DYN_ADD_NOTIFICATION_LIS1 /* @min:%2eaddNotificationListener */](listener);\r\n            };\r\n            /**\r\n             * Removes all instances of the listener.\r\n             * @param listener - INotificationListener to remove.\r\n             */\r\n            _self[_DYN_REMOVE_NOTIFICATION_0 /* @min:%2eremoveNotificationListener */] = function (listener) {\r\n                if (_notificationManager) {\r\n                    _notificationManager[_DYN_REMOVE_NOTIFICATION_0 /* @min:%2eremoveNotificationListener */](listener);\r\n                }\r\n            };\r\n            _self.getCookieMgr = function () {\r\n                if (!_cookieManager) {\r\n                    _cookieManager = createCookieMgr(_configHandler.cfg, _self[_DYN_LOGGER /* @min:%2elogger */]);\r\n                }\r\n                return _cookieManager;\r\n            };\r\n            _self.setCookieMgr = function (cookieMgr) {\r\n                if (_cookieManager !== cookieMgr) {\r\n                    runTargetUnload(_cookieManager, false);\r\n                    _cookieManager = cookieMgr;\r\n                }\r\n            };\r\n            _self[STR_GET_PERF_MGR /* @min:%2egetPerfMgr */] = function () {\r\n                return _perfManager || _cfgPerfManager || getGblPerfMgr();\r\n            };\r\n            _self.setPerfMgr = function (perfMgr) {\r\n                _perfManager = perfMgr;\r\n            };\r\n            _self.eventCnt = function () {\r\n                return _eventQueue[_DYN_LENGTH /* @min:%2elength */];\r\n            };\r\n            _self.releaseQueue = function () {\r\n                if (_isInitialized && _eventQueue[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var eventQueue = _eventQueue;\r\n                    _eventQueue = [];\r\n                    if (_activeStatus === 2 /* eActiveStatus.ACTIVE */) {\r\n                        arrForEach(eventQueue, function (event) {\r\n                            event[_DYN_I_KEY /* @min:%2eiKey */] = event[_DYN_I_KEY /* @min:%2eiKey */] || _instrumentationKey;\r\n                            _createTelCtx()[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](event);\r\n                        });\r\n                    }\r\n                    else {\r\n                        // new one for msg ikey\r\n                        _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 20 /* _eInternalMessageId.FailedToSendQueuedTelemetry */, \"core init status is not active\");\r\n                    }\r\n                }\r\n            };\r\n            _self[_DYN_POLL_INTERNAL_LOGS /* @min:%2epollInternalLogs */] = function (eventName) {\r\n                _internalLogsEventName = eventName || null;\r\n                _forceStopInternalLogPoller = false;\r\n                _internalLogPoller && _internalLogPoller[_DYN_CANCEL /* @min:%2ecancel */]();\r\n                return _startLogPoller(true);\r\n            };\r\n            function _setStatus() {\r\n                _isStatusSet = true;\r\n                if (isNullOrUndefined(_instrumentationKey)) {\r\n                    _activeStatus = ActiveStatus[_DYN__INACTIVE /* @min:%2eINACTIVE */];\r\n                    _throwInternal(_logger, 1 /* eLoggingSeverity.CRITICAL */, 112 /* _eInternalMessageId.InitPromiseException */, \"ikey can't be resolved from promises\");\r\n                }\r\n                else {\r\n                    _activeStatus = ActiveStatus.ACTIVE;\r\n                }\r\n                _releaseQueues();\r\n            }\r\n            function _releaseQueues() {\r\n                if (_isInitialized) {\r\n                    _self.releaseQueue();\r\n                    _self[_DYN_POLL_INTERNAL_LOGS /* @min:%2epollInternalLogs */]();\r\n                }\r\n            }\r\n            function _startLogPoller(alwaysStart) {\r\n                if ((!_internalLogPoller || !_internalLogPoller[_DYN_ENABLED /* @min:%2eenabled */]) && !_forceStopInternalLogPoller) {\r\n                    var shouldStart = alwaysStart || (_logger && _logger.queue[_DYN_LENGTH /* @min:%2elength */] > 0);\r\n                    if (shouldStart) {\r\n                        if (!_internalLogPollerListening) {\r\n                            _internalLogPollerListening = true;\r\n                            // listen for any configuration changes so that changes to the\r\n                            // interval will cause the timer to be re-initialized\r\n                            _addUnloadHook(_configHandler[_DYN_WATCH /* @min:%2ewatch */](function (details) {\r\n                                var interval = details.cfg.diagnosticLogInterval;\r\n                                if (!interval || !(interval > 0)) {\r\n                                    interval = 10000;\r\n                                }\r\n                                var isRunning = false;\r\n                                if (_internalLogPoller) {\r\n                                    // It was already created so remember it's running and cancel\r\n                                    isRunning = _internalLogPoller[_DYN_ENABLED /* @min:%2eenabled */];\r\n                                    _internalLogPoller[_DYN_CANCEL /* @min:%2ecancel */]();\r\n                                }\r\n                                // Create / reconfigure\r\n                                _internalLogPoller = createTimeout(_flushInternalLogs, interval);\r\n                                _internalLogPoller.unref();\r\n                                // Restart if previously running\r\n                                _internalLogPoller[_DYN_ENABLED /* @min:%2eenabled */] = isRunning;\r\n                            }));\r\n                        }\r\n                        _internalLogPoller[_DYN_ENABLED /* @min:%2eenabled */] = true;\r\n                    }\r\n                }\r\n                return _internalLogPoller;\r\n            }\r\n            _self[_DYN_STOP_POLLING_INTERNA3 /* @min:%2estopPollingInternalLogs */] = function () {\r\n                _forceStopInternalLogPoller = true;\r\n                _internalLogPoller && _internalLogPoller[_DYN_CANCEL /* @min:%2ecancel */]();\r\n                _flushInternalLogs();\r\n            };\r\n            // Add addTelemetryInitializer\r\n            proxyFunctions(_self, function () { return _telemetryInitializerPlugin; }, [\"addTelemetryInitializer\"]);\r\n            _self[_DYN_UNLOAD /* @min:%2eunload */] = function (isAsync, unloadComplete, cbTimeout) {\r\n                var _a;\r\n                if (isAsync === void 0) { isAsync = true; }\r\n                if (!_isInitialized) {\r\n                    // The SDK is not initialized\r\n                    throwError(strSdkNotInitialized);\r\n                }\r\n                // Check if the SDK still unloading so throw\r\n                if (_isUnloading) {\r\n                    // The SDK is already unloading\r\n                    throwError(strSdkUnloadingError);\r\n                }\r\n                var unloadState = (_a = {\r\n                        reason: 50 /* TelemetryUnloadReason.SdkUnload */\r\n                    },\r\n                    _a[_DYN_IS_ASYNC /* @min:isAsync */] = isAsync,\r\n                    _a.flushComplete = false,\r\n                    _a);\r\n                var result;\r\n                if (isAsync && !unloadComplete) {\r\n                    result = createPromise(function (resolve) {\r\n                        // Set the callback to the promise resolve callback\r\n                        unloadComplete = resolve;\r\n                    });\r\n                }\r\n                var processUnloadCtx = createProcessTelemetryUnloadContext(_getPluginChain(), _self);\r\n                processUnloadCtx[_DYN_ON_COMPLETE /* @min:%2eonComplete */](function () {\r\n                    _hookContainer.run(_self[_DYN_LOGGER /* @min:%2elogger */]);\r\n                    // Run any \"unload\" functions for the _cookieManager, _notificationManager and _logger\r\n                    doUnloadAll([_cookieManager, _notificationManager, _logger], isAsync, function () {\r\n                        _initDefaults();\r\n                        unloadComplete && unloadComplete(unloadState);\r\n                    });\r\n                }, _self);\r\n                function _doUnload(flushComplete) {\r\n                    unloadState.flushComplete = flushComplete;\r\n                    _isUnloading = true;\r\n                    // Run all of the unload handlers first (before unloading the plugins)\r\n                    _unloadHandlers.run(processUnloadCtx, unloadState);\r\n                    // Stop polling the internal logs\r\n                    _self[_DYN_STOP_POLLING_INTERNA3 /* @min:%2estopPollingInternalLogs */]();\r\n                    // Start unloading the components, from this point onwards the SDK should be considered to be in an unstable state\r\n                    processUnloadCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](unloadState);\r\n                }\r\n                _flushInternalLogs();\r\n                if (!_flushChannels(isAsync, _doUnload, 6 /* SendRequestReason.SdkUnload */, cbTimeout)) {\r\n                    _doUnload(false);\r\n                }\r\n                return result;\r\n            };\r\n            _self[_DYN_GET_PLUGIN /* @min:%2egetPlugin */] = _getPlugin;\r\n            _self.addPlugin = function (plugin, replaceExisting, isAsync, addCb) {\r\n                if (!plugin) {\r\n                    addCb && addCb(false);\r\n                    _logOrThrowError(strValidationError);\r\n                    return;\r\n                }\r\n                var existingPlugin = _getPlugin(plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */]);\r\n                if (existingPlugin && !replaceExisting) {\r\n                    addCb && addCb(false);\r\n                    _logOrThrowError(\"Plugin [\" + plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] + \"] is already loaded!\");\r\n                    return;\r\n                }\r\n                var updateState = {\r\n                    reason: 16 /* TelemetryUpdateReason.PluginAdded */\r\n                };\r\n                function _addPlugin(removed) {\r\n                    _configExtensions[_DYN_PUSH /* @min:%2epush */](plugin);\r\n                    updateState.added = [plugin];\r\n                    // Re-Initialize the plugin chain\r\n                    _initPluginChain(updateState);\r\n                    addCb && addCb(true);\r\n                }\r\n                if (existingPlugin) {\r\n                    var removedPlugins_1 = [existingPlugin.plugin];\r\n                    var unloadState = {\r\n                        reason: 2 /* TelemetryUnloadReason.PluginReplace */,\r\n                        isAsync: !!isAsync\r\n                    };\r\n                    _removePlugins(removedPlugins_1, unloadState, function (removed) {\r\n                        if (!removed) {\r\n                            // Previous plugin was successfully removed or was not installed\r\n                            addCb && addCb(false);\r\n                        }\r\n                        else {\r\n                            updateState.removed = removedPlugins_1;\r\n                            updateState.reason |= 32 /* TelemetryUpdateReason.PluginRemoved */;\r\n                            _addPlugin(true);\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    _addPlugin(false);\r\n                }\r\n            };\r\n            _self.updateCfg = function (newConfig, mergeExisting) {\r\n                if (mergeExisting === void 0) { mergeExisting = true; }\r\n                var updateState;\r\n                if (_self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]()) {\r\n                    updateState = {\r\n                        reason: 1 /* TelemetryUpdateReason.ConfigurationChanged */,\r\n                        cfg: _configHandler.cfg,\r\n                        oldCfg: deepExtend({}, _configHandler.cfg),\r\n                        newConfig: deepExtend({}, newConfig),\r\n                        merge: mergeExisting\r\n                    };\r\n                    newConfig = updateState.newConfig;\r\n                    var cfg = _configHandler.cfg;\r\n                    // replace the immutable (if initialized) values\r\n                    // We don't currently allow updating the extensions and channels via the update config\r\n                    // So overwriting any user provided values to reuse the existing values\r\n                    newConfig[STR_EXTENSIONS /* @min:%2eextensions */] = cfg[STR_EXTENSIONS /* @min:%2eextensions */];\r\n                    newConfig[STR_CHANNELS /* @min:%2echannels */] = cfg[STR_CHANNELS /* @min:%2echannels */];\r\n                }\r\n                // Explicitly blocking any previous config watchers so that they don't get called because\r\n                // of this bulk update (Probably not necessary)\r\n                _configHandler._block(function (details) {\r\n                    // Lets assign the new values to the existing config either overwriting or re-assigning\r\n                    var theConfig = details.cfg;\r\n                    _deepMergeConfig(details, theConfig, newConfig, mergeExisting);\r\n                    if (!mergeExisting) {\r\n                        // Remove (unassign) the values \"missing\" from the newConfig and also not in the default config\r\n                        objForEachKey(theConfig, function (key) {\r\n                            if (!objHasOwn(newConfig, key)) {\r\n                                // Set the value to undefined\r\n                                details.set(theConfig, key, UNDEFINED_VALUE);\r\n                            }\r\n                        });\r\n                    }\r\n                    // Apply defaults to the new config\r\n                    details[_DYN_SET_DF /* @min:%2esetDf */](theConfig, defaultConfig);\r\n                }, true);\r\n                // Now execute all of the listeners (synchronously) so they update their values immediately\r\n                _configHandler[_DYN_NOTIFY /* @min:%2enotify */]();\r\n                if (updateState) {\r\n                    _doUpdate(updateState);\r\n                }\r\n            };\r\n            _self.evtNamespace = function () {\r\n                return _evtNamespace;\r\n            };\r\n            _self.flush = _flushChannels;\r\n            _self.getTraceCtx = function (createNew) {\r\n                if (!_traceCtx) {\r\n                    _traceCtx = createDistributedTraceContext();\r\n                }\r\n                return _traceCtx;\r\n            };\r\n            _self.setTraceCtx = function (traceCtx) {\r\n                _traceCtx = traceCtx || null;\r\n            };\r\n            _self.addUnloadHook = _addUnloadHook;\r\n            // Create the addUnloadCb\r\n            proxyFunctionAs(_self, \"addUnloadCb\", function () { return _unloadHandlers; }, \"add\");\r\n            _self.onCfgChange = function (handler) {\r\n                var unloadHook;\r\n                if (!_isInitialized) {\r\n                    unloadHook = _addDelayedCfgListener(_cfgListeners, handler);\r\n                }\r\n                else {\r\n                    unloadHook = onConfigChange(_configHandler.cfg, handler, _self[_DYN_LOGGER /* @min:%2elogger */]);\r\n                }\r\n                return _createUnloadHook(unloadHook);\r\n            };\r\n            _self.getWParam = function () {\r\n                return (hasDocument() || !!_configHandler.cfg.enableWParam) ? 0 : -1;\r\n            };\r\n            function _setPluginVersions() {\r\n                var thePlugins = {};\r\n                _pluginVersionStringArr = [];\r\n                var _addPluginVersions = function (plugins) {\r\n                    if (plugins) {\r\n                        arrForEach(plugins, function (plugin) {\r\n                            if (plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] && plugin[_DYN_VERSION /* @min:%2eversion */] && !thePlugins[plugin.identifier]) {\r\n                                var ver = plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] + \"=\" + plugin[_DYN_VERSION /* @min:%2eversion */];\r\n                                _pluginVersionStringArr[_DYN_PUSH /* @min:%2epush */](ver);\r\n                                thePlugins[plugin.identifier] = plugin;\r\n                            }\r\n                        });\r\n                    }\r\n                };\r\n                _addPluginVersions(_channels);\r\n                if (_channelConfig) {\r\n                    arrForEach(_channelConfig, function (channels) {\r\n                        _addPluginVersions(channels);\r\n                    });\r\n                }\r\n                _addPluginVersions(_configExtensions);\r\n            }\r\n            function _initDefaults() {\r\n                _isInitialized = false;\r\n                // Use a default logger so initialization errors are not dropped on the floor with full logging\r\n                _configHandler = createDynamicConfig({}, defaultConfig, _self[_DYN_LOGGER /* @min:%2elogger */]);\r\n                // Set the logging level to critical so that any critical initialization failures are displayed on the console\r\n                _configHandler.cfg[_DYN_LOGGING_LEVEL_CONSOL4 /* @min:%2eloggingLevelConsole */] = 1 /* eLoggingSeverity.CRITICAL */;\r\n                // Define _self.config\r\n                objDefine(_self, \"config\", {\r\n                    g: function () { return _configHandler.cfg; },\r\n                    s: function (newValue) {\r\n                        _self.updateCfg(newValue, false);\r\n                    }\r\n                });\r\n                objDefine(_self, \"pluginVersionStringArr\", {\r\n                    g: function () {\r\n                        if (!_pluginVersionStringArr) {\r\n                            _setPluginVersions();\r\n                        }\r\n                        return _pluginVersionStringArr;\r\n                    }\r\n                });\r\n                objDefine(_self, \"pluginVersionString\", {\r\n                    g: function () {\r\n                        if (!_pluginVersionString) {\r\n                            if (!_pluginVersionStringArr) {\r\n                                _setPluginVersions();\r\n                            }\r\n                            _pluginVersionString = _pluginVersionStringArr.join(\";\");\r\n                        }\r\n                        return _pluginVersionString || STR_EMPTY;\r\n                    }\r\n                });\r\n                objDefine(_self, \"logger\", {\r\n                    g: function () {\r\n                        if (!_logger) {\r\n                            _logger = new DiagnosticLogger(_configHandler.cfg);\r\n                            _configHandler[_DYN_LOGGER /* @min:%2elogger */] = _logger;\r\n                        }\r\n                        return _logger;\r\n                    },\r\n                    s: function (newLogger) {\r\n                        _configHandler[_DYN_LOGGER /* @min:%2elogger */] = newLogger;\r\n                        if (_logger !== newLogger) {\r\n                            runTargetUnload(_logger, false);\r\n                            _logger = newLogger;\r\n                        }\r\n                    }\r\n                });\r\n                _self[_DYN_LOGGER /* @min:%2elogger */] = new DiagnosticLogger(_configHandler.cfg);\r\n                _extensions = [];\r\n                var cfgExtensions = _self.config[STR_EXTENSIONS /* @min:%2eextensions */] || [];\r\n                cfgExtensions.splice(0, cfgExtensions[_DYN_LENGTH /* @min:%2elength */]);\r\n                arrAppend(cfgExtensions, _extensions);\r\n                _telemetryInitializerPlugin = new TelemetryInitializerPlugin();\r\n                _eventQueue = [];\r\n                runTargetUnload(_notificationManager, false);\r\n                _notificationManager = null;\r\n                _perfManager = null;\r\n                _cfgPerfManager = null;\r\n                runTargetUnload(_cookieManager, false);\r\n                _cookieManager = null;\r\n                _pluginChain = null;\r\n                _configExtensions = [];\r\n                _channelConfig = null;\r\n                _channels = null;\r\n                _isUnloading = false;\r\n                _internalLogsEventName = null;\r\n                _evtNamespace = createUniqueNamespace(\"AIBaseCore\", true);\r\n                _unloadHandlers = createUnloadHandlerContainer();\r\n                _traceCtx = null;\r\n                _instrumentationKey = null;\r\n                _hookContainer = createUnloadHookContainer();\r\n                _cfgListeners = [];\r\n                _pluginVersionString = null;\r\n                _pluginVersionStringArr = null;\r\n                _forceStopInternalLogPoller = false;\r\n                _internalLogPoller = null;\r\n                _internalLogPollerListening = false;\r\n                _activeStatus = 0 /* eActiveStatus.NONE */; // default is None\r\n                _endpoint = null;\r\n                _initInMemoMaxSize = null;\r\n                _isStatusSet = false;\r\n                _initTimer = null;\r\n            }\r\n            function _createTelCtx() {\r\n                var theCtx = createProcessTelemetryContext(_getPluginChain(), _configHandler.cfg, _self);\r\n                theCtx[_DYN_ON_COMPLETE /* @min:%2eonComplete */](_startLogPoller);\r\n                return theCtx;\r\n            }\r\n            // Initialize or Re-initialize the plugins\r\n            function _initPluginChain(updateState) {\r\n                // Extension validation\r\n                var theExtensions = _validateExtensions(_self[_DYN_LOGGER /* @min:%2elogger */], ChannelControllerPriority, _configExtensions);\r\n                _pluginChain = null;\r\n                _pluginVersionString = null;\r\n                _pluginVersionStringArr = null;\r\n                // Get the primary channel queue and include as part of the normal extensions\r\n                _channels = (_channelConfig || [])[0] || [];\r\n                // Add any channels provided in the extensions and sort them\r\n                _channels = sortPlugins(arrAppend(_channels, theExtensions[STR_CHANNELS /* @min:%2echannels */]));\r\n                // Create an array of all extensions, including the _channels\r\n                var allExtensions = arrAppend(sortPlugins(theExtensions[STR_CORE /* @min:%2ecore */]), _channels);\r\n                // Required to allow plugins to call core.getPlugin() during their own initialization\r\n                _extensions = objFreeze(allExtensions);\r\n                // This has a side effect of adding the extensions passed during initialization\r\n                // into the config.extensions, so you can see all of the extensions loaded.\r\n                // This will also get updated by the addPlugin() and remove plugin code.\r\n                var cfgExtensions = _self.config[STR_EXTENSIONS /* @min:%2eextensions */] || [];\r\n                cfgExtensions.splice(0, cfgExtensions[_DYN_LENGTH /* @min:%2elength */]);\r\n                arrAppend(cfgExtensions, _extensions);\r\n                var rootCtx = _createTelCtx();\r\n                // Initializing the channels first\r\n                if (_channels && _channels[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    initializePlugins(rootCtx[_DYN_CREATE_NEW /* @min:%2ecreateNew */](_channels), allExtensions);\r\n                }\r\n                // Now initialize the normal extensions (explicitly not including the _channels as this can cause duplicate initialization)\r\n                initializePlugins(rootCtx, allExtensions);\r\n                if (updateState) {\r\n                    _doUpdate(updateState);\r\n                }\r\n            }\r\n            function _getPlugin(pluginIdentifier) {\r\n                var theExt = null;\r\n                var thePlugin = null;\r\n                var channelHosts = [];\r\n                arrForEach(_extensions, function (ext) {\r\n                    if (ext[_DYN_IDENTIFIER /* @min:%2eidentifier */] === pluginIdentifier && ext !== _telemetryInitializerPlugin) {\r\n                        thePlugin = ext;\r\n                        return -1;\r\n                    }\r\n                    if (ext.getChannel) {\r\n                        channelHosts[_DYN_PUSH /* @min:%2epush */](ext);\r\n                    }\r\n                });\r\n                if (!thePlugin && channelHosts[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    arrForEach(channelHosts, function (host) {\r\n                        thePlugin = host.getChannel(pluginIdentifier);\r\n                        if (!thePlugin) {\r\n                            return -1;\r\n                        }\r\n                    });\r\n                }\r\n                if (thePlugin) {\r\n                    theExt = {\r\n                        plugin: thePlugin,\r\n                        setEnabled: function (enabled) {\r\n                            _getPluginState(thePlugin)[STR_DISABLED] = !enabled;\r\n                        },\r\n                        isEnabled: function () {\r\n                            var pluginState = _getPluginState(thePlugin);\r\n                            return !pluginState[_DYN_TEARDOWN /* @min:%2eteardown */] && !pluginState[STR_DISABLED];\r\n                        },\r\n                        remove: function (isAsync, removeCb) {\r\n                            var _a;\r\n                            if (isAsync === void 0) { isAsync = true; }\r\n                            var pluginsToRemove = [thePlugin];\r\n                            var unloadState = (_a = {\r\n                                    reason: 1 /* TelemetryUnloadReason.PluginUnload */\r\n                                },\r\n                                _a[_DYN_IS_ASYNC /* @min:isAsync */] = isAsync,\r\n                                _a);\r\n                            _removePlugins(pluginsToRemove, unloadState, function (removed) {\r\n                                if (removed) {\r\n                                    // Re-Initialize the plugin chain\r\n                                    _initPluginChain({\r\n                                        reason: 32 /* TelemetryUpdateReason.PluginRemoved */,\r\n                                        removed: pluginsToRemove\r\n                                    });\r\n                                }\r\n                                removeCb && removeCb(removed);\r\n                            });\r\n                        }\r\n                    };\r\n                }\r\n                return theExt;\r\n            }\r\n            function _getPluginChain() {\r\n                if (!_pluginChain) {\r\n                    // copy the collection of extensions\r\n                    var extensions = (_extensions || []).slice();\r\n                    // During add / remove this may get called again, so don't read if already present\r\n                    if (arrIndexOf(extensions, _telemetryInitializerPlugin) === -1) {\r\n                        extensions[_DYN_PUSH /* @min:%2epush */](_telemetryInitializerPlugin);\r\n                    }\r\n                    _pluginChain = createTelemetryProxyChain(sortPlugins(extensions), _configHandler.cfg, _self);\r\n                }\r\n                return _pluginChain;\r\n            }\r\n            function _removePlugins(thePlugins, unloadState, removeComplete) {\r\n                if (thePlugins && thePlugins[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var unloadChain = createTelemetryProxyChain(thePlugins, _configHandler.cfg, _self);\r\n                    var unloadCtx = createProcessTelemetryUnloadContext(unloadChain, _self);\r\n                    unloadCtx[_DYN_ON_COMPLETE /* @min:%2eonComplete */](function () {\r\n                        var removed = false;\r\n                        // Remove the listed config extensions\r\n                        var newConfigExtensions = [];\r\n                        arrForEach(_configExtensions, function (plugin, idx) {\r\n                            if (!_isPluginPresent(plugin, thePlugins)) {\r\n                                newConfigExtensions[_DYN_PUSH /* @min:%2epush */](plugin);\r\n                            }\r\n                            else {\r\n                                removed = true;\r\n                            }\r\n                        });\r\n                        _configExtensions = newConfigExtensions;\r\n                        _pluginVersionString = null;\r\n                        _pluginVersionStringArr = null;\r\n                        // Re-Create the channel config\r\n                        var newChannelConfig = [];\r\n                        if (_channelConfig) {\r\n                            arrForEach(_channelConfig, function (queue, idx) {\r\n                                var newQueue = [];\r\n                                arrForEach(queue, function (channel) {\r\n                                    if (!_isPluginPresent(channel, thePlugins)) {\r\n                                        newQueue[_DYN_PUSH /* @min:%2epush */](channel);\r\n                                    }\r\n                                    else {\r\n                                        removed = true;\r\n                                    }\r\n                                });\r\n                                newChannelConfig[_DYN_PUSH /* @min:%2epush */](newQueue);\r\n                            });\r\n                            _channelConfig = newChannelConfig;\r\n                        }\r\n                        removeComplete && removeComplete(removed);\r\n                        _startLogPoller();\r\n                    });\r\n                    unloadCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](unloadState);\r\n                }\r\n                else {\r\n                    removeComplete(false);\r\n                }\r\n            }\r\n            function _flushInternalLogs() {\r\n                if (_logger && _logger.queue) {\r\n                    var queue = _logger.queue.slice(0);\r\n                    _logger.queue[_DYN_LENGTH /* @min:%2elength */] = 0;\r\n                    arrForEach(queue, function (logMessage) {\r\n                        var _a;\r\n                        var item = (_a = {},\r\n                            _a[_DYN_NAME /* @min:name */] = _internalLogsEventName ? _internalLogsEventName : \"InternalMessageId: \" + logMessage[_DYN_MESSAGE_ID /* @min:%2emessageId */],\r\n                            _a[_DYN_I_KEY /* @min:iKey */] = _instrumentationKey,\r\n                            _a[_DYN_TIME /* @min:time */] = toISOString(new Date()),\r\n                            _a.baseType = _InternalLogMessage.dataType,\r\n                            _a.baseData = { message: logMessage[_DYN_MESSAGE /* @min:%2emessage */] },\r\n                            _a);\r\n                        _self.track(item);\r\n                    });\r\n                }\r\n            }\r\n            function _flushChannels(isAsync, callBack, sendReason, cbTimeout) {\r\n                // Setting waiting to one so that we don't call the callBack until we finish iterating\r\n                var waiting = 1;\r\n                var doneIterating = false;\r\n                var cbTimer = null;\r\n                cbTimeout = cbTimeout || 5000;\r\n                function doCallback() {\r\n                    waiting--;\r\n                    if (doneIterating && waiting === 0) {\r\n                        cbTimer && cbTimer[_DYN_CANCEL /* @min:%2ecancel */]();\r\n                        cbTimer = null;\r\n                        callBack && callBack(doneIterating);\r\n                        callBack = null;\r\n                    }\r\n                }\r\n                if (_channels && _channels[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var flushCtx = _createTelCtx()[_DYN_CREATE_NEW /* @min:%2ecreateNew */](_channels);\r\n                    flushCtx.iterate(function (plugin) {\r\n                        if (plugin.flush) {\r\n                            waiting++;\r\n                            var handled_1 = false;\r\n                            // Not all channels will call this callback for every scenario\r\n                            if (!plugin.flush(isAsync, function () {\r\n                                handled_1 = true;\r\n                                doCallback();\r\n                            }, sendReason)) {\r\n                                if (!handled_1) {\r\n                                    // If any channel doesn't return true and it didn't call the callback, then we should assume that the callback\r\n                                    // will never be called, so use a timeout to allow the channel(s) some time to \"finish\" before triggering any\r\n                                    // followup function (such as unloading)\r\n                                    if (isAsync && cbTimer == null) {\r\n                                        cbTimer = scheduleTimeout(function () {\r\n                                            cbTimer = null;\r\n                                            doCallback();\r\n                                        }, cbTimeout);\r\n                                    }\r\n                                    else {\r\n                                        doCallback();\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                doneIterating = true;\r\n                doCallback();\r\n                return true;\r\n            }\r\n            function _initPerfManager() {\r\n                // Save the previous config based performance manager creator to avoid creating new perf manager instances if unchanged\r\n                var prevCfgPerfMgr;\r\n                // Will get recalled if any referenced config values are changed\r\n                _addUnloadHook(_configHandler[_DYN_WATCH /* @min:%2ewatch */](function (details) {\r\n                    var enablePerfMgr = details.cfg.enablePerfMgr;\r\n                    if (enablePerfMgr) {\r\n                        var createPerfMgr = details.cfg[STR_CREATE_PERF_MGR /* @min:%2ecreatePerfMgr */];\r\n                        if (prevCfgPerfMgr !== createPerfMgr) {\r\n                            if (!createPerfMgr) {\r\n                                createPerfMgr = _createPerfManager;\r\n                            }\r\n                            // Set the performance manager creation function if not defined\r\n                            getSetValue(details.cfg, STR_CREATE_PERF_MGR, createPerfMgr);\r\n                            prevCfgPerfMgr = createPerfMgr;\r\n                            // Remove any existing config based performance manager\r\n                            _cfgPerfManager = null;\r\n                        }\r\n                        // Only create the performance manager if it's not already created or manually set\r\n                        if (!_perfManager && !_cfgPerfManager && isFunction(createPerfMgr)) {\r\n                            // Create a new config based performance manager\r\n                            _cfgPerfManager = createPerfMgr(_self, _self[_DYN_GET_NOTIFY_MGR /* @min:%2egetNotifyMgr */]());\r\n                        }\r\n                    }\r\n                    else {\r\n                        // Remove any existing config based performance manager\r\n                        _cfgPerfManager = null;\r\n                        // Clear the previous cached value so it can be GC'd\r\n                        prevCfgPerfMgr = null;\r\n                    }\r\n                }));\r\n            }\r\n            function _doUpdate(updateState) {\r\n                var updateCtx = createProcessTelemetryUpdateContext(_getPluginChain(), _self);\r\n                updateCtx[_DYN_ON_COMPLETE /* @min:%2eonComplete */](_startLogPoller);\r\n                if (!_self._updateHook || _self._updateHook(updateCtx, updateState) !== true) {\r\n                    updateCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](updateState);\r\n                }\r\n            }\r\n            function _logOrThrowError(message) {\r\n                var logger = _self[_DYN_LOGGER /* @min:%2elogger */];\r\n                if (logger) {\r\n                    // there should always be a logger\r\n                    _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, message);\r\n                    _startLogPoller();\r\n                }\r\n                else {\r\n                    throwError(message);\r\n                }\r\n            }\r\n            function _notifyInvalidEvent(telemetryItem) {\r\n                var manager = _self[_DYN_GET_NOTIFY_MGR /* @min:%2egetNotifyMgr */]();\r\n                if (manager) {\r\n                    manager[STR_EVENTS_DISCARDED /* @min:%2eeventsDiscarded */]([telemetryItem], 2 /* eEventsDiscardedReason.InvalidEvent */);\r\n                }\r\n            }\r\n            function _addUnloadHook(hooks) {\r\n                _hookContainer.add(hooks);\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for AppInsightsCore.prototype.initialize.\r\n// Removed Stub for AppInsightsCore.prototype.getChannels.\r\n// Removed Stub for AppInsightsCore.prototype.track.\r\n// Removed Stub for AppInsightsCore.prototype.getProcessTelContext.\r\n// Removed Stub for AppInsightsCore.prototype.getNotifyMgr.\r\n// Removed Stub for AppInsightsCore.prototype.addNotificationListener.\r\n// Removed Stub for AppInsightsCore.prototype.removeNotificationListener.\r\n// Removed Stub for AppInsightsCore.prototype.getCookieMgr.\r\n// Removed Stub for AppInsightsCore.prototype.setCookieMgr.\r\n// Removed Stub for AppInsightsCore.prototype.getPerfMgr.\r\n// Removed Stub for AppInsightsCore.prototype.setPerfMgr.\r\n// Removed Stub for AppInsightsCore.prototype.eventCnt.\r\n// Removed Stub for AppInsightsCore.prototype.pollInternalLogs.\r\n// Removed Stub for AppInsightsCore.prototype.stopPollingInternalLogs.\r\n// Removed Stub for AppInsightsCore.prototype.addTelemetryInitializer.\r\n// Removed Stub for AppInsightsCore.prototype.unload.\r\n// Removed Stub for AppInsightsCore.prototype.getPlugin.\r\n// Removed Stub for AppInsightsCore.prototype.addPlugin.\r\n// Removed Stub for AppInsightsCore.prototype.updateCfg.\r\n// Removed Stub for AppInsightsCore.prototype.evtNamespace.\r\n// Removed Stub for AppInsightsCore.prototype.addUnloadCb.\r\n// Removed Stub for AppInsightsCore.prototype.flush.\r\n// Removed Stub for AppInsightsCore.prototype.getTraceCtx.\r\n// Removed Stub for AppInsightsCore.prototype.setTraceCtx.\r\n// Removed Stub for AppInsightsCore.prototype.addUnloadHook.\r\n// Removed Stub for AppInsightsCore.prototype.onCfgChange.\r\n// Removed Stub for AppInsightsCore.prototype.activeStatus.\r\n// Removed Stub for AppInsightsCore.prototype._setPendingStatus.\r\n// Removed Stub for AppInsightsCore.prototype.releaseQueue.\r\n// Removed Stub for AppInsightsCore.prototype._updateHook.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    AppInsightsCore.__ieDyn=1;\n\n    return AppInsightsCore;\r\n}());\r\nexport { AppInsightsCore };\r\n//# sourceMappingURL=AppInsightsCore.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n// \r\n// \r\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { arrAppend, arrForEach, dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_APPLY, _DYN_DIAG_LOG, _DYN_LENGTH, _DYN_PROCESS_NEXT, _DYN_SPLICE, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { BaseTelemetryPlugin } from \"./BaseTelemetryPlugin\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nimport { getExceptionName } from \"./HelperFuncs\";\r\nimport { STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nfunction _addInitializer(_initializers, id, telemetryInitializer) {\r\n    var theInitializer = {\r\n        id: id,\r\n        fn: telemetryInitializer\r\n    };\r\n    arrAppend(_initializers, theInitializer);\r\n    var handler = {\r\n        remove: function () {\r\n            arrForEach(_initializers, function (initializer, idx) {\r\n                if (initializer.id === theInitializer.id) {\r\n                    _initializers[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\r\n                    return -1;\r\n                }\r\n            });\r\n        }\r\n    };\r\n    return handler;\r\n}\r\nfunction _runInitializers(_initializers, item, logger) {\r\n    var doNotSendItem = false;\r\n    var telemetryInitializersCount = _initializers[_DYN_LENGTH /* @min:%2elength */];\r\n    for (var i = 0; i < telemetryInitializersCount; ++i) {\r\n        var telemetryInitializer = _initializers[i];\r\n        if (telemetryInitializer) {\r\n            try {\r\n                if (telemetryInitializer.fn[_DYN_APPLY /* @min:%2eapply */](null, [item]) === false) {\r\n                    doNotSendItem = true;\r\n                    break;\r\n                }\r\n            }\r\n            catch (e) {\r\n                // log error but dont stop executing rest of the telemetry initializers\r\n                // doNotSendItem = true;\r\n                _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 64 /* _eInternalMessageId.TelemetryInitializerFailed */, \"Telemetry initializer failed: \" + getExceptionName(e), { exception: dumpObj(e) }, true);\r\n            }\r\n        }\r\n    }\r\n    return !doNotSendItem;\r\n}\r\nvar TelemetryInitializerPlugin = /** @class */ (function (_super) {\r\n    __extends(TelemetryInitializerPlugin, _super);\r\n    function TelemetryInitializerPlugin() {\r\n        var _this = _super.call(this) || this;\r\n        _this.identifier = \"TelemetryInitializerPlugin\";\r\n        _this.priority = 199;\r\n        // NOTE!: DON'T set default values here, instead set them in the _initDefaults() function as it is also called during teardown()\r\n        var _id;\r\n        var _initializers;\r\n        _initDefaults();\r\n        dynamicProto(TelemetryInitializerPlugin, _this, function (_self, _base) {\r\n            _self.addTelemetryInitializer = function (telemetryInitializer) {\r\n                return _addInitializer(_initializers, _id++, telemetryInitializer);\r\n            };\r\n            _self[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */] = function (item, itemCtx) {\r\n                if (_runInitializers(_initializers, item, itemCtx ? itemCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */]() : _self[_DYN_DIAG_LOG /* @min:%2ediagLog */]())) {\r\n                    _self[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](item, itemCtx);\r\n                }\r\n            };\r\n            _self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */] = function () {\r\n                _initDefaults();\r\n            };\r\n        });\r\n        function _initDefaults() {\r\n            _id = 0;\r\n            _initializers = [];\r\n        }\r\n        return _this;\r\n    }\r\n// Removed Stub for TelemetryInitializerPlugin.prototype.addTelemetryInitializer.\r\n// Removed Stub for TelemetryInitializerPlugin.prototype.processTelemetry.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    TelemetryInitializerPlugin.__ieDyn=1;\n\n    return TelemetryInitializerPlugin;\r\n}(BaseTelemetryPlugin));\r\nexport { TelemetryInitializerPlugin };\r\n//# sourceMappingURL=TelemetryInitializerPlugin.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createPromise, doAwaitResponse } from \"@nevware21/ts-async\";\r\nimport { arrSlice, getLength } from \"@nevware21/ts-utils\";\r\nimport { _DYN_UNLOAD } from \"../__DynamicConstants\";\r\n/**\r\n * Run the unload function of the target object if it exists\r\n * @param target - The target object that contains the unload function\r\n * @param isAsync - The caller identifies whether it is expecting the operation to complete synchronously or asynchronously. Even\r\n * if the caller is not waiting the operation may still be performed asynchronously depending on the component and the reverse is\r\n * also true.\r\n * @returns The result of the target function\r\n */\r\nexport function runTargetUnload(target, isAsync) {\r\n    if (target && target[_DYN_UNLOAD /* @min:%2eunload */]) {\r\n        return target[_DYN_UNLOAD /* @min:%2eunload */](isAsync);\r\n    }\r\n}\r\n/**\r\n * Call the unload function on all targets handling any returned [IPromise](https://nevware21.github.io/ts-async/typedoc/interfaces/IPromise.html)\r\n * / Promise before calling the next targets unload\r\n * @param targets - An array of the targets to unload\r\n * @param isAsync - The caller identifies whether it is expecting the operations to complete synchronously or asynchronously.  Even\r\n * if the caller is not waiting the operation may still be performed asynchronously depending on the component and the reverse is\r\n * also true.\r\n * @param done - Optional callback function to call once all of the unload functions have been called.\r\n */\r\nexport function doUnloadAll(targets, isAsync, done) {\r\n    var result;\r\n    if (!done) {\r\n        result = createPromise(function (resolved) {\r\n            done = resolved;\r\n        });\r\n    }\r\n    if (targets && getLength(targets) > 0) {\r\n        doAwaitResponse(runTargetUnload(targets[0], isAsync), function () {\r\n            doUnloadAll(arrSlice(targets, 1), isAsync, done);\r\n        });\r\n    }\r\n    else {\r\n        done();\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=AsyncUtils.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nvar _a;\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { isFunction, objDefine } from \"@nevware21/ts-utils\";\r\nimport { createDynamicConfig } from \"../Config/DynamicConfig\";\r\nimport { _DYN_CREATE_NEW, _DYN_DIAG_LOG, _DYN_GET_NEXT, _DYN_GET_PROCESS_TEL_CONT2, _DYN_INITIALIZE, _DYN_IS_ASYNC, _DYN_IS_INITIALIZED, _DYN_PROCESS_NEXT, _DYN_SET_NEXT_PLUGIN, _DYN_TEARDOWN, _DYN_UPDATE, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { safeGetLogger } from \"./DiagnosticLogger\";\r\nimport { isNotNullOrUndefined, proxyFunctionAs } from \"./HelperFuncs\";\r\nimport { STR_CORE, STR_EXTENSION_CONFIG, STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nimport { createProcessTelemetryContext, createProcessTelemetryUnloadContext, createProcessTelemetryUpdateContext } from \"./ProcessTelemetryContext\";\r\nimport { createUnloadHandlerContainer } from \"./UnloadHandlerContainer\";\r\nimport { createUnloadHookContainer } from \"./UnloadHookContainer\";\r\nvar strGetPlugin = \"getPlugin\";\r\nvar defaultValues = (_a = {},\r\n    _a[STR_EXTENSION_CONFIG] = { isVal: isNotNullOrUndefined, v: {} },\r\n    _a);\r\n/**\r\n * BaseTelemetryPlugin provides a basic implementation of the ITelemetryPlugin interface so that plugins\r\n * can avoid implementation the same set of boiler plate code as well as provide a base\r\n * implementation so that new default implementations can be added without breaking all plugins.\r\n */\r\nvar BaseTelemetryPlugin = /** @class */ (function () {\r\n    function BaseTelemetryPlugin() {\r\n        var _self = this; // Setting _self here as it's used outside of the dynamicProto as well\r\n        // NOTE!: DON'T set default values here, instead set them in the _initDefaults() function as it is also called during teardown()\r\n        var _isinitialized;\r\n        var _rootCtx; // Used as the root context, holding the current config and initialized core\r\n        var _nextPlugin; // Used for backward compatibility where plugins don't call the main pipeline\r\n        var _unloadHandlerContainer;\r\n        var _hookContainer;\r\n        _initDefaults();\r\n        dynamicProto(BaseTelemetryPlugin, _self, function (_self) {\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (config, core, extensions, pluginChain) {\r\n                _setDefaults(config, core, pluginChain);\r\n                _isinitialized = true;\r\n            };\r\n            _self[_DYN_TEARDOWN /* @min:%2eteardown */] = function (unloadCtx, unloadState) {\r\n                var _a;\r\n                // If this plugin has already been torn down (not operational) or is not initialized (core is not set)\r\n                // or the core being used for unload was not the same core used for initialization.\r\n                var core = _self[STR_CORE /* @min:%2ecore */];\r\n                if (!core || (unloadCtx && core !== unloadCtx[STR_CORE /* @min:%2ecore */]())) {\r\n                    // Do Nothing as either the plugin is not initialized or was not initialized by the current core\r\n                    return;\r\n                }\r\n                var result;\r\n                var unloadDone = false;\r\n                var theUnloadCtx = unloadCtx || createProcessTelemetryUnloadContext(null, core, _nextPlugin && _nextPlugin[strGetPlugin] ? _nextPlugin[strGetPlugin]() : _nextPlugin);\r\n                var theUnloadState = unloadState || (_a = {\r\n                        reason: 0 /* TelemetryUnloadReason.ManualTeardown */\r\n                    },\r\n                    _a[_DYN_IS_ASYNC /* @min:isAsync */] = false,\r\n                    _a);\r\n                function _unloadCallback() {\r\n                    if (!unloadDone) {\r\n                        unloadDone = true;\r\n                        _unloadHandlerContainer.run(theUnloadCtx, unloadState);\r\n                        _hookContainer.run(theUnloadCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */]());\r\n                        if (result === true) {\r\n                            theUnloadCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](theUnloadState);\r\n                        }\r\n                        _initDefaults();\r\n                    }\r\n                }\r\n                if (!_self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */] || _self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */](theUnloadCtx, theUnloadState, _unloadCallback) !== true) {\r\n                    _unloadCallback();\r\n                }\r\n                else {\r\n                    // Tell the caller that we will be calling processNext()\r\n                    result = true;\r\n                }\r\n                return result;\r\n            };\r\n            _self[_DYN_UPDATE /* @min:%2eupdate */] = function (updateCtx, updateState) {\r\n                // If this plugin has already been torn down (not operational) or is not initialized (core is not set)\r\n                // or the core being used for unload was not the same core used for initialization.\r\n                var core = _self[STR_CORE /* @min:%2ecore */];\r\n                if (!core || (updateCtx && core !== updateCtx[STR_CORE /* @min:%2ecore */]())) {\r\n                    // Do Nothing\r\n                    return;\r\n                }\r\n                var result;\r\n                var updateDone = false;\r\n                var theUpdateCtx = updateCtx || createProcessTelemetryUpdateContext(null, core, _nextPlugin && _nextPlugin[strGetPlugin] ? _nextPlugin[strGetPlugin]() : _nextPlugin);\r\n                var theUpdateState = updateState || {\r\n                    reason: 0 /* TelemetryUpdateReason.Unknown */\r\n                };\r\n                function _updateCallback() {\r\n                    if (!updateDone) {\r\n                        updateDone = true;\r\n                        _setDefaults(theUpdateCtx.getCfg(), theUpdateCtx.core(), theUpdateCtx[_DYN_GET_NEXT /* @min:%2egetNext */]());\r\n                    }\r\n                }\r\n                if (!_self._doUpdate || _self._doUpdate(theUpdateCtx, theUpdateState, _updateCallback) !== true) {\r\n                    _updateCallback();\r\n                }\r\n                else {\r\n                    result = true;\r\n                }\r\n                return result;\r\n            };\r\n            proxyFunctionAs(_self, \"_addUnloadCb\", function () { return _unloadHandlerContainer; }, \"add\");\r\n            proxyFunctionAs(_self, \"_addHook\", function () { return _hookContainer; }, \"add\");\r\n            objDefine(_self, \"_unloadHooks\", { g: function () { return _hookContainer; } });\r\n        });\r\n        // These are added after the dynamicProto so that are not moved to the prototype\r\n        _self[_DYN_DIAG_LOG /* @min:%2ediagLog */] = function (itemCtx) {\r\n            return _getTelCtx(itemCtx)[_DYN_DIAG_LOG /* @min:%2ediagLog */]();\r\n        };\r\n        _self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = function () {\r\n            return _isinitialized;\r\n        };\r\n        _self.setInitialized = function (isInitialized) {\r\n            _isinitialized = isInitialized;\r\n        };\r\n        // _self.getNextPlugin = () => DO NOT IMPLEMENT\r\n        // Sub-classes of this base class *should* not be relying on this value and instead\r\n        // should use processNext() function. If you require access to the plugin use the\r\n        // IProcessTelemetryContext.getNext().getPlugin() while in the pipeline, Note getNext() may return null.\r\n        _self[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */] = function (next) {\r\n            _nextPlugin = next;\r\n        };\r\n        _self[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = function (env, itemCtx) {\r\n            if (itemCtx) {\r\n                // Normal core execution sequence\r\n                itemCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](env);\r\n            }\r\n            else if (_nextPlugin && isFunction(_nextPlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */])) {\r\n                // Looks like backward compatibility or out of band processing. And as it looks\r\n                // like a ITelemetryPlugin or ITelemetryPluginChain, just call processTelemetry\r\n                _nextPlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */](env, null);\r\n            }\r\n        };\r\n        _self._getTelCtx = _getTelCtx;\r\n        function _getTelCtx(currentCtx) {\r\n            if (currentCtx === void 0) { currentCtx = null; }\r\n            var itemCtx = currentCtx;\r\n            if (!itemCtx) {\r\n                var rootCtx = _rootCtx || createProcessTelemetryContext(null, {}, _self[STR_CORE /* @min:%2ecore */]);\r\n                // tslint:disable-next-line: prefer-conditional-expression\r\n                if (_nextPlugin && _nextPlugin[strGetPlugin]) {\r\n                    // Looks like a chain object\r\n                    itemCtx = rootCtx[_DYN_CREATE_NEW /* @min:%2ecreateNew */](null, _nextPlugin[strGetPlugin]);\r\n                }\r\n                else {\r\n                    itemCtx = rootCtx[_DYN_CREATE_NEW /* @min:%2ecreateNew */](null, _nextPlugin);\r\n                }\r\n            }\r\n            return itemCtx;\r\n        }\r\n        function _setDefaults(config, core, pluginChain) {\r\n            // Make sure the extensionConfig exists and the config is dynamic\r\n            createDynamicConfig(config, defaultValues, safeGetLogger(core));\r\n            if (!pluginChain && core) {\r\n                // Get the first plugin from the core\r\n                pluginChain = core[_DYN_GET_PROCESS_TEL_CONT2 /* @min:%2egetProcessTelContext */]()[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n            }\r\n            var nextPlugin = _nextPlugin;\r\n            if (_nextPlugin && _nextPlugin[strGetPlugin]) {\r\n                // If it looks like a proxy/chain then get the plugin\r\n                nextPlugin = _nextPlugin[strGetPlugin]();\r\n            }\r\n            // Support legacy plugins where core was defined as a property\r\n            _self[STR_CORE /* @min:%2ecore */] = core;\r\n            _rootCtx = createProcessTelemetryContext(pluginChain, config, core, nextPlugin);\r\n        }\r\n        function _initDefaults() {\r\n            _isinitialized = false;\r\n            _self[STR_CORE /* @min:%2ecore */] = null;\r\n            _rootCtx = null;\r\n            _nextPlugin = null;\r\n            _hookContainer = createUnloadHookContainer();\r\n            _unloadHandlerContainer = createUnloadHandlerContainer();\r\n        }\r\n    }\r\n// Removed Stub for BaseTelemetryPlugin.prototype.initialize.\r\n// Removed Stub for BaseTelemetryPlugin.prototype.teardown.\r\n// Removed Stub for BaseTelemetryPlugin.prototype.update.\r\n// Removed Stub for BaseTelemetryPlugin.prototype._addUnloadCb.\r\n// Removed Stub for BaseTelemetryPlugin.prototype._addHook.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    BaseTelemetryPlugin.__ieDyn=1;\n\n    return BaseTelemetryPlugin;\r\n}());\r\nexport { BaseTelemetryPlugin };\r\n//# sourceMappingURL=BaseTelemetryPlugin.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nexport var ChannelControllerPriority = 500;\r\nexport var DisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\n// export const SampleRate = \"sampleRate\";\r\n// export const ProcessLegacy = \"ProcessLegacy\";\r\n// export const HttpMethod = \"http.method\";\r\n// export const DEFAULT_BREEZE_ENDPOINT = \"https://dc.services.visualstudio.com\";\r\n// export const DEFAULT_BREEZE_PATH = \"/v2/track\";\r\n// export const strNotSpecified = \"not_specified\";\r\n// export const strIkey = \"iKey\";\r\n//# sourceMappingURL=Constants.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nvar _a, _b;\r\nimport { arrForEach, arrIndexOf, dumpObj, getDocument, getLazy, getNavigator, isArray, isFunction, isNullOrUndefined, isString, isTruthy, isUndefined, objForEachKey, strEndsWith, strIndexOf, strLeft, strSubstring, strTrim, utcNow } from \"@nevware21/ts-utils\";\r\nimport { cfgDfMerge } from \"../Config/ConfigDefaultHelpers\";\r\nimport { createDynamicConfig, onConfigChange } from \"../Config/DynamicConfig\";\r\nimport { _DYN_ENABLED, _DYN_LENGTH, _DYN_LOGGER, _DYN_PROTOCOL, _DYN_SET_DF, _DYN_SPLIT, _DYN_UNLOAD, _DYN_USER_AGENT } from \"../__DynamicConstants\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nimport { getLocation, isIE } from \"./EnvUtils\";\r\nimport { getExceptionName, isNotNullOrUndefined, setValue, strContains } from \"./HelperFuncs\";\r\nimport { STR_DOMAIN, STR_EMPTY, STR_PATH, UNDEFINED_VALUE } from \"./InternalConstants\";\r\nvar strToGMTString = \"toGMTString\";\r\nvar strToUTCString = \"toUTCString\";\r\nvar strCookie = \"cookie\";\r\nvar strExpires = \"expires\";\r\nvar strIsCookieUseDisabled = \"isCookieUseDisabled\";\r\nvar strDisableCookiesUsage = \"disableCookiesUsage\";\r\nvar strConfigCookieMgr = \"_ckMgr\";\r\nvar _supportsCookies = null;\r\nvar _allowUaSameSite = null;\r\nvar _parsedCookieValue = null;\r\nvar _doc;\r\nvar _cookieCache = {};\r\nvar _globalCookieConfig = {};\r\n// // `isCookieUseDisabled` is deprecated, so explicitly casting as a key of IConfiguration to avoid typing error\r\n// // when both isCookieUseDisabled and disableCookiesUsage are used disableCookiesUsage will take precedent, which is\r\n// // why its listed first\r\n/**\r\n * Set the supported dynamic config values as undefined (or an empty object) so that\r\n * any listeners will be informed of any changes.\r\n * Explicitly NOT including the deprecated `isCookieUseDisabled` as we don't want to support\r\n * the v1 deprecated field as dynamic for updates\r\n */\r\nvar rootDefaultConfig = (_a = {\r\n        cookieCfg: cfgDfMerge((_b = {},\r\n            _b[STR_DOMAIN] = { fb: \"cookieDomain\", dfVal: isNotNullOrUndefined },\r\n            _b.path = { fb: \"cookiePath\", dfVal: isNotNullOrUndefined },\r\n            _b.enabled = UNDEFINED_VALUE,\r\n            _b.ignoreCookies = UNDEFINED_VALUE,\r\n            _b.blockedCookies = UNDEFINED_VALUE,\r\n            _b)),\r\n        cookieDomain: UNDEFINED_VALUE,\r\n        cookiePath: UNDEFINED_VALUE\r\n    },\r\n    _a[strDisableCookiesUsage] = UNDEFINED_VALUE,\r\n    _a);\r\nfunction _getDoc() {\r\n    !_doc && (_doc = getLazy(function () { return getDocument(); }));\r\n}\r\n/**\r\n * @ignore\r\n * DO NOT USE or export from the module, this is exposed as public to support backward compatibility of previous static utility methods only.\r\n * If you want to manager cookies either use the ICookieMgr available from the core instance via getCookieMgr() or create\r\n * your own instance of the CookieMgr and use that.\r\n * Using this directly for enabling / disabling cookie handling will not only affect your usage but EVERY user of cookies.\r\n * Example, if you are using a shared component that is also using Application Insights you will affect their cookie handling.\r\n * @param logger - The DiagnosticLogger to use for reporting errors.\r\n */\r\nfunction _gblCookieMgr(config, logger) {\r\n    // Stash the global instance against the BaseCookieMgr class\r\n    var inst = createCookieMgr[strConfigCookieMgr] || _globalCookieConfig[strConfigCookieMgr];\r\n    if (!inst) {\r\n        // Note: not using the getSetValue() helper as that would require always creating a temporary cookieMgr\r\n        // that ultimately is never used\r\n        inst = createCookieMgr[strConfigCookieMgr] = createCookieMgr(config, logger);\r\n        _globalCookieConfig[strConfigCookieMgr] = inst;\r\n    }\r\n    return inst;\r\n}\r\nfunction _isMgrEnabled(cookieMgr) {\r\n    if (cookieMgr) {\r\n        return cookieMgr.isEnabled();\r\n    }\r\n    return true;\r\n}\r\nfunction _isIgnoredCookie(cookieMgrCfg, name) {\r\n    if (name && cookieMgrCfg && isArray(cookieMgrCfg.ignoreCookies)) {\r\n        return arrIndexOf(cookieMgrCfg.ignoreCookies, name) !== -1;\r\n    }\r\n    return false;\r\n}\r\nfunction _isBlockedCookie(cookieMgrCfg, name) {\r\n    if (name && cookieMgrCfg && isArray(cookieMgrCfg.blockedCookies)) {\r\n        if (arrIndexOf(cookieMgrCfg.blockedCookies, name) !== -1) {\r\n            return true;\r\n        }\r\n    }\r\n    return _isIgnoredCookie(cookieMgrCfg, name);\r\n}\r\nfunction _isCfgEnabled(rootConfig, cookieMgrConfig) {\r\n    var isCfgEnabled = cookieMgrConfig[_DYN_ENABLED /* @min:%2eenabled */];\r\n    if (isNullOrUndefined(isCfgEnabled)) {\r\n        // Set the enabled from the provided setting or the legacy root values\r\n        var cookieEnabled = void 0;\r\n        // This field is deprecated and dynamic updates will not be fully supported\r\n        if (!isUndefined(rootConfig[strIsCookieUseDisabled])) {\r\n            cookieEnabled = !rootConfig[strIsCookieUseDisabled];\r\n        }\r\n        // If this value is defined it takes precedent over the above\r\n        if (!isUndefined(rootConfig[strDisableCookiesUsage])) {\r\n            cookieEnabled = !rootConfig[strDisableCookiesUsage];\r\n        }\r\n        // Not setting the cookieMgrConfig.enabled as that will update (set) the global dynamic config\r\n        // So future \"updates\" then may not be as expected\r\n        isCfgEnabled = cookieEnabled;\r\n    }\r\n    return isCfgEnabled;\r\n}\r\n/**\r\n * Helper to return the ICookieMgr from the core (if not null/undefined) or a default implementation\r\n * associated with the configuration or a legacy default.\r\n * @param core\r\n * @param config\r\n * @returns\r\n */\r\nexport function safeGetCookieMgr(core, config) {\r\n    var cookieMgr;\r\n    if (core) {\r\n        // Always returns an instance\r\n        cookieMgr = core.getCookieMgr();\r\n    }\r\n    else if (config) {\r\n        var cookieCfg = config.cookieCfg;\r\n        if (cookieCfg && cookieCfg[strConfigCookieMgr]) {\r\n            cookieMgr = cookieCfg[strConfigCookieMgr];\r\n        }\r\n        else {\r\n            cookieMgr = createCookieMgr(config);\r\n        }\r\n    }\r\n    if (!cookieMgr) {\r\n        // Get or initialize the default global (legacy) cookie manager if we couldn't find one\r\n        cookieMgr = _gblCookieMgr(config, (core || {})[_DYN_LOGGER /* @min:%2elogger */]);\r\n    }\r\n    return cookieMgr;\r\n}\r\nexport function createCookieMgr(rootConfig, logger) {\r\n    var _a;\r\n    var cookieMgrConfig;\r\n    var _path;\r\n    var _domain;\r\n    var unloadHandler;\r\n    // Explicitly checking against false, so that setting to undefined will === true\r\n    var _enabled;\r\n    var _getCookieFn;\r\n    var _setCookieFn;\r\n    var _delCookieFn;\r\n    // Make sure the root config is dynamic as it may be the global config\r\n    rootConfig = createDynamicConfig(rootConfig || _globalCookieConfig, null, logger).cfg;\r\n    // Will get recalled if the referenced configuration is changed\r\n    unloadHandler = onConfigChange(rootConfig, function (details) {\r\n        // Make sure the root config has all of the the defaults to the root config to ensure they are dynamic\r\n        details[_DYN_SET_DF /* @min:%2esetDf */](details.cfg, rootDefaultConfig);\r\n        // Create and apply the defaults to the cookieCfg element\r\n        cookieMgrConfig = details.ref(details.cfg, \"cookieCfg\"); // details.setDf(details.cfg.cookieCfg, defaultConfig);\r\n        _path = cookieMgrConfig[STR_PATH /* @min:%2epath */] || \"/\";\r\n        _domain = cookieMgrConfig[STR_DOMAIN /* @min:%2edomain */];\r\n        // Explicitly checking against false, so that setting to undefined will === true\r\n        _enabled = _isCfgEnabled(rootConfig, cookieMgrConfig) !== false;\r\n        _getCookieFn = cookieMgrConfig.getCookie || _getCookieValue;\r\n        _setCookieFn = cookieMgrConfig.setCookie || _setCookieValue;\r\n        _delCookieFn = cookieMgrConfig.delCookie || _setCookieValue;\r\n    }, logger);\r\n    var cookieMgr = (_a = {\r\n            isEnabled: function () {\r\n                var enabled = _isCfgEnabled(rootConfig, cookieMgrConfig) !== false && _enabled && areCookiesSupported(logger);\r\n                // Using an indirect lookup for any global cookie manager to support tree shaking for SDK's\r\n                // that don't use the \"applicationinsights-core\" version of the default cookie function\r\n                var gblManager = _globalCookieConfig[strConfigCookieMgr];\r\n                if (enabled && gblManager && cookieMgr !== gblManager) {\r\n                    // Make sure the GlobalCookie Manager instance (if not this instance) is also enabled.\r\n                    // As the global (deprecated) functions may have been called (for backward compatibility)\r\n                    enabled = _isMgrEnabled(gblManager);\r\n                }\r\n                return enabled;\r\n            },\r\n            setEnabled: function (value) {\r\n                // Explicitly checking against false, so that setting to undefined will === true\r\n                _enabled = value !== false;\r\n                cookieMgrConfig[_DYN_ENABLED /* @min:%2eenabled */] = value;\r\n            },\r\n            set: function (name, value, maxAgeSec, domain, path) {\r\n                var result = false;\r\n                if (_isMgrEnabled(cookieMgr) && !_isBlockedCookie(cookieMgrConfig, name)) {\r\n                    var values = {};\r\n                    var theValue = strTrim(value || STR_EMPTY);\r\n                    var idx = strIndexOf(theValue, \";\");\r\n                    if (idx !== -1) {\r\n                        theValue = strTrim(strLeft(value, idx));\r\n                        values = _extractParts(strSubstring(value, idx + 1));\r\n                    }\r\n                    // Only update domain if not already present (isUndefined) and the value is truthy (not null, undefined or empty string)\r\n                    setValue(values, STR_DOMAIN, domain || _domain, isTruthy, isUndefined);\r\n                    if (!isNullOrUndefined(maxAgeSec)) {\r\n                        var _isIE = isIE();\r\n                        if (isUndefined(values[strExpires])) {\r\n                            var nowMs = utcNow();\r\n                            // Only add expires if not already present\r\n                            var expireMs = nowMs + (maxAgeSec * 1000);\r\n                            // Sanity check, if zero or -ve then ignore\r\n                            if (expireMs > 0) {\r\n                                var expiry = new Date();\r\n                                expiry.setTime(expireMs);\r\n                                setValue(values, strExpires, _formatDate(expiry, !_isIE ? strToUTCString : strToGMTString) || _formatDate(expiry, _isIE ? strToGMTString : strToUTCString) || STR_EMPTY, isTruthy);\r\n                            }\r\n                        }\r\n                        if (!_isIE) {\r\n                            // Only replace if not already present\r\n                            setValue(values, \"max-age\", STR_EMPTY + maxAgeSec, null, isUndefined);\r\n                        }\r\n                    }\r\n                    var location_1 = getLocation();\r\n                    if (location_1 && location_1[_DYN_PROTOCOL /* @min:%2eprotocol */] === \"https:\") {\r\n                        setValue(values, \"secure\", null, null, isUndefined);\r\n                        // Only set same site if not also secure\r\n                        if (_allowUaSameSite === null) {\r\n                            _allowUaSameSite = !uaDisallowsSameSiteNone((getNavigator() || {})[_DYN_USER_AGENT /* @min:%2euserAgent */]);\r\n                        }\r\n                        if (_allowUaSameSite) {\r\n                            setValue(values, \"SameSite\", \"None\", null, isUndefined);\r\n                        }\r\n                    }\r\n                    setValue(values, STR_PATH, path || _path, null, isUndefined);\r\n                    //let setCookieFn = cookieMgrConfig.setCookie || _setCookieValue;\r\n                    _setCookieFn(name, _formatCookieValue(theValue, values));\r\n                    result = true;\r\n                }\r\n                return result;\r\n            },\r\n            get: function (name) {\r\n                var value = STR_EMPTY;\r\n                if (_isMgrEnabled(cookieMgr) && !_isIgnoredCookie(cookieMgrConfig, name)) {\r\n                    value = _getCookieFn(name);\r\n                }\r\n                return value;\r\n            },\r\n            del: function (name, path) {\r\n                var result = false;\r\n                if (_isMgrEnabled(cookieMgr)) {\r\n                    // Only remove the cookie if the manager and cookie support has not been disabled\r\n                    result = cookieMgr.purge(name, path);\r\n                }\r\n                return result;\r\n            },\r\n            purge: function (name, path) {\r\n                var _a;\r\n                var result = false;\r\n                if (areCookiesSupported(logger)) {\r\n                    // Setting the expiration date in the past immediately removes the cookie\r\n                    var values = (_a = {},\r\n                        _a[STR_PATH] = path ? path : \"/\",\r\n                        _a[strExpires] = \"Thu, 01 Jan 1970 00:00:01 GMT\",\r\n                        _a);\r\n                    if (!isIE()) {\r\n                        // Set max age to expire now\r\n                        values[\"max-age\"] = \"0\";\r\n                    }\r\n                    // let delCookie = cookieMgrConfig.delCookie || _setCookieValue;\r\n                    _delCookieFn(name, _formatCookieValue(STR_EMPTY, values));\r\n                    result = true;\r\n                }\r\n                return result;\r\n            }\r\n        },\r\n        _a[_DYN_UNLOAD /* @min:unload */] = function (isAsync) {\r\n            unloadHandler && unloadHandler.rm();\r\n            unloadHandler = null;\r\n        },\r\n        _a);\r\n    // Associated this cookie manager with the config\r\n    cookieMgr[strConfigCookieMgr] = cookieMgr;\r\n    return cookieMgr;\r\n}\r\n/*\r\n* Helper method to tell if document.cookie object is supported by the runtime\r\n*/\r\nexport function areCookiesSupported(logger) {\r\n    if (_supportsCookies === null) {\r\n        _supportsCookies = false;\r\n        !_doc && _getDoc();\r\n        try {\r\n            var doc = _doc.v || {};\r\n            _supportsCookies = doc[strCookie] !== undefined;\r\n        }\r\n        catch (e) {\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 68 /* _eInternalMessageId.CannotAccessCookie */, \"Cannot access document.cookie - \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return _supportsCookies;\r\n}\r\nfunction _extractParts(theValue) {\r\n    var values = {};\r\n    if (theValue && theValue[_DYN_LENGTH /* @min:%2elength */]) {\r\n        var parts = strTrim(theValue)[_DYN_SPLIT /* @min:%2esplit */](\";\");\r\n        arrForEach(parts, function (thePart) {\r\n            thePart = strTrim(thePart || STR_EMPTY);\r\n            if (thePart) {\r\n                var idx = strIndexOf(thePart, \"=\");\r\n                if (idx === -1) {\r\n                    values[thePart] = null;\r\n                }\r\n                else {\r\n                    values[strTrim(strLeft(thePart, idx))] = strTrim(strSubstring(thePart, idx + 1));\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return values;\r\n}\r\nfunction _formatDate(theDate, func) {\r\n    if (isFunction(theDate[func])) {\r\n        return theDate[func]();\r\n    }\r\n    return null;\r\n}\r\nfunction _formatCookieValue(value, values) {\r\n    var cookieValue = value || STR_EMPTY;\r\n    objForEachKey(values, function (name, theValue) {\r\n        cookieValue += \"; \" + name + (!isNullOrUndefined(theValue) ? \"=\" + theValue : STR_EMPTY);\r\n    });\r\n    return cookieValue;\r\n}\r\nfunction _getCookieValue(name) {\r\n    var cookieValue = STR_EMPTY;\r\n    !_doc && _getDoc();\r\n    if (_doc.v) {\r\n        var theCookie = _doc.v[strCookie] || STR_EMPTY;\r\n        if (_parsedCookieValue !== theCookie) {\r\n            _cookieCache = _extractParts(theCookie);\r\n            _parsedCookieValue = theCookie;\r\n        }\r\n        cookieValue = strTrim(_cookieCache[name] || STR_EMPTY);\r\n    }\r\n    return cookieValue;\r\n}\r\nfunction _setCookieValue(name, cookieValue) {\r\n    !_doc && _getDoc();\r\n    if (_doc.v) {\r\n        _doc.v[strCookie] = name + \"=\" + cookieValue;\r\n    }\r\n}\r\nexport function uaDisallowsSameSiteNone(userAgent) {\r\n    if (!isString(userAgent)) {\r\n        return false;\r\n    }\r\n    // Cover all iOS based browsers here. This includes:\r\n    // - Safari on iOS 12 for iPhone, iPod Touch, iPad\r\n    // - WkWebview on iOS 12 for iPhone, iPod Touch, iPad\r\n    // - Chrome on iOS 12 for iPhone, iPod Touch, iPad\r\n    // All of which are broken by SameSite=None, because they use the iOS networking stack\r\n    if (strContains(userAgent, \"CPU iPhone OS 12\") || strContains(userAgent, \"iPad; CPU OS 12\")) {\r\n        return true;\r\n    }\r\n    // Cover Mac OS X based browsers that use the Mac OS networking stack. This includes:\r\n    // - Safari on Mac OS X\r\n    // This does not include:\r\n    // - Internal browser on Mac OS X\r\n    // - Chrome on Mac OS X\r\n    // - Chromium on Mac OS X\r\n    // Because they do not use the Mac OS networking stack.\r\n    if (strContains(userAgent, \"Macintosh; Intel Mac OS X 10_14\") && strContains(userAgent, \"Version/\") && strContains(userAgent, \"Safari\")) {\r\n        return true;\r\n    }\r\n    // Cover Mac OS X internal browsers that use the Mac OS networking stack. This includes:\r\n    // - Internal browser on Mac OS X\r\n    // This does not include:\r\n    // - Safari on Mac OS X\r\n    // - Chrome on Mac OS X\r\n    // - Chromium on Mac OS X\r\n    // Because they do not use the Mac OS networking stack.\r\n    if (strContains(userAgent, \"Macintosh; Intel Mac OS X 10_14\") && strEndsWith(userAgent, \"AppleWebKit/605.1.15 (KHTML, like Gecko)\")) {\r\n        return true;\r\n    }\r\n    // Cover Chrome 50-69, because some versions are broken by SameSite=None, and none in this range require it.\r\n    // Note: this covers some pre-Chromium Edge versions, but pre-Chromim Edge does not require SameSite=None, so this is fine.\r\n    // Note: this regex applies to Windows, Mac OS X, and Linux, deliberately.\r\n    if (strContains(userAgent, \"Chrome/5\") || strContains(userAgent, \"Chrome/6\")) {\r\n        return true;\r\n    }\r\n    // Unreal Engine runs Chromium 59, but does not advertise as Chrome until 4.23. Treat versions of Unreal\r\n    // that don't specify their Chrome version as lacking support for SameSite=None.\r\n    if (strContains(userAgent, \"UnrealEngine\") && !strContains(userAgent, \"Chrome\")) {\r\n        return true;\r\n    }\r\n    // UCBrowser < 12.13.2 ignores Set-Cookie headers with SameSite=None\r\n    // NB: this rule isn't complete - you need regex to make a complete rule.\r\n    // See: https://www.chromium.org/updates/same-site/incompatible-clients\r\n    if (strContains(userAgent, \"UCBrowser/12\") || strContains(userAgent, \"UCBrowser/11\")) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=CookieMgr.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { strShimUndefined } from \"@microsoft/applicationinsights-shims\";\r\nimport { strSubstr, strSubstring } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nimport { random32 } from \"./RandomHelper\";\r\n// Added to help with minfication\r\nexport var Undefined = strShimUndefined;\r\nexport function newGuid() {\r\n    var uuid = generateW3CId();\r\n    return strSubstring(uuid, 0, 8) + \"-\" + strSubstring(uuid, 8, 12) + \"-\" + strSubstring(uuid, 12, 16) + \"-\" + strSubstring(uuid, 16, 20) + \"-\" + strSubstring(uuid, 20);\r\n}\r\n/**\r\n * The strEndsWith() method determines whether a string ends with the characters of a specified string, returning true or false as appropriate.\r\n * @param value - The value to check whether it ends with the search value.\r\n * @param search - The characters to be searched for at the end of the value.\r\n * @returns true if the given search value is found at the end of the string, otherwise false.\r\n */\r\nexport function strEndsWith(value, search) {\r\n    if (value && search) {\r\n        var len = value[_DYN_LENGTH /* @min:%2elength */];\r\n        var start = len - search[_DYN_LENGTH /* @min:%2elength */];\r\n        return strSubstring(value, start >= 0 ? start : 0, len) === search;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * generate W3C trace id\r\n */\r\nexport function generateW3CId() {\r\n    var hexValues = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\r\n    // rfc4122 version 4 UUID without dashes and with lowercase letters\r\n    var oct = STR_EMPTY, tmp;\r\n    for (var a = 0; a < 4; a++) {\r\n        tmp = random32();\r\n        oct +=\r\n            hexValues[tmp & 0xF] +\r\n                hexValues[tmp >> 4 & 0xF] +\r\n                hexValues[tmp >> 8 & 0xF] +\r\n                hexValues[tmp >> 12 & 0xF] +\r\n                hexValues[tmp >> 16 & 0xF] +\r\n                hexValues[tmp >> 20 & 0xF] +\r\n                hexValues[tmp >> 24 & 0xF] +\r\n                hexValues[tmp >> 28 & 0xF];\r\n    }\r\n    // \"Set the two most significant bits (bits 6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively\"\r\n    var clockSequenceHi = hexValues[8 + (random32() & 0x03) | 0];\r\n    return strSubstr(oct, 0, 8) + strSubstr(oct, 9, 4) + \"4\" + strSubstr(oct, 13, 3) + clockSequenceHi + strSubstr(oct, 16, 3) + strSubstr(oct, 19, 12);\r\n}\r\n//# sourceMappingURL=CoreUtils.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { objDefine } from \"@nevware21/ts-utils\";\r\nimport { _DYN_NODE_TYPE } from \"../__DynamicConstants\";\r\nimport { normalizeJsName } from \"./HelperFuncs\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nimport { newId } from \"./RandomHelper\";\r\nvar version = '3.3.3';\r\nvar instanceName = \".\" + newId(6);\r\nvar _dataUid = 0;\r\n// Accepts only:\r\n//  - Node\r\n//    - Node.ELEMENT_NODE\r\n//    - Node.DOCUMENT_NODE\r\n//  - Object\r\n//    - Any\r\nfunction _canAcceptData(target) {\r\n    return target[_DYN_NODE_TYPE /* @min:%2enodeType */] === 1 || target[_DYN_NODE_TYPE /* @min:%2enodeType */] === 9 || !(+target[_DYN_NODE_TYPE /* @min:%2enodeType */]);\r\n}\r\nfunction _getCache(data, target) {\r\n    var theCache = target[data.id];\r\n    if (!theCache) {\r\n        theCache = {};\r\n        try {\r\n            if (_canAcceptData(target)) {\r\n                objDefine(target, data.id, {\r\n                    e: false,\r\n                    v: theCache\r\n                });\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Not all environments allow extending all objects, so just ignore the cache in those cases\r\n        }\r\n    }\r\n    return theCache;\r\n}\r\nexport function createUniqueNamespace(name, includeVersion) {\r\n    if (includeVersion === void 0) { includeVersion = false; }\r\n    return normalizeJsName(name + (_dataUid++) + (includeVersion ? \".\" + version : STR_EMPTY) + instanceName);\r\n}\r\nexport function createElmNodeData(name) {\r\n    var data = {\r\n        id: createUniqueNamespace(\"_aiData-\" + (name || STR_EMPTY) + \".\" + version),\r\n        accept: function (target) {\r\n            return _canAcceptData(target);\r\n        },\r\n        get: function (target, name, defValue, addDefault) {\r\n            var theCache = target[data.id];\r\n            if (!theCache) {\r\n                if (addDefault) {\r\n                    // Side effect is adds the cache\r\n                    theCache = _getCache(data, target);\r\n                    theCache[normalizeJsName(name)] = defValue;\r\n                }\r\n                return defValue;\r\n            }\r\n            return theCache[normalizeJsName(name)];\r\n        },\r\n        kill: function (target, name) {\r\n            if (target && target[name]) {\r\n                try {\r\n                    delete target[name];\r\n                }\r\n                catch (e) {\r\n                    // Just cleaning up, so if this fails -- ignore\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return data;\r\n}\r\n//# sourceMappingURL=DataCacheHelper.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { getInst } from \"@nevware21/ts-utils\";\r\nimport { _DYN_APPLY, _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { STR_EVENTS_DISCARDED, STR_EVENTS_SEND_REQUEST, STR_EVENTS_SENT, STR_PERF_EVENT } from \"./InternalConstants\";\r\nvar listenerFuncs = [STR_EVENTS_SENT, STR_EVENTS_DISCARDED, STR_EVENTS_SEND_REQUEST, STR_PERF_EVENT];\r\nvar _aiNamespace = null;\r\nvar _debugListener;\r\nfunction _listenerProxyFunc(name, config) {\r\n    return function () {\r\n        var args = arguments;\r\n        var dbgExt = getDebugExt(config);\r\n        if (dbgExt) {\r\n            var listener = dbgExt.listener;\r\n            if (listener && listener[name]) {\r\n                listener[name][_DYN_APPLY /* @min:%2eapply */](listener, args);\r\n            }\r\n        }\r\n    };\r\n}\r\nfunction _getExtensionNamespace() {\r\n    // Cache the lookup of the global namespace object\r\n    var target = getInst(\"Microsoft\");\r\n    if (target) {\r\n        _aiNamespace = target[\"ApplicationInsights\"];\r\n    }\r\n    return _aiNamespace;\r\n}\r\nexport function getDebugExt(config) {\r\n    var ns = _aiNamespace;\r\n    if (!ns && config.disableDbgExt !== true) {\r\n        ns = _aiNamespace || _getExtensionNamespace();\r\n    }\r\n    return ns ? ns[\"ChromeDbgExt\"] : null;\r\n}\r\nexport function getDebugListener(config) {\r\n    if (!_debugListener) {\r\n        _debugListener = {};\r\n        for (var lp = 0; lp < listenerFuncs[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n            _debugListener[listenerFuncs[lp]] = _listenerProxyFunc(listenerFuncs[lp], config);\r\n        }\r\n    }\r\n    return _debugListener;\r\n}\r\n//# sourceMappingURL=DbgExtensionUtils.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nvar _a;\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { dumpObj, isFunction, isUndefined } from \"@nevware21/ts-utils\";\r\nimport { createDynamicConfig, onConfigChange } from \"../Config/DynamicConfig\";\r\nimport { _DYN_DIAG_LOG, _DYN_LOGGER, _DYN_LOGGING_LEVEL_CONSOL4, _DYN_LOG_INTERNAL_MESSAGE, _DYN_MESSAGE, _DYN_MESSAGE_ID, _DYN_PUSH, _DYN_REPLACE, _DYN_THROW_INTERNAL, _DYN_UNLOAD, _DYN_WARN_TO_CONSOLE } from \"../__DynamicConstants\";\r\nimport { getDebugExt } from \"./DbgExtensionUtils\";\r\nimport { getConsole, getJSON, hasJSON } from \"./EnvUtils\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nvar STR_WARN_TO_CONSOLE = \"warnToConsole\";\r\n/**\r\n * For user non actionable traces use AI Internal prefix.\r\n */\r\nvar AiNonUserActionablePrefix = \"AI (Internal): \";\r\n/**\r\n * Prefix of the traces in portal.\r\n */\r\nvar AiUserActionablePrefix = \"AI: \";\r\n/**\r\n *  Session storage key for the prefix for the key indicating message type already logged\r\n */\r\nvar AIInternalMessagePrefix = \"AITR_\";\r\nvar defaultValues = {\r\n    loggingLevelConsole: 0,\r\n    loggingLevelTelemetry: 1,\r\n    maxMessageLimit: 25,\r\n    enableDebug: false\r\n};\r\nvar _logFuncs = (_a = {},\r\n    _a[0 /* eLoggingSeverity.DISABLED */] = null,\r\n    _a[1 /* eLoggingSeverity.CRITICAL */] = \"errorToConsole\",\r\n    _a[2 /* eLoggingSeverity.WARNING */] = STR_WARN_TO_CONSOLE,\r\n    _a[3 /* eLoggingSeverity.DEBUG */] = \"debugToConsole\",\r\n    _a);\r\nfunction _sanitizeDiagnosticText(text) {\r\n    if (text) {\r\n        return \"\\\"\" + text[_DYN_REPLACE /* @min:%2ereplace */](/\\\"/g, STR_EMPTY) + \"\\\"\";\r\n    }\r\n    return STR_EMPTY;\r\n}\r\nfunction _logToConsole(func, message) {\r\n    var theConsole = getConsole();\r\n    if (!!theConsole) {\r\n        var logFunc = \"log\";\r\n        if (theConsole[func]) {\r\n            logFunc = func;\r\n        }\r\n        if (isFunction(theConsole[logFunc])) {\r\n            theConsole[logFunc](message);\r\n        }\r\n    }\r\n}\r\nvar _InternalLogMessage = /** @class */ (function () {\r\n    function _InternalLogMessage(msgId, msg, isUserAct, properties) {\r\n        if (isUserAct === void 0) { isUserAct = false; }\r\n        var _self = this;\r\n        _self[_DYN_MESSAGE_ID /* @min:%2emessageId */] = msgId;\r\n        _self[_DYN_MESSAGE /* @min:%2emessage */] =\r\n            (isUserAct ? AiUserActionablePrefix : AiNonUserActionablePrefix) +\r\n                msgId;\r\n        var strProps = STR_EMPTY;\r\n        if (hasJSON()) {\r\n            strProps = getJSON().stringify(properties);\r\n        }\r\n        var diagnosticText = (msg ? \" message:\" + _sanitizeDiagnosticText(msg) : STR_EMPTY) +\r\n            (properties ? \" props:\" + _sanitizeDiagnosticText(strProps) : STR_EMPTY);\r\n        _self[_DYN_MESSAGE /* @min:%2emessage */] += diagnosticText;\r\n    }\r\n    _InternalLogMessage.dataType = \"MessageData\";\r\n    return _InternalLogMessage;\r\n}());\r\nexport { _InternalLogMessage };\r\nexport function safeGetLogger(core, config) {\r\n    return (core || {})[_DYN_LOGGER /* @min:%2elogger */] || new DiagnosticLogger(config);\r\n}\r\nvar DiagnosticLogger = /** @class */ (function () {\r\n    function DiagnosticLogger(config) {\r\n        this.identifier = \"DiagnosticLogger\";\r\n        /**\r\n         * The internal logging queue\r\n         */\r\n        this.queue = [];\r\n        /**\r\n         * Count of internal messages sent\r\n         */\r\n        var _messageCount = 0;\r\n        /**\r\n         * Holds information about what message types were already logged to console or sent to server.\r\n         */\r\n        var _messageLogged = {};\r\n        var _loggingLevelConsole;\r\n        var _loggingLevelTelemetry;\r\n        var _maxInternalMessageLimit;\r\n        var _enableDebug;\r\n        var _unloadHandler;\r\n        dynamicProto(DiagnosticLogger, this, function (_self) {\r\n            _unloadHandler = _setDefaultsFromConfig(config || {});\r\n            _self.consoleLoggingLevel = function () { return _loggingLevelConsole; };\r\n            /**\r\n             * This method will throw exceptions in debug mode or attempt to log the error as a console warning.\r\n             * @param severity - {LoggingSeverity} - The severity of the log message\r\n             * @param message - {_InternalLogMessage} - The log message.\r\n             */\r\n            _self[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */] = function (severity, msgId, msg, properties, isUserAct) {\r\n                if (isUserAct === void 0) { isUserAct = false; }\r\n                var message = new _InternalLogMessage(msgId, msg, isUserAct, properties);\r\n                if (_enableDebug) {\r\n                    throw dumpObj(message);\r\n                }\r\n                else {\r\n                    // Get the logging function and fallback to warnToConsole of for some reason errorToConsole doesn't exist\r\n                    var logFunc = _logFuncs[severity] || STR_WARN_TO_CONSOLE;\r\n                    if (!isUndefined(message[_DYN_MESSAGE /* @min:%2emessage */])) {\r\n                        if (isUserAct) {\r\n                            // check if this message type was already logged to console for this page view and if so, don't log it again\r\n                            var messageKey = +message[_DYN_MESSAGE_ID /* @min:%2emessageId */];\r\n                            if (!_messageLogged[messageKey] && _loggingLevelConsole >= severity) {\r\n                                _self[logFunc](message[_DYN_MESSAGE /* @min:%2emessage */]);\r\n                                _messageLogged[messageKey] = true;\r\n                            }\r\n                        }\r\n                        else {\r\n                            // Only log traces if the console Logging Level is >= the throwInternal severity level\r\n                            if (_loggingLevelConsole >= severity) {\r\n                                _self[logFunc](message[_DYN_MESSAGE /* @min:%2emessage */]);\r\n                            }\r\n                        }\r\n                        _logInternalMessage(severity, message);\r\n                    }\r\n                    else {\r\n                        _debugExtMsg(\"throw\" + (severity === 1 /* eLoggingSeverity.CRITICAL */ ? \"Critical\" : \"Warning\"), message);\r\n                    }\r\n                }\r\n            };\r\n            _self.debugToConsole = function (message) {\r\n                _logToConsole(\"debug\", message);\r\n                _debugExtMsg(\"warning\", message);\r\n            };\r\n            _self[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */] = function (message) {\r\n                _logToConsole(\"warn\", message);\r\n                _debugExtMsg(\"warning\", message);\r\n            };\r\n            _self.errorToConsole = function (message) {\r\n                _logToConsole(\"error\", message);\r\n                _debugExtMsg(\"error\", message);\r\n            };\r\n            _self.resetInternalMessageCount = function () {\r\n                _messageCount = 0;\r\n                _messageLogged = {};\r\n            };\r\n            _self[_DYN_LOG_INTERNAL_MESSAGE /* @min:%2elogInternalMessage */] = _logInternalMessage;\r\n            _self[_DYN_UNLOAD /* @min:%2eunload */] = function (isAsync) {\r\n                _unloadHandler && _unloadHandler.rm();\r\n                _unloadHandler = null;\r\n            };\r\n            function _logInternalMessage(severity, message) {\r\n                if (_areInternalMessagesThrottled()) {\r\n                    return;\r\n                }\r\n                // check if this message type was already logged for this session and if so, don't log it again\r\n                var logMessage = true;\r\n                var messageKey = AIInternalMessagePrefix + message[_DYN_MESSAGE_ID /* @min:%2emessageId */];\r\n                // if the session storage is not available, limit to only one message type per page view\r\n                if (_messageLogged[messageKey]) {\r\n                    logMessage = false;\r\n                }\r\n                else {\r\n                    _messageLogged[messageKey] = true;\r\n                }\r\n                if (logMessage) {\r\n                    // Push the event in the internal queue\r\n                    if (severity <= _loggingLevelTelemetry) {\r\n                        _self.queue[_DYN_PUSH /* @min:%2epush */](message);\r\n                        _messageCount++;\r\n                        _debugExtMsg((severity === 1 /* eLoggingSeverity.CRITICAL */ ? \"error\" : \"warn\"), message);\r\n                    }\r\n                    // When throttle limit reached, send a special event\r\n                    if (_messageCount === _maxInternalMessageLimit) {\r\n                        var throttleLimitMessage = \"Internal events throttle limit per PageView reached for this app.\";\r\n                        var throttleMessage = new _InternalLogMessage(23 /* _eInternalMessageId.MessageLimitPerPVExceeded */, throttleLimitMessage, false);\r\n                        _self.queue[_DYN_PUSH /* @min:%2epush */](throttleMessage);\r\n                        if (severity === 1 /* eLoggingSeverity.CRITICAL */) {\r\n                            _self.errorToConsole(throttleLimitMessage);\r\n                        }\r\n                        else {\r\n                            _self[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */](throttleLimitMessage);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            function _setDefaultsFromConfig(config) {\r\n                // make sure the config is dynamic\r\n                return onConfigChange(createDynamicConfig(config, defaultValues, _self).cfg, function (details) {\r\n                    var config = details.cfg;\r\n                    _loggingLevelConsole = config[_DYN_LOGGING_LEVEL_CONSOL4 /* @min:%2eloggingLevelConsole */];\r\n                    _loggingLevelTelemetry = config.loggingLevelTelemetry;\r\n                    _maxInternalMessageLimit = config.maxMessageLimit;\r\n                    _enableDebug = config.enableDebug;\r\n                });\r\n            }\r\n            function _areInternalMessagesThrottled() {\r\n                return _messageCount >= _maxInternalMessageLimit;\r\n            }\r\n            function _debugExtMsg(name, data) {\r\n                var dbgExt = getDebugExt(config || {});\r\n                if (dbgExt && dbgExt[_DYN_DIAG_LOG /* @min:%2ediagLog */]) {\r\n                    dbgExt[_DYN_DIAG_LOG /* @min:%2ediagLog */](name, data);\r\n                }\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for DiagnosticLogger.prototype.consoleLoggingLevel.\r\n// Removed Stub for DiagnosticLogger.prototype.throwInternal.\r\n// Removed Stub for DiagnosticLogger.prototype.debugToConsole.\r\n// Removed Stub for DiagnosticLogger.prototype.warnToConsole.\r\n// Removed Stub for DiagnosticLogger.prototype.errorToConsole.\r\n// Removed Stub for DiagnosticLogger.prototype.resetInternalMessageCount.\r\n// Removed Stub for DiagnosticLogger.prototype.logInternalMessage.\r\n// Removed Stub for DiagnosticLogger.prototype.unload.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    DiagnosticLogger.__ieDyn=1;\n\n    return DiagnosticLogger;\r\n}());\r\nexport { DiagnosticLogger };\r\nfunction _getLogger(logger) {\r\n    return (logger || new DiagnosticLogger());\r\n}\r\n/**\r\n * This is a helper method which will call throwInternal on the passed logger, will throw exceptions in\r\n * debug mode or attempt to log the error as a console warning. This helper is provided mostly to better\r\n * support minification as logger.throwInternal() will not compress the publish \"throwInternal\" used throughout\r\n * the code.\r\n * @param logger - The Diagnostic Logger instance to use.\r\n * @param severity - {LoggingSeverity} - The severity of the log message\r\n * @param message - {_InternalLogMessage} - The log message.\r\n */\r\nexport function _throwInternal(logger, severity, msgId, msg, properties, isUserAct) {\r\n    if (isUserAct === void 0) { isUserAct = false; }\r\n    _getLogger(logger)[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](severity, msgId, msg, properties, isUserAct);\r\n}\r\n/**\r\n * This is a helper method which will call warnToConsole on the passed logger with the provided message.\r\n * @param logger - The Diagnostic Logger instance to use.\r\n * @param message - {_InternalLogMessage} - The log message.\r\n */\r\nexport function _warnToConsole(logger, message) {\r\n    _getLogger(logger)[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */](message);\r\n}\r\n/**\r\n * Logs a message to the internal queue.\r\n * @param logger - The Diagnostic Logger instance to use.\r\n * @param severity - {LoggingSeverity} - The severity of the log message\r\n * @param message - {_InternalLogMessage} - The message to log.\r\n */\r\nexport function _logInternalMessage(logger, severity, message) {\r\n    _getLogger(logger)[_DYN_LOG_INTERNAL_MESSAGE /* @min:%2elogInternalMessage */](severity, message);\r\n}\r\n//# sourceMappingURL=DiagnosticLogger.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { getGlobal, strShimObject, strShimPrototype, strShimUndefined } from \"@microsoft/applicationinsights-shims\";\r\nimport { getDocument, getInst, getNavigator, getPerformance, hasNavigator, isFunction, isString, isUndefined, strIndexOf } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH, _DYN_NAME, _DYN_SPLIT, _DYN_TO_LOWER_CASE, _DYN_USER_AGENT } from \"../__DynamicConstants\";\r\nimport { strContains } from \"./HelperFuncs\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n/**\r\n * This file exists to hold environment utilities that are required to check and\r\n * validate the current operating environment. Unless otherwise required, please\r\n * only use defined methods (functions) in this class so that users of these\r\n * functions/properties only need to include those that are used within their own modules.\r\n */\r\nvar strDocumentMode = \"documentMode\";\r\nvar strLocation = \"location\";\r\nvar strConsole = \"console\";\r\nvar strJSON = \"JSON\";\r\nvar strCrypto = \"crypto\";\r\nvar strMsCrypto = \"msCrypto\";\r\nvar strReactNative = \"ReactNative\";\r\nvar strMsie = \"msie\";\r\nvar strTrident = \"trident/\";\r\nvar strXMLHttpRequest = \"XMLHttpRequest\";\r\nvar _isTrident = null;\r\nvar _navUserAgentCheck = null;\r\nvar _enableMocks = false;\r\nvar _useXDomainRequest = null;\r\nvar _beaconsSupported = null;\r\nfunction _hasProperty(theClass, property) {\r\n    var supported = false;\r\n    if (theClass) {\r\n        try {\r\n            supported = property in theClass;\r\n            if (!supported) {\r\n                var proto = theClass[strShimPrototype];\r\n                if (proto) {\r\n                    supported = property in proto;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Do Nothing\r\n        }\r\n        if (!supported) {\r\n            try {\r\n                var tmp = new theClass();\r\n                supported = !isUndefined(tmp[property]);\r\n            }\r\n            catch (e) {\r\n                // Do Nothing\r\n            }\r\n        }\r\n    }\r\n    return supported;\r\n}\r\n/**\r\n * Enable the lookup of test mock objects if requested\r\n * @param enabled\r\n */\r\nexport function setEnableEnvMocks(enabled) {\r\n    _enableMocks = enabled;\r\n}\r\n/**\r\n * Returns the global location object if it is present otherwise null.\r\n * This helper is used to access the location object without causing an exception\r\n * \"Uncaught ReferenceError: location is not defined\"\r\n */\r\nexport function getLocation(checkForMock) {\r\n    if (checkForMock && _enableMocks) {\r\n        var mockLocation = getInst(\"__mockLocation\");\r\n        if (mockLocation) {\r\n            return mockLocation;\r\n        }\r\n    }\r\n    if (typeof location === strShimObject && location) {\r\n        return location;\r\n    }\r\n    return getInst(strLocation);\r\n}\r\n/**\r\n * Returns the global console object\r\n */\r\nexport function getConsole() {\r\n    if (typeof console !== strShimUndefined) {\r\n        return console;\r\n    }\r\n    return getInst(strConsole);\r\n}\r\n/**\r\n * Checks if JSON object is available, this is required as we support the API running without a\r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a history\r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: JSON is not defined\"\r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasJSON() {\r\n    return Boolean((typeof JSON === strShimObject && JSON) || getInst(strJSON) !== null);\r\n}\r\n/**\r\n * Returns the global JSON object if it is present otherwise null.\r\n * This helper is used to access the JSON object without causing an exception\r\n * \"Uncaught ReferenceError: JSON is not defined\"\r\n */\r\nexport function getJSON() {\r\n    if (hasJSON()) {\r\n        return JSON || getInst(strJSON);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Returns the crypto object if it is present otherwise null.\r\n * This helper is used to access the crypto object from the current\r\n * global instance which could be window or globalThis for a web worker\r\n */\r\nexport function getCrypto() {\r\n    return getInst(strCrypto);\r\n}\r\n/**\r\n * Returns the crypto object if it is present otherwise null.\r\n * This helper is used to access the crypto object from the current\r\n * global instance which could be window or globalThis for a web worker\r\n */\r\nexport function getMsCrypto() {\r\n    return getInst(strMsCrypto);\r\n}\r\n/**\r\n * Returns whether the environment is reporting that we are running in a React Native Environment\r\n */\r\nexport function isReactNative() {\r\n    // If running in React Native, navigator.product will be populated\r\n    var nav = getNavigator();\r\n    if (nav && nav.product) {\r\n        return nav.product === strReactNative;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Identifies whether the current environment appears to be IE\r\n */\r\nexport function isIE() {\r\n    var nav = getNavigator();\r\n    if (nav && (nav[_DYN_USER_AGENT /* @min:%2euserAgent */] !== _navUserAgentCheck || _isTrident === null)) {\r\n        // Added to support test mocking of the user agent\r\n        _navUserAgentCheck = nav[_DYN_USER_AGENT /* @min:%2euserAgent */];\r\n        var userAgent = (_navUserAgentCheck || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n        _isTrident = (strContains(userAgent, strMsie) || strContains(userAgent, strTrident));\r\n    }\r\n    return _isTrident;\r\n}\r\n/**\r\n * Gets IE version returning the document emulation mode if we are running on IE, or null otherwise\r\n */\r\nexport function getIEVersion(userAgentStr) {\r\n    if (userAgentStr === void 0) { userAgentStr = null; }\r\n    if (!userAgentStr) {\r\n        var navigator_1 = getNavigator() || {};\r\n        userAgentStr = navigator_1 ? (navigator_1.userAgent || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() : STR_EMPTY;\r\n    }\r\n    var ua = (userAgentStr || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    // Also check for documentMode in case X-UA-Compatible meta tag was included in HTML.\r\n    if (strContains(ua, strMsie)) {\r\n        var doc = getDocument() || {};\r\n        return Math.max(parseInt(ua[_DYN_SPLIT /* @min:%2esplit */](strMsie)[1]), (doc[strDocumentMode] || 0));\r\n    }\r\n    else if (strContains(ua, strTrident)) {\r\n        var tridentVer = parseInt(ua[_DYN_SPLIT /* @min:%2esplit */](strTrident)[1]);\r\n        if (tridentVer) {\r\n            return tridentVer + 4;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function isSafari(userAgentStr) {\r\n    if (!userAgentStr || !isString(userAgentStr)) {\r\n        var navigator_2 = getNavigator() || {};\r\n        userAgentStr = navigator_2 ? (navigator_2.userAgent || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() : STR_EMPTY;\r\n    }\r\n    var ua = (userAgentStr || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    return (strIndexOf(ua, \"safari\") >= 0);\r\n}\r\n/**\r\n * Checks if HTML5 Beacons are supported in the current environment.\r\n * @param useCached - [Optional] used for testing to bypass the cached lookup, when `true` this will\r\n * cause the cached global to be reset.\r\n * @returns True if supported, false otherwise.\r\n */\r\nexport function isBeaconsSupported(useCached) {\r\n    if (_beaconsSupported === null || useCached === false) {\r\n        _beaconsSupported = hasNavigator() && Boolean(getNavigator().sendBeacon);\r\n    }\r\n    return _beaconsSupported;\r\n}\r\n/**\r\n * Checks if the Fetch API is supported in the current environment.\r\n * @param withKeepAlive - [Optional] If True, check if fetch is available and it supports the keepalive feature, otherwise only check if fetch is supported\r\n * @returns True if supported, otherwise false\r\n */\r\nexport function isFetchSupported(withKeepAlive) {\r\n    var isSupported = false;\r\n    try {\r\n        isSupported = !!getInst(\"fetch\");\r\n        var request = getInst(\"Request\");\r\n        if (isSupported && withKeepAlive && request) {\r\n            isSupported = _hasProperty(request, \"keepalive\");\r\n        }\r\n    }\r\n    catch (e) {\r\n        // Just Swallow any failure during availability checks\r\n    }\r\n    return isSupported;\r\n}\r\nexport function useXDomainRequest() {\r\n    if (_useXDomainRequest === null) {\r\n        _useXDomainRequest = (typeof XDomainRequest !== strShimUndefined);\r\n        if (_useXDomainRequest && isXhrSupported()) {\r\n            _useXDomainRequest = _useXDomainRequest && !_hasProperty(getInst(strXMLHttpRequest), \"withCredentials\");\r\n        }\r\n    }\r\n    return _useXDomainRequest;\r\n}\r\n/**\r\n * Checks if XMLHttpRequest is supported\r\n * @returns True if supported, otherwise false\r\n */\r\nexport function isXhrSupported() {\r\n    var isSupported = false;\r\n    try {\r\n        var xmlHttpRequest = getInst(strXMLHttpRequest);\r\n        isSupported = !!xmlHttpRequest;\r\n    }\r\n    catch (e) {\r\n        // Just Swallow any failure during availability checks\r\n    }\r\n    return isSupported;\r\n}\r\nfunction _getNamedValue(values, name) {\r\n    if (values) {\r\n        for (var i = 0; i < values[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n            var value = values[i];\r\n            if (value[_DYN_NAME /* @min:%2ename */]) {\r\n                if (value[_DYN_NAME /* @min:%2ename */] === name) {\r\n                    return value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {};\r\n}\r\n/**\r\n * Helper function to fetch the named meta-tag from the page.\r\n * @param name\r\n */\r\nexport function findMetaTag(name) {\r\n    var doc = getDocument();\r\n    if (doc && name) {\r\n        // Look for a meta-tag\r\n        return _getNamedValue(doc.querySelectorAll(\"meta\"), name).content;\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Helper function to fetch the named server timing value from the page response (first navigation event).\r\n * @param name\r\n */\r\nexport function findNamedServerTiming(name) {\r\n    var value;\r\n    var perf = getPerformance();\r\n    if (perf) {\r\n        // Try looking for a server-timing header\r\n        var navPerf = perf.getEntriesByType(\"navigation\") || [];\r\n        value = _getNamedValue((navPerf[_DYN_LENGTH /* @min:%2elength */] > 0 ? navPerf[0] : {}).serverTiming, name).description;\r\n    }\r\n    return value;\r\n}\r\n// TODO: should reuse this method for analytics plugin\r\nexport function dispatchEvent(target, evnt) {\r\n    if (target && target.dispatchEvent && evnt) {\r\n        target.dispatchEvent(evnt);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexport function createCustomDomEvent(eventName, details) {\r\n    var event = null;\r\n    var detail = { detail: details || null };\r\n    if (isFunction(CustomEvent)) { // Use CustomEvent constructor when available\r\n        event = new CustomEvent(eventName, detail);\r\n    }\r\n    else { // CustomEvent has no constructor in IE\r\n        var doc = getDocument();\r\n        if (doc && doc.createEvent) {\r\n            event = doc.createEvent(\"CustomEvent\");\r\n            event.initCustomEvent(eventName, true, true, detail);\r\n        }\r\n    }\r\n    return event;\r\n}\r\nexport function sendCustomEvent(evtName, cfg, customDetails) {\r\n    var global = getGlobal();\r\n    if (global && global.CustomEvent) {\r\n        try {\r\n            var details = { cfg: cfg || null, customDetails: customDetails || null };\r\n            return dispatchEvent(global, createCustomDomEvent(evtName, details));\r\n        }\r\n        catch (e) {\r\n            // eslint-disable-next-line no-empty\r\n        }\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=EnvUtils.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, getDocument, getWindow, isArray, objForEachKey, objKeys } from \"@nevware21/ts-utils\";\r\nimport { _DYN_HANDLER, _DYN_LENGTH, _DYN_NAME, _DYN_PUSH, _DYN_REPLACE, _DYN_SPLICE, _DYN_SPLIT, _DYN_TYPE } from \"../__DynamicConstants\";\r\nimport { createElmNodeData, createUniqueNamespace } from \"./DataCacheHelper\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n// Added to help with minfication\r\nvar strOnPrefix = \"on\";\r\nvar strAttachEvent = \"attachEvent\";\r\nvar strAddEventHelper = \"addEventListener\";\r\nvar strDetachEvent = \"detachEvent\";\r\nvar strRemoveEventListener = \"removeEventListener\";\r\nvar strEvents = \"events\";\r\nvar strVisibilityChangeEvt = \"visibilitychange\";\r\nvar strPageHide = \"pagehide\";\r\nvar strPageShow = \"pageshow\";\r\nvar strUnload = \"unload\";\r\nvar strBeforeUnload = \"beforeunload\";\r\nvar strPageHideNamespace = createUniqueNamespace(\"aiEvtPageHide\");\r\nvar strPageShowNamespace = createUniqueNamespace(\"aiEvtPageShow\");\r\nvar rRemoveEmptyNs = /\\.[\\.]+/g;\r\nvar rRemoveTrailingEmptyNs = /[\\.]+$/;\r\nvar _guid = 1;\r\nvar elmNodeData = createElmNodeData(\"events\");\r\nvar eventNamespace = /^([^.]*)(?:\\.(.+)|)/;\r\nfunction _normalizeNamespace(name) {\r\n    if (name && name[_DYN_REPLACE /* @min:%2ereplace */]) {\r\n        return name[_DYN_REPLACE /* @min:%2ereplace */](/^[\\s\\.]+|(?=[\\s\\.])[\\.\\s]+$/g, STR_EMPTY);\r\n    }\r\n    return name;\r\n}\r\nfunction _getEvtNamespace(eventName, evtNamespace) {\r\n    var _a;\r\n    if (evtNamespace) {\r\n        var theNamespace_1 = STR_EMPTY;\r\n        if (isArray(evtNamespace)) {\r\n            theNamespace_1 = STR_EMPTY;\r\n            arrForEach(evtNamespace, function (name) {\r\n                name = _normalizeNamespace(name);\r\n                if (name) {\r\n                    if (name[0] !== \".\") {\r\n                        name = \".\" + name;\r\n                    }\r\n                    theNamespace_1 += name;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            theNamespace_1 = _normalizeNamespace(evtNamespace);\r\n        }\r\n        if (theNamespace_1) {\r\n            if (theNamespace_1[0] !== \".\") {\r\n                theNamespace_1 = \".\" + theNamespace_1;\r\n            }\r\n            // We may only have the namespace and not an eventName\r\n            eventName = (eventName || STR_EMPTY) + theNamespace_1;\r\n        }\r\n    }\r\n    var parsedEvent = (eventNamespace.exec(eventName || STR_EMPTY) || []);\r\n    return _a = {},\r\n        _a[_DYN_TYPE /* @min:type */] = parsedEvent[1],\r\n        _a.ns = ((parsedEvent[2] || STR_EMPTY).replace(rRemoveEmptyNs, \".\").replace(rRemoveTrailingEmptyNs, STR_EMPTY)[_DYN_SPLIT /* @min:%2esplit */](\".\").sort()).join(\".\"),\r\n        _a;\r\n}\r\n/**\r\n * Get all of the registered events on the target object, this is primarily used for testing cleanup but may also be used by\r\n * applications to remove their own events\r\n * @param target - The EventTarget that has registered events\r\n * @param eventName - [Optional] The name of the event to return the registered handlers and full name (with namespaces)\r\n * @param evtNamespace - [Optional] Additional namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace,\r\n * if the eventName also includes a namespace the namespace(s) are merged into a single namespace\r\n */\r\nexport function __getRegisteredEvents(target, eventName, evtNamespace) {\r\n    var theEvents = [];\r\n    var eventCache = elmNodeData.get(target, strEvents, {}, false);\r\n    var evtName = _getEvtNamespace(eventName, evtNamespace);\r\n    objForEachKey(eventCache, function (evtType, registeredEvents) {\r\n        arrForEach(registeredEvents, function (value) {\r\n            var _a;\r\n            if (!evtName[_DYN_TYPE /* @min:%2etype */] || evtName[_DYN_TYPE /* @min:%2etype */] === value.evtName[_DYN_TYPE /* @min:%2etype */]) {\r\n                if (!evtName.ns || evtName.ns === evtName.ns) {\r\n                    theEvents[_DYN_PUSH /* @min:%2epush */]((_a = {},\r\n                        _a[_DYN_NAME /* @min:name */] = value.evtName[_DYN_TYPE /* @min:%2etype */] + (value.evtName.ns ? \".\" + value.evtName.ns : STR_EMPTY),\r\n                        _a.handler = value[_DYN_HANDLER /* @min:%2ehandler */],\r\n                        _a));\r\n                }\r\n            }\r\n        });\r\n    });\r\n    return theEvents;\r\n}\r\n// Exported for internal unit testing only\r\nfunction _getRegisteredEvents(target, evtName, addDefault) {\r\n    if (addDefault === void 0) { addDefault = true; }\r\n    var aiEvts = elmNodeData.get(target, strEvents, {}, addDefault);\r\n    var registeredEvents = aiEvts[evtName];\r\n    if (!registeredEvents) {\r\n        registeredEvents = aiEvts[evtName] = [];\r\n    }\r\n    return registeredEvents;\r\n}\r\nfunction _doDetach(obj, evtName, handlerRef, useCapture) {\r\n    if (obj && evtName && evtName[_DYN_TYPE /* @min:%2etype */]) {\r\n        if (obj[strRemoveEventListener]) {\r\n            obj[strRemoveEventListener](evtName[_DYN_TYPE /* @min:%2etype */], handlerRef, useCapture);\r\n        }\r\n        else if (obj[strDetachEvent]) {\r\n            obj[strDetachEvent](strOnPrefix + evtName[_DYN_TYPE /* @min:%2etype */], handlerRef);\r\n        }\r\n    }\r\n}\r\nfunction _doAttach(obj, evtName, handlerRef, useCapture) {\r\n    var result = false;\r\n    if (obj && evtName && evtName[_DYN_TYPE /* @min:%2etype */] && handlerRef) {\r\n        if (obj[strAddEventHelper]) {\r\n            // all browsers except IE before version 9\r\n            obj[strAddEventHelper](evtName[_DYN_TYPE /* @min:%2etype */], handlerRef, useCapture);\r\n            result = true;\r\n        }\r\n        else if (obj[strAttachEvent]) {\r\n            // IE before version 9\r\n            obj[strAttachEvent](strOnPrefix + evtName[_DYN_TYPE /* @min:%2etype */], handlerRef);\r\n            result = true;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction _doUnregister(target, events, evtName, unRegFn) {\r\n    var idx = events[_DYN_LENGTH /* @min:%2elength */];\r\n    while (idx--) {\r\n        var theEvent = events[idx];\r\n        if (theEvent) {\r\n            if (!evtName.ns || evtName.ns === theEvent.evtName.ns) {\r\n                if (!unRegFn || unRegFn(theEvent)) {\r\n                    _doDetach(target, theEvent.evtName, theEvent[_DYN_HANDLER /* @min:%2ehandler */], theEvent.capture);\r\n                    // Remove the registered event\r\n                    events[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction _unregisterEvents(target, evtName, unRegFn) {\r\n    if (evtName[_DYN_TYPE /* @min:%2etype */]) {\r\n        _doUnregister(target, _getRegisteredEvents(target, evtName[_DYN_TYPE /* @min:%2etype */]), evtName, unRegFn);\r\n    }\r\n    else {\r\n        var eventCache = elmNodeData.get(target, strEvents, {});\r\n        objForEachKey(eventCache, function (evtType, events) {\r\n            _doUnregister(target, events, evtName, unRegFn);\r\n        });\r\n        // Cleanup\r\n        if (objKeys(eventCache)[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n            elmNodeData.kill(target, strEvents);\r\n        }\r\n    }\r\n}\r\nexport function mergeEvtNamespace(theNamespace, namespaces) {\r\n    var newNamespaces;\r\n    if (namespaces) {\r\n        if (isArray(namespaces)) {\r\n            newNamespaces = [theNamespace].concat(namespaces);\r\n        }\r\n        else {\r\n            newNamespaces = [theNamespace, namespaces];\r\n        }\r\n        // resort the namespaces so they are always in order\r\n        newNamespaces = (_getEvtNamespace(\"xx\", newNamespaces).ns)[_DYN_SPLIT /* @min:%2esplit */](\".\");\r\n    }\r\n    else {\r\n        newNamespaces = theNamespace;\r\n    }\r\n    return newNamespaces;\r\n}\r\n/**\r\n * Binds the specified function to an event, so that the function gets called whenever the event fires on the object\r\n * @param obj - Object to add the event too.\r\n * @param eventName - String that specifies any of the standard DHTML Events without \"on\" prefix, if may also include an optional (dot \".\" prefixed)\r\n * namespaces \"click\" \"click.mynamespace\" in addition to specific namespaces.\r\n * @param handlerRef - Pointer that specifies the function to call when event fires\r\n * @param evtNamespace - [Optional] Additional namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace,\r\n * if the eventName also includes a namespace the namespace(s) are merged into a single namespace\r\n * @param useCapture - [Optional] Defaults to false\r\n * @returns True if the function was bound successfully to the event, otherwise false\r\n */\r\nexport function eventOn(target, eventName, handlerRef, evtNamespace, useCapture) {\r\n    var _a;\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    var result = false;\r\n    if (target) {\r\n        try {\r\n            var evtName = _getEvtNamespace(eventName, evtNamespace);\r\n            result = _doAttach(target, evtName, handlerRef, useCapture);\r\n            if (result && elmNodeData.accept(target)) {\r\n                var registeredEvent = (_a = {\r\n                        guid: _guid++,\r\n                        evtName: evtName\r\n                    },\r\n                    _a[_DYN_HANDLER /* @min:handler */] = handlerRef,\r\n                    _a.capture = useCapture,\r\n                    _a);\r\n                _getRegisteredEvents(target, evtName.type)[_DYN_PUSH /* @min:%2epush */](registeredEvent);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Just Ignore any error so that we don't break any execution path\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Removes an event handler for the specified event\r\n * @param Object - to remove the event from\r\n * @param eventName - {string} - The name of the event, with optional namespaces or just the namespaces,\r\n * such as \"click\", \"click.mynamespace\" or \".mynamespace\"\r\n * @param handlerRef - {any} - The callback function that needs to be removed from the given event, when using a\r\n * namespace (with or without a qualifying event) this may be null to remove all previously attached event handlers\r\n * otherwise this will only remove events with this specific handler.\r\n * @param evtNamespace - [Optional] Additional namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace,\r\n * if the eventName also includes a namespace the namespace(s) are merged into a single namespace\r\n * @param useCapture - [Optional] Defaults to false\r\n */\r\nexport function eventOff(target, eventName, handlerRef, evtNamespace, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    if (target) {\r\n        try {\r\n            var evtName_1 = _getEvtNamespace(eventName, evtNamespace);\r\n            var found_1 = false;\r\n            _unregisterEvents(target, evtName_1, function (regEvent) {\r\n                if ((evtName_1.ns && !handlerRef) || regEvent[_DYN_HANDLER /* @min:%2ehandler */] === handlerRef) {\r\n                    found_1 = true;\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            if (!found_1) {\r\n                // fallback to try and remove as requested\r\n                _doDetach(target, evtName_1, handlerRef, useCapture);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Just Ignore any error so that we don't break any execution path\r\n        }\r\n    }\r\n}\r\n/**\r\n * Binds the specified function to an event, so that the function gets called whenever the event fires on the object\r\n * @param obj - Object to add the event too.\r\n * @param eventNameWithoutOn - String that specifies any of the standard DHTML Events without \"on\" prefix and optional (dot \".\" prefixed) namespaces \"click\" \"click.mynamespace\".\r\n * @param handlerRef - Pointer that specifies the function to call when event fires\r\n * @param useCapture - [Optional] Defaults to false\r\n * @returns True if the function was bound successfully to the event, otherwise false\r\n */\r\nexport function attachEvent(obj, eventNameWithoutOn, handlerRef, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    return eventOn(obj, eventNameWithoutOn, handlerRef, null, useCapture);\r\n}\r\n/**\r\n * Removes an event handler for the specified event\r\n * @param Object - to remove the event from\r\n * @param eventNameWithoutOn - {string} - The name of the event, with optional namespaces or just the namespaces,\r\n * such as \"click\", \"click.mynamespace\" or \".mynamespace\"\r\n * @param handlerRef - {any} - The callback function that needs to be removed from the given event, when using a\r\n * namespace (with or without a qualifying event) this may be null to remove all previously attached event handlers\r\n * otherwise this will only remove events with this specific handler.\r\n * @param useCapture - [Optional] Defaults to false\r\n */\r\nexport function detachEvent(obj, eventNameWithoutOn, handlerRef, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    eventOff(obj, eventNameWithoutOn, handlerRef, null, useCapture);\r\n}\r\n/**\r\n * Trys to add an event handler for the specified event to the window, body and document\r\n * @param eventName - {string} - The name of the event\r\n * @param callback - {any} - The callback function that needs to be executed for the given event\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @return {boolean} - true if the handler was successfully added\r\n */\r\nexport function addEventHandler(eventName, callback, evtNamespace) {\r\n    var result = false;\r\n    var w = getWindow();\r\n    if (w) {\r\n        result = eventOn(w, eventName, callback, evtNamespace);\r\n        result = eventOn(w[\"body\"], eventName, callback, evtNamespace) || result;\r\n    }\r\n    var doc = getDocument();\r\n    if (doc) {\r\n        result = eventOn(doc, eventName, callback, evtNamespace) || result;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Trys to remove event handler(s) for the specified event/namespace to the window, body and document\r\n * @param eventName - {string} - The name of the event, with optional namespaces or just the namespaces,\r\n * such as \"click\", \"click.mynamespace\" or \".mynamespace\"\r\n * @param callback - {any} - - The callback function that needs to be removed from the given event, when using a\r\n * namespace (with or without a qualifying event) this may be null to remove all previously attached event handlers\r\n * otherwise this will only remove events with this specific handler.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n */\r\nexport function removeEventHandler(eventName, callback, evtNamespace) {\r\n    var w = getWindow();\r\n    if (w) {\r\n        eventOff(w, eventName, callback, evtNamespace);\r\n        eventOff(w[\"body\"], eventName, callback, evtNamespace);\r\n    }\r\n    var doc = getDocument();\r\n    if (doc) {\r\n        eventOff(doc, eventName, callback, evtNamespace);\r\n    }\r\n}\r\n/**\r\n * Bind the listener to the array of events\r\n * @param events - An string array of event names to bind the listener to\r\n * @param listener - The event callback to call when the event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nfunction _addEventListeners(events, listener, excludeEvents, evtNamespace) {\r\n    var added = false;\r\n    if (listener && events && events[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        arrForEach(events, function (name) {\r\n            if (name) {\r\n                if (!excludeEvents || arrIndexOf(excludeEvents, name) === -1) {\r\n                    added = addEventHandler(name, listener, evtNamespace) || added;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return added;\r\n}\r\n/**\r\n * Bind the listener to the array of events\r\n * @param events - An string array of event names to bind the listener to\r\n * @param listener - The event callback to call when the event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addEventListeners(events, listener, excludeEvents, evtNamespace) {\r\n    var added = false;\r\n    if (listener && events && isArray(events)) {\r\n        added = _addEventListeners(events, listener, excludeEvents, evtNamespace);\r\n        if (!added && excludeEvents && excludeEvents[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            // Failed to add any listeners and we excluded some, so just attempt to add the excluded events\r\n            added = _addEventListeners(events, listener, null, evtNamespace);\r\n        }\r\n    }\r\n    return added;\r\n}\r\n/**\r\n * Remove the listener from the array of events\r\n * @param events - An string array of event names to bind the listener to\r\n * @param listener - The event callback to call when the event is triggered\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n */\r\nexport function removeEventListeners(events, listener, evtNamespace) {\r\n    if (events && isArray(events)) {\r\n        arrForEach(events, function (name) {\r\n            if (name) {\r\n                removeEventHandler(name, listener, evtNamespace);\r\n            }\r\n        });\r\n    }\r\n}\r\n/**\r\n * Listen to the 'beforeunload', 'unload' and 'pagehide' events which indicates a page unload is occurring,\r\n * this does NOT listen to the 'visibilitychange' event as while it does indicate that the page is being hidden\r\n * it does not *necessarily* mean that the page is being completely unloaded, it can mean that the user is\r\n * just navigating to a different Tab and may come back (without unloading the page). As such you may also\r\n * need to listen to the 'addPageHideEventListener' and 'addPageShowEventListener' events.\r\n * @param listener - The event callback to call when a page unload event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked, unless no other events can be.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addPageUnloadEventListener(listener, excludeEvents, evtNamespace) {\r\n    // Hook the unload event for the document, window and body to ensure that the client events are flushed to the server\r\n    // As just hooking the window does not always fire (on chrome) for page navigation's.\r\n    return addEventListeners([strBeforeUnload, strUnload, strPageHide], listener, excludeEvents, evtNamespace);\r\n}\r\n/**\r\n * Remove any matching 'beforeunload', 'unload' and 'pagehide' events that may have been added via addEventListener,\r\n * addEventListeners, addPageUnloadEventListener or addPageHideEventListener.\r\n * @param listener - The specific event callback to to be removed\r\n * @param evtNamespace - [Optional] Namespace(s) uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function removePageUnloadEventListener(listener, evtNamespace) {\r\n    removeEventListeners([strBeforeUnload, strUnload, strPageHide], listener, evtNamespace);\r\n}\r\n/**\r\n * Listen to the pagehide and visibility changing to 'hidden' events, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when if you plan to call\r\n * removePageShowEventListener as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The event callback to call when a page hide event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional] A Namespace to append to the event listeners so they can be uniquely identified and removed\r\n * based on this namespace. This call also adds an additional unique \"pageshow\" namespace to the events\r\n * so that only the matching \"removePageHideEventListener\" can remove these events.\r\n * Suggestion: pass as true if you are also calling addPageUnloadEventListener as that also hooks pagehide\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addPageHideEventListener(listener, excludeEvents, evtNamespace) {\r\n    function _handlePageVisibility(evt) {\r\n        var doc = getDocument();\r\n        if (listener && doc && doc.visibilityState === \"hidden\") {\r\n            listener(evt);\r\n        }\r\n    }\r\n    // add the unique page show namespace to any provided namespace so we can only remove the ones added by \"pagehide\"\r\n    var newNamespaces = mergeEvtNamespace(strPageHideNamespace, evtNamespace);\r\n    var pageUnloadAdded = _addEventListeners([strPageHide], listener, excludeEvents, newNamespaces);\r\n    if (!excludeEvents || arrIndexOf(excludeEvents, strVisibilityChangeEvt) === -1) {\r\n        pageUnloadAdded = _addEventListeners([strVisibilityChangeEvt], _handlePageVisibility, excludeEvents, newNamespaces) || pageUnloadAdded;\r\n    }\r\n    if (!pageUnloadAdded && excludeEvents) {\r\n        // Failed to add any listeners and we where requested to exclude some, so just call again without excluding anything\r\n        pageUnloadAdded = addPageHideEventListener(listener, null, evtNamespace);\r\n    }\r\n    return pageUnloadAdded;\r\n}\r\n/**\r\n * Removes the pageHide event listeners added by addPageHideEventListener, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when calling addPageHideEventListener\r\n * as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The specific listener to remove for the 'pageshow' event only (ignored for 'visibilitychange')\r\n * @param evtNamespace - The unique namespace used when calling addPageShowEventListener\r\n */\r\nexport function removePageHideEventListener(listener, evtNamespace) {\r\n    // add the unique page show namespace to any provided namespace so we only remove the ones added by \"pagehide\"\r\n    var newNamespaces = mergeEvtNamespace(strPageHideNamespace, evtNamespace);\r\n    removeEventListeners([strPageHide], listener, newNamespaces);\r\n    removeEventListeners([strVisibilityChangeEvt], null, newNamespaces);\r\n}\r\n/**\r\n * Listen to the pageshow and visibility changing to 'visible' events, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when if you plan to call\r\n * removePageShowEventListener as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The event callback to call when a page is show event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional/Recommended] A Namespace to append to the event listeners so they can be uniquely\r\n * identified and removed based on this namespace. This call also adds an additional unique \"pageshow\" namespace to the events\r\n * so that only the matching \"removePageShowEventListener\" can remove these events.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addPageShowEventListener(listener, excludeEvents, evtNamespace) {\r\n    function _handlePageVisibility(evt) {\r\n        var doc = getDocument();\r\n        if (listener && doc && doc.visibilityState === \"visible\") {\r\n            listener(evt);\r\n        }\r\n    }\r\n    // add the unique page show namespace to any provided namespace so we can only remove the ones added by \"pageshow\"\r\n    var newNamespaces = mergeEvtNamespace(strPageShowNamespace, evtNamespace);\r\n    var pageShowAdded = _addEventListeners([strPageShow], listener, excludeEvents, newNamespaces);\r\n    pageShowAdded = _addEventListeners([strVisibilityChangeEvt], _handlePageVisibility, excludeEvents, newNamespaces) || pageShowAdded;\r\n    if (!pageShowAdded && excludeEvents) {\r\n        // Failed to add any listeners and we where requested to exclude some, so just call again without excluding anything\r\n        pageShowAdded = addPageShowEventListener(listener, null, evtNamespace);\r\n    }\r\n    return pageShowAdded;\r\n}\r\n/**\r\n * Removes the pageShow event listeners added by addPageShowEventListener, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when calling addPageShowEventListener\r\n * as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The specific listener to remove for the 'pageshow' event only (ignored for 'visibilitychange')\r\n * @param evtNamespace - The unique namespace used when calling addPageShowEventListener\r\n */\r\nexport function removePageShowEventListener(listener, evtNamespace) {\r\n    // add the unique page show namespace to any provided namespace so we only remove the ones added by \"pageshow\"\r\n    var newNamespaces = mergeEvtNamespace(strPageShowNamespace, evtNamespace);\r\n    removeEventListeners([strPageShow], listener, newNamespaces);\r\n    removeEventListeners([strVisibilityChangeEvt], null, newNamespaces);\r\n}\r\n//# sourceMappingURL=EventHelpers.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { ObjAssign, ObjClass } from \"@microsoft/applicationinsights-shims\";\r\nimport { arrForEach, asString as asString21, isArray, isBoolean, isError, isFunction, isNullOrUndefined, isNumber, isObject, isPlainObject, isString, isUndefined, objDeepFreeze, objDefine, objForEachKey, objHasOwn, strIndexOf, strTrim } from \"@nevware21/ts-utils\";\r\nimport { _DYN_APPLY, _DYN_GET_ALL_RESPONSE_HEA5, _DYN_GET_RESPONSE_HEADER, _DYN_LENGTH, _DYN_NAME, _DYN_REPLACE, _DYN_SPLIT, _DYN_STATUS, _DYN_TO_LOWER_CASE } from \"../__DynamicConstants\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n// RESTRICT and AVOID circular dependencies you should not import other contained modules or export the contents of this file directly\r\n// Added to help with minification\r\nvar strGetPrototypeOf = \"getPrototypeOf\";\r\nvar rCamelCase = /-([a-z])/g;\r\nvar rNormalizeInvalid = /([^\\w\\d_$])/g;\r\nvar rLeadingNumeric = /^(\\d+[\\w\\d_$])/;\r\nexport var _getObjProto = Object[strGetPrototypeOf];\r\nexport function isNotUndefined(value) {\r\n    return !isUndefined(value);\r\n}\r\nexport function isNotNullOrUndefined(value) {\r\n    return !isNullOrUndefined(value);\r\n}\r\n/**\r\n * Validates that the string name conforms to the JS IdentifierName specification and if not\r\n * normalizes the name so that it would. This method does not identify or change any keywords\r\n * meaning that if you pass in a known keyword the same value will be returned.\r\n * This is a simplified version\r\n * @param name - The name to validate\r\n */\r\nexport function normalizeJsName(name) {\r\n    var value = name;\r\n    if (value && isString(value)) {\r\n        // CamelCase everything after the \"-\" and remove the dash\r\n        value = value[_DYN_REPLACE /* @min:%2ereplace */](rCamelCase, function (_all, letter) {\r\n            return letter.toUpperCase();\r\n        });\r\n        value = value[_DYN_REPLACE /* @min:%2ereplace */](rNormalizeInvalid, \"_\");\r\n        value = value[_DYN_REPLACE /* @min:%2ereplace */](rLeadingNumeric, function (_all, match) {\r\n            return \"_\" + match;\r\n        });\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * A simple wrapper (for minification support) to check if the value contains the search string.\r\n * @param value - The string value to check for the existence of the search value\r\n * @param search - The value search within the value\r\n */\r\nexport function strContains(value, search) {\r\n    if (value && search) {\r\n        return strIndexOf(value, search) !== -1;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Convert a date to I.S.O. format in IE8\r\n */\r\nexport function toISOString(date) {\r\n    return date && date.toISOString() || \"\";\r\n}\r\nexport var deepFreeze = objDeepFreeze;\r\n/**\r\n * Returns the name of object if it's an Error. Otherwise, returns empty string.\r\n */\r\nexport function getExceptionName(object) {\r\n    if (isError(object)) {\r\n        return object[_DYN_NAME /* @min:%2ename */];\r\n    }\r\n    return STR_EMPTY;\r\n}\r\n/**\r\n * Sets the provided value on the target instance using the field name when the provided chk function returns true, the chk\r\n * function will only be called if the new value is no equal to the original value.\r\n * @param target - The target object\r\n * @param field - The key of the target\r\n * @param value - The value to set\r\n * @param valChk - [Optional] Callback to check the value that if supplied will be called check if the new value can be set\r\n * @param srcChk - [Optional] Callback to check to original value that if supplied will be called if the new value should be set (if allowed)\r\n * @returns The existing or new value, depending what was set\r\n */\r\nexport function setValue(target, field, value, valChk, srcChk) {\r\n    var theValue = value;\r\n    if (target) {\r\n        theValue = target[field];\r\n        if (theValue !== value && (!srcChk || srcChk(theValue)) && (!valChk || valChk(value))) {\r\n            theValue = value;\r\n            target[field] = theValue;\r\n        }\r\n    }\r\n    return theValue;\r\n}\r\n/**\r\n * Returns the current value from the target object if not null or undefined otherwise sets the new value and returns it\r\n * @param target - The target object to return or set the default value\r\n * @param field - The key for the field to set on the target\r\n * @param defValue - [Optional] The value to set if not already present, when not provided a empty object will be added\r\n */\r\nexport function getSetValue(target, field, defValue) {\r\n    var theValue;\r\n    if (target) {\r\n        theValue = target[field];\r\n        if (!theValue && isNullOrUndefined(theValue)) {\r\n            // Supports having the default as null\r\n            theValue = !isUndefined(defValue) ? defValue : {};\r\n            target[field] = theValue;\r\n        }\r\n    }\r\n    else {\r\n        // Expanded for performance so we only check defValue if required\r\n        theValue = !isUndefined(defValue) ? defValue : {};\r\n    }\r\n    return theValue;\r\n}\r\nfunction _createProxyFunction(source, funcName) {\r\n    var srcFunc = null;\r\n    var src = null;\r\n    if (isFunction(source)) {\r\n        srcFunc = source;\r\n    }\r\n    else {\r\n        src = source;\r\n    }\r\n    return function () {\r\n        // Capture the original arguments passed to the method\r\n        var originalArguments = arguments;\r\n        if (srcFunc) {\r\n            src = srcFunc();\r\n        }\r\n        if (src) {\r\n            return src[funcName][_DYN_APPLY /* @min:%2eapply */](src, originalArguments);\r\n        }\r\n    };\r\n}\r\n/**\r\n * Effectively assigns all enumerable properties (not just own properties) and functions (including inherited prototype) from\r\n * the source object to the target, it attempts to use proxy getters / setters (if possible) and proxy functions to avoid potential\r\n * implementation issues by assigning prototype functions as instance ones\r\n *\r\n * This method is the primary method used to \"update\" the snippet proxy with the ultimate implementations.\r\n *\r\n * Special ES3 Notes:\r\n * Updates (setting) of direct property values on the target or indirectly on the source object WILL NOT WORK PROPERLY, updates to the\r\n * properties of \"referenced\" object will work (target.context.newValue = 10 => will be reflected in the source.context as it's the\r\n * same object). ES3 Failures: assigning target.myProp = 3 -> Won't change source.myProp = 3, likewise the reverse would also fail.\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param chkSet - An optional callback to determine whether a specific property/function should be proxied\r\n */\r\nexport function proxyAssign(target, source, chkSet) {\r\n    if (target && source && isObject(target) && isObject(source)) {\r\n        var _loop_1 = function (field) {\r\n            if (isString(field)) {\r\n                var value = source[field];\r\n                if (isFunction(value)) {\r\n                    if (!chkSet || chkSet(field, true, source, target)) {\r\n                        // Create a proxy function rather than just copying the (possible) prototype to the new object as an instance function\r\n                        target[field] = _createProxyFunction(source, field);\r\n                    }\r\n                }\r\n                else if (!chkSet || chkSet(field, false, source, target)) {\r\n                    if (objHasOwn(target, field)) {\r\n                        // Remove any previous instance property\r\n                        delete target[field];\r\n                    }\r\n                    objDefine(target, field, {\r\n                        g: function () {\r\n                            return source[field];\r\n                        },\r\n                        s: function (theValue) {\r\n                            source[field] = theValue;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        };\r\n        // effectively apply/proxy full source to the target instance\r\n        for (var field in source) {\r\n            _loop_1(field);\r\n        }\r\n    }\r\n    return target;\r\n}\r\n/**\r\n * Creates a proxy function on the target which internally will call the source version with all arguments passed to the target method.\r\n *\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param name - The function name that will be added on the target\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param theFunc - The function name on the source that will be proxied on the target\r\n * @param overwriteTarget - If `false` this will not replace any pre-existing name otherwise (the default) it will overwrite any existing name\r\n */\r\nexport function proxyFunctionAs(target, name, source, theFunc, overwriteTarget) {\r\n    if (target && name && source) {\r\n        if (overwriteTarget !== false || isUndefined(target[name])) {\r\n            target[name] = _createProxyFunction(source, theFunc);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Creates proxy functions on the target which internally will call the source version with all arguments passed to the target method.\r\n *\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param functionsToProxy - An array of function names that will be proxied on the target\r\n * @param overwriteTarget - If false this will not replace any pre-existing name otherwise (the default) it will overwrite any existing name\r\n */\r\nexport function proxyFunctions(target, source, functionsToProxy, overwriteTarget) {\r\n    if (target && source && isObject(target) && isArray(functionsToProxy)) {\r\n        arrForEach(functionsToProxy, function (theFuncName) {\r\n            if (isString(theFuncName)) {\r\n                proxyFunctionAs(target, theFuncName, source, theFuncName, overwriteTarget);\r\n            }\r\n        });\r\n    }\r\n    return target;\r\n}\r\n/**\r\n * Simpler helper to create a dynamic class that implements the interface and populates the values with the defaults.\r\n * Only instance properties (hasOwnProperty) values are copied from the defaults to the new instance\r\n * @param defaults - Simple helper\r\n */\r\nexport function createClassFromInterface(defaults) {\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            var _this = this;\r\n            if (defaults) {\r\n                objForEachKey(defaults, function (field, value) {\r\n                    _this[field] = value;\r\n                });\r\n            }\r\n        }\r\n        return class_1;\r\n    }());\r\n}\r\n/**\r\n * A helper function to assist with JIT performance for objects that have properties added / removed dynamically\r\n * this is primarily for chromium based browsers and has limited effects on Firefox and none of IE. Only call this\r\n * function after you have finished \"updating\" the object, calling this within loops reduces or defeats the benefits.\r\n * This helps when iterating using for..in, objKeys() and objForEach()\r\n * @param theObject - The object to be optimized if possible\r\n */\r\nexport function optimizeObject(theObject) {\r\n    // V8 Optimization to cause the JIT compiler to create a new optimized object for looking up the own properties\r\n    // primarily for object with <= 19 properties for >= 20 the effect is reduced or non-existent\r\n    if (theObject && ObjAssign) {\r\n        theObject = ObjClass(ObjAssign({}, theObject));\r\n    }\r\n    return theObject;\r\n}\r\nexport function objExtend(obj1, obj2, obj3, obj4, obj5, obj6) {\r\n    // Variables\r\n    var theArgs = arguments;\r\n    var extended = theArgs[0] || {};\r\n    var argLen = theArgs[_DYN_LENGTH /* @min:%2elength */];\r\n    var deep = false;\r\n    var idx = 1;\r\n    // Check for \"Deep\" flag\r\n    if (argLen > 0 && isBoolean(extended)) {\r\n        deep = extended;\r\n        extended = theArgs[idx] || {};\r\n        idx++;\r\n    }\r\n    // Handle case when target is a string or something (possible in deep copy)\r\n    if (!isObject(extended)) {\r\n        extended = {};\r\n    }\r\n    // Loop through each remaining object and conduct a merge\r\n    for (; idx < argLen; idx++) {\r\n        var arg = theArgs[idx];\r\n        var isArgArray = isArray(arg);\r\n        var isArgObj = isObject(arg);\r\n        for (var prop in arg) {\r\n            var propOk = (isArgArray && (prop in arg)) || (isArgObj && objHasOwn(arg, prop));\r\n            if (!propOk) {\r\n                continue;\r\n            }\r\n            var newValue = arg[prop];\r\n            var isNewArray = void 0;\r\n            // If deep merge and property is an object, merge properties\r\n            if (deep && newValue && ((isNewArray = isArray(newValue)) || isPlainObject(newValue))) {\r\n                // Grab the current value of the extended object\r\n                var clone = extended[prop];\r\n                if (isNewArray) {\r\n                    if (!isArray(clone)) {\r\n                        // We can't \"merge\" an array with a non-array so overwrite the original\r\n                        clone = [];\r\n                    }\r\n                }\r\n                else if (!isPlainObject(clone)) {\r\n                    // We can't \"merge\" an object with a non-object\r\n                    clone = {};\r\n                }\r\n                // Never move the original objects always clone them\r\n                newValue = objExtend(deep, clone, newValue);\r\n            }\r\n            // Assign the new (or previous) value (unless undefined)\r\n            if (newValue !== undefined) {\r\n                extended[prop] = newValue;\r\n            }\r\n        }\r\n    }\r\n    return extended;\r\n}\r\nexport var asString = asString21;\r\nexport function isFeatureEnabled(feature, cfg) {\r\n    var rlt = false;\r\n    var ft = cfg && cfg.featureOptIn && cfg.featureOptIn[feature];\r\n    if (feature && ft) {\r\n        var mode = ft.mode;\r\n        // NOTE: None will be considered as true\r\n        rlt = (mode == 3 /* FeatureOptInMode.enable */) || (mode == 1 /* FeatureOptInMode.none */);\r\n    }\r\n    return rlt;\r\n}\r\nexport function getResponseText(xhr) {\r\n    try {\r\n        return xhr.responseText;\r\n    }\r\n    catch (e) {\r\n        // Best effort, as XHR may throw while XDR wont so just ignore\r\n    }\r\n    return null;\r\n}\r\nexport function formatErrorMessageXdr(xdr, message) {\r\n    if (xdr) {\r\n        return \"XDomainRequest,Response:\" + getResponseText(xdr) || \"\";\r\n    }\r\n    return message;\r\n}\r\nexport function formatErrorMessageXhr(xhr, message) {\r\n    if (xhr) {\r\n        return \"XMLHttpRequest,Status:\" + xhr[_DYN_STATUS /* @min:%2estatus */] + \",Response:\" + getResponseText(xhr) || xhr.response || \"\";\r\n    }\r\n    return message;\r\n}\r\nexport function prependTransports(theTransports, newTransports) {\r\n    if (newTransports) {\r\n        if (isNumber(newTransports)) {\r\n            theTransports = [newTransports].concat(theTransports);\r\n        }\r\n        else if (isArray(newTransports)) {\r\n            theTransports = newTransports.concat(theTransports);\r\n        }\r\n    }\r\n    return theTransports;\r\n}\r\nvar strDisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nvar strWithCredentials = \"withCredentials\";\r\nvar strTimeout = \"timeout\";\r\n/**\r\n * Create and open an XMLHttpRequest object\r\n * @param method - The request method\r\n * @param urlString - The url\r\n * @param withCredentials - Option flag indicating that credentials should be sent\r\n * @param disabled - Optional flag indicating that the XHR object should be marked as disabled and not tracked (default is false)\r\n * @param isSync - Optional flag indicating if the instance should be a synchronous request (defaults to false)\r\n * @param timeout - Optional value identifying the timeout value that should be assigned to the XHR request\r\n * @returns A new opened XHR request\r\n */\r\nexport function openXhr(method, urlString, withCredentials, disabled, isSync, timeout) {\r\n    if (disabled === void 0) { disabled = false; }\r\n    if (isSync === void 0) { isSync = false; }\r\n    function _wrapSetXhrProp(xhr, prop, value) {\r\n        try {\r\n            xhr[prop] = value;\r\n        }\r\n        catch (e) {\r\n            // - Wrapping as depending on the environment setting the property may fail (non-terminally)\r\n        }\r\n    }\r\n    var xhr = new XMLHttpRequest();\r\n    if (disabled) {\r\n        // Tag the instance so it's not tracked (trackDependency)\r\n        // If the environment has locked down the XMLHttpRequest (preventExtensions and/or freeze), this would\r\n        // cause the request to fail and we no telemetry would be sent\r\n        _wrapSetXhrProp(xhr, strDisabledPropertyName, disabled);\r\n    }\r\n    if (withCredentials) {\r\n        // Some libraries require that the withCredentials flag is set \"before\" open and\r\n        // - Wrapping as IE 10 has started throwing when setting before open\r\n        _wrapSetXhrProp(xhr, strWithCredentials, withCredentials);\r\n    }\r\n    xhr.open(method, urlString, !isSync);\r\n    if (withCredentials) {\r\n        // withCredentials should be set AFTER open (https://xhr.spec.whatwg.org/#the-withcredentials-attribute)\r\n        // And older firefox instances from 11+ will throw for sync events (current versions don't) which happens during unload processing\r\n        _wrapSetXhrProp(xhr, strWithCredentials, withCredentials);\r\n    }\r\n    // Only set the timeout for asynchronous requests as\r\n    // \"Timeout shouldn't be used for synchronous XMLHttpRequests requests used in a document environment or it will throw an InvalidAccessError exception.\"\"\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/timeout\r\n    if (!isSync && timeout) {\r\n        _wrapSetXhrProp(xhr, strTimeout, timeout);\r\n    }\r\n    return xhr;\r\n}\r\n/**\r\n* Converts the XHR getAllResponseHeaders to a map containing the header key and value.\r\n* @internal\r\n*/\r\n// tslint:disable-next-line: align\r\nexport function convertAllHeadersToMap(headersString) {\r\n    var headers = {};\r\n    if (isString(headersString)) {\r\n        var headersArray = strTrim(headersString)[_DYN_SPLIT /* @min:%2esplit */](/[\\r\\n]+/);\r\n        arrForEach(headersArray, function (headerEntry) {\r\n            if (headerEntry) {\r\n                var idx = headerEntry.indexOf(\": \");\r\n                if (idx !== -1) {\r\n                    // The new spec has the headers returning all as lowercase -- but not all browsers do this yet\r\n                    var header = strTrim(headerEntry.substring(0, idx))[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n                    var value = strTrim(headerEntry.substring(idx + 1));\r\n                    headers[header] = value;\r\n                }\r\n                else {\r\n                    headers[strTrim(headerEntry)] = 1;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return headers;\r\n}\r\n/**\r\n* append the XHR headers.\r\n* @internal\r\n*/\r\nexport function _appendHeader(theHeaders, xhr, name) {\r\n    if (!theHeaders[name] && xhr && xhr[_DYN_GET_RESPONSE_HEADER /* @min:%2egetResponseHeader */]) {\r\n        var value = xhr[_DYN_GET_RESPONSE_HEADER /* @min:%2egetResponseHeader */](name);\r\n        if (value) {\r\n            theHeaders[name] = strTrim(value);\r\n        }\r\n    }\r\n    return theHeaders;\r\n}\r\nvar STR_KILL_DURATION_HEADER = \"kill-duration\";\r\nvar STR_KILL_DURATION_SECONDS_HEADER = \"kill-duration-seconds\";\r\nvar STR_TIME_DELTA_HEADER = \"time-delta-millis\";\r\n/**\r\n* get the XHR getAllResponseHeaders.\r\n* @internal\r\n*/\r\nexport function _getAllResponseHeaders(xhr, isOneDs) {\r\n    var theHeaders = {};\r\n    if (!xhr[_DYN_GET_ALL_RESPONSE_HEA5 /* @min:%2egetAllResponseHeaders */]) {\r\n        // Firefox 2-63 doesn't have getAllResponseHeaders function but it does have getResponseHeader\r\n        // Only call these if getAllResponseHeaders doesn't exist, otherwise we can get invalid response errors\r\n        // as collector is not currently returning the correct header to allow JS to access these headers\r\n        if (!!isOneDs) {\r\n            theHeaders = _appendHeader(theHeaders, xhr, STR_TIME_DELTA_HEADER);\r\n            theHeaders = _appendHeader(theHeaders, xhr, STR_KILL_DURATION_HEADER);\r\n            theHeaders = _appendHeader(theHeaders, xhr, STR_KILL_DURATION_SECONDS_HEADER);\r\n        }\r\n    }\r\n    else {\r\n        theHeaders = convertAllHeadersToMap(xhr[_DYN_GET_ALL_RESPONSE_HEA5 /* @min:%2egetAllResponseHeaders */]());\r\n    }\r\n    return theHeaders;\r\n}\r\n//# sourceMappingURL=HelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// ###################################################################################################################################################\r\n// Note: DON'T Export these const from the package as we are still targeting IE/ES5 this will export a mutable variables that someone could change ###\r\n// ###################################################################################################################################################\r\nexport var UNDEFINED_VALUE = undefined;\r\nexport var STR_EMPTY = \"\";\r\nexport var STR_CHANNELS = \"channels\";\r\nexport var STR_CORE = \"core\";\r\nexport var STR_CREATE_PERF_MGR = \"createPerfMgr\";\r\nexport var STR_DISABLED = \"disabled\";\r\nexport var STR_EXTENSION_CONFIG = \"extensionConfig\";\r\nexport var STR_EXTENSIONS = \"extensions\";\r\nexport var STR_PROCESS_TELEMETRY = \"processTelemetry\";\r\nexport var STR_PRIORITY = \"priority\";\r\nexport var STR_EVENTS_SENT = \"eventsSent\";\r\nexport var STR_EVENTS_DISCARDED = \"eventsDiscarded\";\r\nexport var STR_EVENTS_SEND_REQUEST = \"eventsSendRequest\";\r\nexport var STR_PERF_EVENT = \"perfEvent\";\r\nexport var STR_OFFLINE_STORE = \"offlineEventsStored\";\r\nexport var STR_OFFLINE_SENT = \"offlineBatchSent\";\r\nexport var STR_OFFLINE_DROP = \"offlineBatchDrop\";\r\nexport var STR_GET_PERF_MGR = \"getPerfMgr\";\r\nexport var STR_DOMAIN = \"domain\";\r\nexport var STR_PATH = \"path\";\r\nexport var STR_NOT_DYNAMIC_ERROR = \"Not dynamic - \";\r\n//# sourceMappingURL=InternalConstants.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { createAllPromise, createPromise, doAwaitResponse } from \"@nevware21/ts-async\";\r\nimport { arrForEach, arrIndexOf, objDefine, safe, scheduleTimeout } from \"@nevware21/ts-utils\";\r\nimport { createDynamicConfig } from \"../Config/DynamicConfig\";\r\nimport { _DYN_ADD_NOTIFICATION_LIS1, _DYN_CANCEL, _DYN_DATA, _DYN_IS_ASYNC, _DYN_IS_CHILD_EVT, _DYN_LENGTH, _DYN_PUSH, _DYN_REMOVE_NOTIFICATION_0, _DYN_SPLICE, _DYN_UNLOAD, _DYN_WATCH } from \"../__DynamicConstants\";\r\nimport { STR_EVENTS_DISCARDED, STR_EVENTS_SEND_REQUEST, STR_EVENTS_SENT, STR_OFFLINE_DROP, STR_OFFLINE_SENT, STR_OFFLINE_STORE, STR_PERF_EVENT } from \"./InternalConstants\";\r\nvar defaultValues = {\r\n    perfEvtsSendAll: false\r\n};\r\nfunction _runScheduledListeners(asyncNotifications) {\r\n    asyncNotifications.h = null;\r\n    var callbacks = asyncNotifications.cb;\r\n    asyncNotifications.cb = [];\r\n    arrForEach(callbacks, function (cb) {\r\n        // Run the listener in a try-catch to ensure that a single listener failing doesn't prevent the others from running\r\n        safe(cb.fn, [cb.arg]);\r\n    });\r\n}\r\n// This function is used to combine the logic of running the listeners and handling the async notifications so that they don't\r\n// create multiple timers if there are multiple async listeners.\r\nfunction _runListeners(listeners, name, asyncNotifications, callback) {\r\n    arrForEach(listeners, function (listener) {\r\n        if (listener && listener[name]) {\r\n            if (asyncNotifications) {\r\n                // Schedule the callback to be called after the current call stack has cleared.\r\n                asyncNotifications.cb[_DYN_PUSH /* @min:%2epush */]({\r\n                    fn: callback,\r\n                    arg: listener\r\n                });\r\n                asyncNotifications.h = asyncNotifications.h || scheduleTimeout(_runScheduledListeners, 0, asyncNotifications);\r\n            }\r\n            else {\r\n                // Run the listener in a try-catch to ensure that a single listener failing doesn't prevent the others from running\r\n                safe(callback, [listener]);\r\n            }\r\n        }\r\n    });\r\n}\r\n/**\r\n * Class to manage sending notifications to all the listeners.\r\n */\r\nvar NotificationManager = /** @class */ (function () {\r\n    function NotificationManager(config) {\r\n        this.listeners = [];\r\n        var perfEvtsSendAll;\r\n        var unloadHandler;\r\n        var _listeners = [];\r\n        var _asyncNotifications = {\r\n            h: null,\r\n            cb: []\r\n        };\r\n        var cfgHandler = createDynamicConfig(config, defaultValues);\r\n        unloadHandler = cfgHandler[_DYN_WATCH /* @min:%2ewatch */](function (details) {\r\n            perfEvtsSendAll = !!details.cfg.perfEvtsSendAll;\r\n        });\r\n        dynamicProto(NotificationManager, this, function (_self) {\r\n            objDefine(_self, \"listeners\", {\r\n                g: function () { return _listeners; }\r\n            });\r\n            _self[_DYN_ADD_NOTIFICATION_LIS1 /* @min:%2eaddNotificationListener */] = function (listener) {\r\n                _listeners[_DYN_PUSH /* @min:%2epush */](listener);\r\n            };\r\n            /**\r\n             * Removes all instances of the listener.\r\n             * @param listener - AWTNotificationListener to remove.\r\n             */\r\n            _self[_DYN_REMOVE_NOTIFICATION_0 /* @min:%2eremoveNotificationListener */] = function (listener) {\r\n                var index = arrIndexOf(_listeners, listener);\r\n                while (index > -1) {\r\n                    _listeners[_DYN_SPLICE /* @min:%2esplice */](index, 1);\r\n                    index = arrIndexOf(_listeners, listener);\r\n                }\r\n            };\r\n            /**\r\n             * Notification for events sent.\r\n             * @param events - The array of events that have been sent.\r\n             */\r\n            _self[STR_EVENTS_SENT /* @min:%2eeventsSent */] = function (events) {\r\n                _runListeners(_listeners, STR_EVENTS_SENT, _asyncNotifications, function (listener) {\r\n                    listener[STR_EVENTS_SENT /* @min:%2eeventsSent */](events);\r\n                });\r\n            };\r\n            /**\r\n             * Notification for events being discarded.\r\n             * @param events - The array of events that have been discarded by the SDK.\r\n             * @param reason - The reason for which the SDK discarded the events. The EventsDiscardedReason\r\n             * constant should be used to check the different values.\r\n             */\r\n            _self[STR_EVENTS_DISCARDED /* @min:%2eeventsDiscarded */] = function (events, reason) {\r\n                _runListeners(_listeners, STR_EVENTS_DISCARDED, _asyncNotifications, function (listener) {\r\n                    listener[STR_EVENTS_DISCARDED /* @min:%2eeventsDiscarded */](events, reason);\r\n                });\r\n            };\r\n            /**\r\n             * [Optional] A function called when the events have been requested to be sent to the sever.\r\n             * @param sendReason - The reason why the event batch is being sent.\r\n             * @param isAsync - A flag which identifies whether the requests are being sent in an async or sync manner.\r\n             */\r\n            _self[STR_EVENTS_SEND_REQUEST /* @min:%2eeventsSendRequest */] = function (sendReason, isAsync) {\r\n                _runListeners(_listeners, STR_EVENTS_SEND_REQUEST, isAsync ? _asyncNotifications : null, function (listener) {\r\n                    listener[STR_EVENTS_SEND_REQUEST /* @min:%2eeventsSendRequest */](sendReason, isAsync);\r\n                });\r\n            };\r\n            _self[STR_PERF_EVENT /* @min:%2eperfEvent */] = function (perfEvent) {\r\n                if (perfEvent) {\r\n                    // Send all events or only parent events\r\n                    if (perfEvtsSendAll || !perfEvent[_DYN_IS_CHILD_EVT /* @min:%2eisChildEvt */]()) {\r\n                        _runListeners(_listeners, STR_PERF_EVENT, null, function (listener) {\r\n                            if (perfEvent[_DYN_IS_ASYNC /* @min:%2eisAsync */]) {\r\n                                scheduleTimeout(function () { return listener[STR_PERF_EVENT /* @min:%2eperfEvent */](perfEvent); }, 0);\r\n                            }\r\n                            else {\r\n                                listener[STR_PERF_EVENT /* @min:%2eperfEvent */](perfEvent);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            };\r\n            _self[STR_OFFLINE_STORE /* @min:%2eofflineEventsStored */] = function (events) {\r\n                if (events && events[_DYN_LENGTH /* @min:%2elength */]) {\r\n                    _runListeners(_listeners, STR_OFFLINE_STORE, _asyncNotifications, function (listener) {\r\n                        listener[STR_OFFLINE_STORE /* @min:%2eofflineEventsStored */](events);\r\n                    });\r\n                }\r\n            };\r\n            _self[STR_OFFLINE_SENT /* @min:%2eofflineBatchSent */] = function (batch) {\r\n                if (batch && batch[_DYN_DATA /* @min:%2edata */]) {\r\n                    _runListeners(_listeners, STR_OFFLINE_SENT, _asyncNotifications, function (listener) {\r\n                        listener[STR_OFFLINE_SENT /* @min:%2eofflineBatchSent */](batch);\r\n                    });\r\n                }\r\n            };\r\n            _self[STR_OFFLINE_DROP /* @min:%2eofflineBatchDrop */] = function (cnt, reason) {\r\n                if (cnt > 0) {\r\n                    var rn_1 = reason || 0; // default is unknown\r\n                    _runListeners(_listeners, STR_OFFLINE_DROP, _asyncNotifications, function (listener) {\r\n                        listener[STR_OFFLINE_DROP /* @min:%2eofflineBatchDrop */](cnt, rn_1);\r\n                    });\r\n                }\r\n            };\r\n            _self[_DYN_UNLOAD /* @min:%2eunload */] = function (isAsync) {\r\n                var _finishUnload = function () {\r\n                    unloadHandler && unloadHandler.rm();\r\n                    unloadHandler = null;\r\n                    _listeners = [];\r\n                    // Clear any async listener\r\n                    _asyncNotifications.h && _asyncNotifications.h[_DYN_CANCEL /* @min:%2ecancel */]();\r\n                    _asyncNotifications.h = null;\r\n                    _asyncNotifications.cb = [];\r\n                };\r\n                var waiting;\r\n                _runListeners(_listeners, \"unload\", null, function (listener) {\r\n                    var asyncUnload = listener[_DYN_UNLOAD /* @min:%2eunload */](isAsync);\r\n                    if (asyncUnload) {\r\n                        if (!waiting) {\r\n                            waiting = [];\r\n                        }\r\n                        waiting[_DYN_PUSH /* @min:%2epush */](asyncUnload);\r\n                    }\r\n                });\r\n                if (waiting) {\r\n                    return createPromise(function (resolve) {\r\n                        return doAwaitResponse(createAllPromise(waiting), function () {\r\n                            _finishUnload();\r\n                            resolve();\r\n                        });\r\n                    });\r\n                }\r\n                else {\r\n                    _finishUnload();\r\n                }\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for NotificationManager.prototype.addNotificationListener.\r\n// Removed Stub for NotificationManager.prototype.removeNotificationListener.\r\n// Removed Stub for NotificationManager.prototype.eventsSent.\r\n// Removed Stub for NotificationManager.prototype.eventsDiscarded.\r\n// Removed Stub for NotificationManager.prototype.eventsSendRequest.\r\n// Removed Stub for NotificationManager.prototype.perfEvent.\r\n// Removed Stub for NotificationManager.prototype.unload.\r\n// Removed Stub for NotificationManager.prototype.offlineEventsStored.\r\n// Removed Stub for NotificationManager.prototype.offlineBatchSent.\r\n// Removed Stub for NotificationManager.prototype.offlineBatchDrop.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    NotificationManager.__ieDyn=1;\n\n    return NotificationManager;\r\n}());\r\nexport { NotificationManager };\r\n//# sourceMappingURL=NotificationManager.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { isArray, isFunction, objDefine, utcNow } from \"@nevware21/ts-utils\";\r\nimport { _DYN_COMPLETE, _DYN_GET_CTX, _DYN_IS_ASYNC, _DYN_IS_CHILD_EVT, _DYN_LENGTH, _DYN_NAME, _DYN_PUSH, _DYN_SET_CTX, _DYN_TIME } from \"../__DynamicConstants\";\r\nimport { STR_GET_PERF_MGR, STR_PERF_EVENT } from \"./InternalConstants\";\r\nvar strExecutionContextKey = \"ctx\";\r\nvar strParentContextKey = \"ParentContextKey\";\r\nvar strChildrenContextKey = \"ChildrenContextKey\";\r\nvar _defaultPerfManager = null;\r\nvar PerfEvent = /** @class */ (function () {\r\n    function PerfEvent(name, payloadDetails, isAsync) {\r\n        var _self = this;\r\n        _self.start = utcNow();\r\n        _self[_DYN_NAME /* @min:%2ename */] = name;\r\n        _self[_DYN_IS_ASYNC /* @min:%2eisAsync */] = isAsync;\r\n        _self[_DYN_IS_CHILD_EVT /* @min:%2eisChildEvt */] = function () { return false; };\r\n        if (isFunction(payloadDetails)) {\r\n            // Create an accessor to minimize the potential performance impact of executing the payloadDetails callback\r\n            var theDetails_1;\r\n            objDefine(_self, \"payload\", {\r\n                g: function () {\r\n                    // Delay the execution of the payloadDetails until needed\r\n                    if (!theDetails_1 && isFunction(payloadDetails)) {\r\n                        theDetails_1 = payloadDetails();\r\n                        // clear it out now so the referenced objects can be garbage collected\r\n                        payloadDetails = null;\r\n                    }\r\n                    return theDetails_1;\r\n                }\r\n            });\r\n        }\r\n        _self[_DYN_GET_CTX /* @min:%2egetCtx */] = function (key) {\r\n            if (key) {\r\n                // The parent and child links are located directly on the object (for better viewing in the DebugPlugin)\r\n                if (key === PerfEvent[strParentContextKey] || key === PerfEvent[strChildrenContextKey]) {\r\n                    return _self[key];\r\n                }\r\n                return (_self[strExecutionContextKey] || {})[key];\r\n            }\r\n            return null;\r\n        };\r\n        _self[_DYN_SET_CTX /* @min:%2esetCtx */] = function (key, value) {\r\n            if (key) {\r\n                // Put the parent and child links directly on the object (for better viewing in the DebugPlugin)\r\n                if (key === PerfEvent[strParentContextKey]) {\r\n                    // Simple assumption, if we are setting a parent then we must be a child\r\n                    if (!_self[key]) {\r\n                        _self[_DYN_IS_CHILD_EVT /* @min:%2eisChildEvt */] = function () { return true; };\r\n                    }\r\n                    _self[key] = value;\r\n                }\r\n                else if (key === PerfEvent[strChildrenContextKey]) {\r\n                    _self[key] = value;\r\n                }\r\n                else {\r\n                    var ctx = _self[strExecutionContextKey] = _self[strExecutionContextKey] || {};\r\n                    ctx[key] = value;\r\n                }\r\n            }\r\n        };\r\n        _self[_DYN_COMPLETE /* @min:%2ecomplete */] = function () {\r\n            var childTime = 0;\r\n            var childEvts = _self[_DYN_GET_CTX /* @min:%2egetCtx */](PerfEvent[strChildrenContextKey]);\r\n            if (isArray(childEvts)) {\r\n                for (var lp = 0; lp < childEvts[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                    var childEvt = childEvts[lp];\r\n                    if (childEvt) {\r\n                        childTime += childEvt[_DYN_TIME /* @min:%2etime */];\r\n                    }\r\n                }\r\n            }\r\n            _self[_DYN_TIME /* @min:%2etime */] = utcNow() - _self.start;\r\n            _self.exTime = _self[_DYN_TIME /* @min:%2etime */] - childTime;\r\n            _self[_DYN_COMPLETE /* @min:%2ecomplete */] = function () { };\r\n        };\r\n    }\r\n    PerfEvent.ParentContextKey = \"parent\";\r\n    PerfEvent.ChildrenContextKey = \"childEvts\";\r\n    return PerfEvent;\r\n}());\r\nexport { PerfEvent };\r\nvar PerfManager = /** @class */ (function () {\r\n    function PerfManager(manager) {\r\n        /**\r\n         * General bucket used for execution context set and retrieved via setCtx() and getCtx.\r\n         * Defined as private so it can be visualized via the DebugPlugin\r\n         */\r\n        this.ctx = {};\r\n        dynamicProto(PerfManager, this, function (_self) {\r\n            _self.create = function (src, payloadDetails, isAsync) {\r\n                // TODO (@MSNev): at some point we will want to add additional configuration to \"select\" which events to instrument\r\n                // for now this is just a simple do everything.\r\n                return new PerfEvent(src, payloadDetails, isAsync);\r\n            };\r\n            _self.fire = function (perfEvent) {\r\n                if (perfEvent) {\r\n                    perfEvent[_DYN_COMPLETE /* @min:%2ecomplete */]();\r\n                    if (manager && isFunction(manager[STR_PERF_EVENT /* @min:%2eperfEvent */])) {\r\n                        manager[STR_PERF_EVENT /* @min:%2eperfEvent */](perfEvent);\r\n                    }\r\n                }\r\n            };\r\n            _self[_DYN_SET_CTX /* @min:%2esetCtx */] = function (key, value) {\r\n                if (key) {\r\n                    var ctx = _self[strExecutionContextKey] = _self[strExecutionContextKey] || {};\r\n                    ctx[key] = value;\r\n                }\r\n            };\r\n            _self[_DYN_GET_CTX /* @min:%2egetCtx */] = function (key) {\r\n                return (_self[strExecutionContextKey] || {})[key];\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for PerfManager.prototype.create.\r\n// Removed Stub for PerfManager.prototype.fire.\r\n// Removed Stub for PerfManager.prototype.setCtx.\r\n// Removed Stub for PerfManager.prototype.getCtx.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    PerfManager.__ieDyn=1;\n\n    return PerfManager;\r\n}());\r\nexport { PerfManager };\r\nvar doPerfActiveKey = \"CoreUtils.doPerf\";\r\n/**\r\n * Helper function to wrap a function with a perf event\r\n * @param mgrSource - The Performance Manager or a Performance provider source (may be null)\r\n * @param getSource - The callback to create the source name for the event (if perf monitoring is enabled)\r\n * @param func - The function to call and measure\r\n * @param details - A function to return the payload details\r\n * @param isAsync - Is the event / function being call asynchronously or synchronously\r\n */\r\nexport function doPerf(mgrSource, getSource, func, details, isAsync) {\r\n    if (mgrSource) {\r\n        var perfMgr = mgrSource;\r\n        if (perfMgr[STR_GET_PERF_MGR]) {\r\n            // Looks like a perf manager provider object\r\n            perfMgr = perfMgr[STR_GET_PERF_MGR]();\r\n        }\r\n        if (perfMgr) {\r\n            var perfEvt = void 0;\r\n            var currentActive = perfMgr[_DYN_GET_CTX /* @min:%2egetCtx */](doPerfActiveKey);\r\n            try {\r\n                perfEvt = perfMgr.create(getSource(), details, isAsync);\r\n                if (perfEvt) {\r\n                    if (currentActive && perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */]) {\r\n                        perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */](PerfEvent[strParentContextKey], currentActive);\r\n                        if (currentActive[_DYN_GET_CTX /* @min:%2egetCtx */] && currentActive[_DYN_SET_CTX /* @min:%2esetCtx */]) {\r\n                            var children = currentActive[_DYN_GET_CTX /* @min:%2egetCtx */](PerfEvent[strChildrenContextKey]);\r\n                            if (!children) {\r\n                                children = [];\r\n                                currentActive[_DYN_SET_CTX /* @min:%2esetCtx */](PerfEvent[strChildrenContextKey], children);\r\n                            }\r\n                            children[_DYN_PUSH /* @min:%2epush */](perfEvt);\r\n                        }\r\n                    }\r\n                    // Set this event as the active event now\r\n                    perfMgr[_DYN_SET_CTX /* @min:%2esetCtx */](doPerfActiveKey, perfEvt);\r\n                    return func(perfEvt);\r\n                }\r\n            }\r\n            catch (ex) {\r\n                if (perfEvt && perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */]) {\r\n                    perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */](\"exception\", ex);\r\n                }\r\n            }\r\n            finally {\r\n                // fire the perf event\r\n                if (perfEvt) {\r\n                    perfMgr.fire(perfEvt);\r\n                }\r\n                // Reset the active event to the previous value\r\n                perfMgr[_DYN_SET_CTX /* @min:%2esetCtx */](doPerfActiveKey, currentActive);\r\n            }\r\n        }\r\n    }\r\n    return func();\r\n}\r\n/**\r\n * Set the global performance manager to use when there is no core instance or it has not been initialized yet.\r\n * @param perfManager - The IPerfManager instance to use when no performance manager is supplied.\r\n */\r\nexport function setGblPerfMgr(perfManager) {\r\n    _defaultPerfManager = perfManager;\r\n}\r\n/**\r\n * Get the current global performance manager that will be used with no performance manager is supplied.\r\n * @returns - The current default manager\r\n */\r\nexport function getGblPerfMgr() {\r\n    return _defaultPerfManager;\r\n}\r\n//# sourceMappingURL=PerfManager.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { arrForEach, dumpObj, isArray, isFunction, isNullOrUndefined, isUndefined, objForEachKey, objFreeze, objKeys } from \"@nevware21/ts-utils\";\r\nimport { _applyDefaultValue } from \"../Config/ConfigDefaults\";\r\nimport { createDynamicConfig } from \"../Config/DynamicConfig\";\r\nimport { _DYN_CREATE_NEW, _DYN_DIAG_LOG, _DYN_GET_NEXT, _DYN_GET_PLUGIN, _DYN_IDENTIFIER, _DYN_IS_ASYNC, _DYN_IS_INITIALIZED, _DYN_LENGTH, _DYN_LOGGER, _DYN_PROCESS_NEXT, _DYN_PUSH, _DYN_SET_DF, _DYN_SET_NEXT_PLUGIN, _DYN_TEARDOWN, _DYN_UNLOAD, _DYN_UPDATE } from \"../__DynamicConstants\";\r\nimport { _throwInternal, safeGetLogger } from \"./DiagnosticLogger\";\r\nimport { proxyFunctions } from \"./HelperFuncs\";\r\nimport { STR_CORE, STR_DISABLED, STR_EMPTY, STR_EXTENSION_CONFIG, STR_PRIORITY, STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nimport { doPerf } from \"./PerfManager\";\r\nimport { _getPluginState } from \"./TelemetryHelpers\";\r\nvar strTelemetryPluginChain = \"TelemetryPluginChain\";\r\nvar strHasRunFlags = \"_hasRun\";\r\nvar strGetTelCtx = \"_getTelCtx\";\r\nvar _chainId = 0;\r\nfunction _getNextProxyStart(proxy, core, startAt) {\r\n    while (proxy) {\r\n        if (proxy[_DYN_GET_PLUGIN /* @min:%2egetPlugin */]() === startAt) {\r\n            return proxy;\r\n        }\r\n        proxy = proxy[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n    }\r\n    // This wasn't found in the existing chain so create an isolated one with just this plugin\r\n    return createTelemetryProxyChain([startAt], core.config || {}, core);\r\n}\r\n/**\r\n * @ignore\r\n * @param telemetryChain\r\n * @param dynamicHandler\r\n * @param core\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n * @returns\r\n */\r\nfunction _createInternalContext(telemetryChain, dynamicHandler, core, startAt) {\r\n    // We have a special case where we want to start execution from this specific plugin\r\n    // or we simply reuse the existing telemetry plugin chain (normal execution case)\r\n    var _nextProxy = null; // By Default set as no next plugin\r\n    var _onComplete = [];\r\n    if (!dynamicHandler) {\r\n        dynamicHandler = createDynamicConfig({}, null, core[_DYN_LOGGER /* @min:%2elogger */]);\r\n    }\r\n    if (startAt !== null) {\r\n        // There is no next element (null) vs not defined (undefined) so use the full chain\r\n        _nextProxy = startAt ? _getNextProxyStart(telemetryChain, core, startAt) : telemetryChain;\r\n    }\r\n    var context = {\r\n        _next: _moveNext,\r\n        ctx: {\r\n            core: function () {\r\n                return core;\r\n            },\r\n            diagLog: function () {\r\n                return safeGetLogger(core, dynamicHandler.cfg);\r\n            },\r\n            getCfg: function () {\r\n                return dynamicHandler.cfg;\r\n            },\r\n            getExtCfg: _resolveExtCfg,\r\n            getConfig: _getConfig,\r\n            hasNext: function () {\r\n                return !!_nextProxy;\r\n            },\r\n            getNext: function () {\r\n                return _nextProxy;\r\n            },\r\n            setNext: function (nextPlugin) {\r\n                _nextProxy = nextPlugin;\r\n            },\r\n            iterate: _iterateChain,\r\n            onComplete: _addOnComplete\r\n        }\r\n    };\r\n    function _addOnComplete(onComplete, that) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        if (onComplete) {\r\n            _onComplete[_DYN_PUSH /* @min:%2epush */]({\r\n                func: onComplete,\r\n                self: !isUndefined(that) ? that : context.ctx,\r\n                args: args\r\n            });\r\n        }\r\n    }\r\n    function _moveNext() {\r\n        var nextProxy = _nextProxy;\r\n        // Automatically move to the next plugin\r\n        _nextProxy = nextProxy ? nextProxy[_DYN_GET_NEXT /* @min:%2egetNext */]() : null;\r\n        if (!nextProxy) {\r\n            var onComplete = _onComplete;\r\n            if (onComplete && onComplete[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                arrForEach(onComplete, function (completeDetails) {\r\n                    try {\r\n                        completeDetails.func.call(completeDetails.self, completeDetails.args);\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternal(core[_DYN_LOGGER /* @min:%2elogger */], 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, \"Unexpected Exception during onComplete - \" + dumpObj(e));\r\n                    }\r\n                });\r\n                _onComplete = [];\r\n            }\r\n        }\r\n        return nextProxy;\r\n    }\r\n    function _getExtCfg(identifier, createIfMissing) {\r\n        var idCfg = null;\r\n        var cfg = dynamicHandler.cfg;\r\n        if (cfg && identifier) {\r\n            var extCfg = cfg[STR_EXTENSION_CONFIG /* @min:%2eextensionConfig */];\r\n            if (!extCfg && createIfMissing) {\r\n                extCfg = {};\r\n            }\r\n            // Always set the value so that the property always exists\r\n            cfg[STR_EXTENSION_CONFIG] = extCfg; // Note: it is valid for the \"value\" to be undefined\r\n            // Calling `ref()` has a side effect of causing the referenced property to become dynamic  (if not already)\r\n            extCfg = dynamicHandler.ref(cfg, STR_EXTENSION_CONFIG);\r\n            if (extCfg) {\r\n                idCfg = extCfg[identifier];\r\n                if (!idCfg && createIfMissing) {\r\n                    idCfg = {};\r\n                }\r\n                // Always set the value so that the property always exists\r\n                extCfg[identifier] = idCfg; // Note: it is valid for the \"value\" to be undefined\r\n                // Calling `ref()` has a side effect of causing the referenced property to become dynamic  (if not already)\r\n                idCfg = dynamicHandler.ref(extCfg, identifier);\r\n            }\r\n        }\r\n        return idCfg;\r\n    }\r\n    function _resolveExtCfg(identifier, defaultValues) {\r\n        var newConfig = _getExtCfg(identifier, true);\r\n        if (defaultValues) {\r\n            // Enumerate over the defaultValues and if not already populated attempt to\r\n            // find a value from the root config or use the default value\r\n            objForEachKey(defaultValues, function (field, defaultValue) {\r\n                // for each unspecified field, set the default value\r\n                if (isNullOrUndefined(newConfig[field])) {\r\n                    var cfgValue = dynamicHandler.cfg[field];\r\n                    if (cfgValue || !isNullOrUndefined(cfgValue)) {\r\n                        newConfig[field] = cfgValue;\r\n                    }\r\n                }\r\n                _applyDefaultValue(dynamicHandler, newConfig, field, defaultValue);\r\n            });\r\n        }\r\n        return dynamicHandler[_DYN_SET_DF /* @min:%2esetDf */](newConfig, defaultValues);\r\n    }\r\n    function _getConfig(identifier, field, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        var theValue;\r\n        var extConfig = _getExtCfg(identifier, false);\r\n        var rootConfig = dynamicHandler.cfg;\r\n        if (extConfig && (extConfig[field] || !isNullOrUndefined(extConfig[field]))) {\r\n            theValue = extConfig[field];\r\n        }\r\n        else if (rootConfig[field] || !isNullOrUndefined(rootConfig[field])) {\r\n            theValue = rootConfig[field];\r\n        }\r\n        return (theValue || !isNullOrUndefined(theValue)) ? theValue : defaultValue;\r\n    }\r\n    function _iterateChain(cb) {\r\n        // Keep processing until we reach the end of the chain\r\n        var nextPlugin;\r\n        while (!!(nextPlugin = context._next())) {\r\n            var plugin = nextPlugin[_DYN_GET_PLUGIN /* @min:%2egetPlugin */]();\r\n            if (plugin) {\r\n                // callback with the current on\r\n                cb(plugin);\r\n            }\r\n        }\r\n    }\r\n    return context;\r\n}\r\n/**\r\n * Creates a new Telemetry Item context with the current config, core and plugin execution chain\r\n * @param plugins - The plugin instances that will be executed\r\n * @param config - The current config\r\n * @param core - The current core instance\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n */\r\nexport function createProcessTelemetryContext(telemetryChain, cfg, core, startAt) {\r\n    var config = createDynamicConfig(cfg);\r\n    var internalContext = _createInternalContext(telemetryChain, config, core, startAt);\r\n    var context = internalContext.ctx;\r\n    function _processNext(env) {\r\n        var nextPlugin = internalContext._next();\r\n        if (nextPlugin) {\r\n            // Run the next plugin which will call \"processNext()\"\r\n            nextPlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */](env, context);\r\n        }\r\n        return !nextPlugin;\r\n    }\r\n    function _createNew(plugins, startAt) {\r\n        if (plugins === void 0) { plugins = null; }\r\n        if (isArray(plugins)) {\r\n            plugins = createTelemetryProxyChain(plugins, config.cfg, core, startAt);\r\n        }\r\n        return createProcessTelemetryContext(plugins || context[_DYN_GET_NEXT /* @min:%2egetNext */](), config.cfg, core, startAt);\r\n    }\r\n    context[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = _processNext;\r\n    context[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = _createNew;\r\n    return context;\r\n}\r\n/**\r\n * Creates a new Telemetry Item context with the current config, core and plugin execution chain for handling the unloading of the chain\r\n * @param plugins - The plugin instances that will be executed\r\n * @param config - The current config\r\n * @param core - The current core instance\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n */\r\nexport function createProcessTelemetryUnloadContext(telemetryChain, core, startAt) {\r\n    var config = createDynamicConfig(core.config);\r\n    var internalContext = _createInternalContext(telemetryChain, config, core, startAt);\r\n    var context = internalContext.ctx;\r\n    function _processNext(unloadState) {\r\n        var nextPlugin = internalContext._next();\r\n        nextPlugin && nextPlugin[_DYN_UNLOAD /* @min:%2eunload */](context, unloadState);\r\n        return !nextPlugin;\r\n    }\r\n    function _createNew(plugins, startAt) {\r\n        if (plugins === void 0) { plugins = null; }\r\n        if (isArray(plugins)) {\r\n            plugins = createTelemetryProxyChain(plugins, config.cfg, core, startAt);\r\n        }\r\n        return createProcessTelemetryUnloadContext(plugins || context[_DYN_GET_NEXT /* @min:%2egetNext */](), core, startAt);\r\n    }\r\n    context[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = _processNext;\r\n    context[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = _createNew;\r\n    return context;\r\n}\r\n/**\r\n * Creates a new Telemetry Item context with the current config, core and plugin execution chain for updating the configuration\r\n * @param plugins - The plugin instances that will be executed\r\n * @param config - The current config\r\n * @param core - The current core instance\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n */\r\nexport function createProcessTelemetryUpdateContext(telemetryChain, core, startAt) {\r\n    var config = createDynamicConfig(core.config);\r\n    var internalContext = _createInternalContext(telemetryChain, config, core, startAt);\r\n    var context = internalContext.ctx;\r\n    function _processNext(updateState) {\r\n        return context.iterate(function (plugin) {\r\n            if (isFunction(plugin[_DYN_UPDATE /* @min:%2eupdate */])) {\r\n                plugin[_DYN_UPDATE /* @min:%2eupdate */](context, updateState);\r\n            }\r\n        });\r\n    }\r\n    function _createNew(plugins, startAt) {\r\n        if (plugins === void 0) { plugins = null; }\r\n        if (isArray(plugins)) {\r\n            plugins = createTelemetryProxyChain(plugins, config.cfg, core, startAt);\r\n        }\r\n        return createProcessTelemetryUpdateContext(plugins || context[_DYN_GET_NEXT /* @min:%2egetNext */](), core, startAt);\r\n    }\r\n    context[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = _processNext;\r\n    context[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = _createNew;\r\n    return context;\r\n}\r\n/**\r\n * Creates an execution chain from the array of plugins\r\n * @param plugins - The array of plugins that will be executed in this order\r\n * @param defItemCtx - The default execution context to use when no telemetry context is passed to processTelemetry(), this\r\n * should be for legacy plugins only. Currently, only used for passing the current core instance and to provide better error\r\n * reporting (hasRun) when errors occur.\r\n */\r\nexport function createTelemetryProxyChain(plugins, config, core, startAt) {\r\n    var firstProxy = null;\r\n    var add = startAt ? false : true;\r\n    if (isArray(plugins) && plugins[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        // Create the proxies and wire up the next plugin chain\r\n        var lastProxy_1 = null;\r\n        arrForEach(plugins, function (thePlugin) {\r\n            if (!add && startAt === thePlugin) {\r\n                add = true;\r\n            }\r\n            if (add && thePlugin && isFunction(thePlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */])) {\r\n                // Only add plugins that are processors\r\n                var newProxy = createTelemetryPluginProxy(thePlugin, config, core);\r\n                if (!firstProxy) {\r\n                    firstProxy = newProxy;\r\n                }\r\n                if (lastProxy_1) {\r\n                    // Set this new proxy as the next for the previous one\r\n                    lastProxy_1._setNext(newProxy);\r\n                }\r\n                lastProxy_1 = newProxy;\r\n            }\r\n        });\r\n    }\r\n    if (startAt && !firstProxy) {\r\n        // Special case where the \"startAt\" was not in the original list of plugins\r\n        return createTelemetryProxyChain([startAt], config, core);\r\n    }\r\n    return firstProxy;\r\n}\r\n/**\r\n * Create the processing telemetry proxy instance, the proxy is used to abstract the current plugin to allow monitoring and\r\n * execution plugins while passing around the dynamic execution state (IProcessTelemetryContext), the proxy instance no longer\r\n * contains any execution state and can be reused between requests (this was not the case for 2.7.2 and earlier with the\r\n * TelemetryPluginChain class).\r\n * @param plugin - The plugin instance to proxy\r\n * @param config - The default execution context to use when no telemetry context is passed to processTelemetry(), this\r\n * should be for legacy plugins only. Currently, only used for passing the current core instance and to provide better error\r\n * reporting (hasRun) when errors occur.\r\n * @returns\r\n */\r\nexport function createTelemetryPluginProxy(plugin, config, core) {\r\n    var nextProxy = null;\r\n    var hasProcessTelemetry = isFunction(plugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */]);\r\n    var hasSetNext = isFunction(plugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */]);\r\n    var chainId;\r\n    if (plugin) {\r\n        chainId = plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] + \"-\" + plugin[STR_PRIORITY /* @min:%2epriority */] + \"-\" + _chainId++;\r\n    }\r\n    else {\r\n        chainId = \"Unknown-0-\" + _chainId++;\r\n    }\r\n    var proxyChain = {\r\n        getPlugin: function () {\r\n            return plugin;\r\n        },\r\n        getNext: function () {\r\n            return nextProxy;\r\n        },\r\n        processTelemetry: _processTelemetry,\r\n        unload: _unloadPlugin,\r\n        update: _updatePlugin,\r\n        _id: chainId,\r\n        _setNext: function (nextPlugin) {\r\n            nextProxy = nextPlugin;\r\n        }\r\n    };\r\n    function _getTelCtx() {\r\n        var itemCtx;\r\n        // Looks like a plugin didn't pass the (optional) context, so create a new one\r\n        if (plugin && isFunction(plugin[strGetTelCtx])) {\r\n            // This plugin extends from the BaseTelemetryPlugin so lets use it\r\n            itemCtx = plugin[strGetTelCtx]();\r\n        }\r\n        if (!itemCtx) {\r\n            // Create a temporary one\r\n            itemCtx = createProcessTelemetryContext(proxyChain, config, core);\r\n        }\r\n        return itemCtx;\r\n    }\r\n    function _processChain(itemCtx, processPluginFn, name, details, isAsync) {\r\n        var hasRun = false;\r\n        var identifier = plugin ? plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] : strTelemetryPluginChain;\r\n        var hasRunContext = itemCtx[strHasRunFlags];\r\n        if (!hasRunContext) {\r\n            // Assign and populate\r\n            hasRunContext = itemCtx[strHasRunFlags] = {};\r\n        }\r\n        // Ensure that we keep the context in sync\r\n        itemCtx.setNext(nextProxy);\r\n        if (plugin) {\r\n            doPerf(itemCtx[STR_CORE /* @min:%2ecore */](), function () { return identifier + \":\" + name; }, function () {\r\n                // Mark this component as having run\r\n                hasRunContext[chainId] = true;\r\n                try {\r\n                    // Set a flag on the next plugin so we know if it was attempted to be executed\r\n                    var nextId = nextProxy ? nextProxy._id : STR_EMPTY;\r\n                    if (nextId) {\r\n                        hasRunContext[nextId] = false;\r\n                    }\r\n                    hasRun = processPluginFn(itemCtx);\r\n                }\r\n                catch (error) {\r\n                    var hasNextRun = nextProxy ? hasRunContext[nextProxy._id] : true;\r\n                    if (hasNextRun) {\r\n                        // The next plugin after us has already run so set this one as complete\r\n                        hasRun = true;\r\n                    }\r\n                    if (!nextProxy || !hasNextRun) {\r\n                        // Either we have no next plugin or the current one did not attempt to call the next plugin\r\n                        // Which means the current one is the root of the failure so log/report this failure\r\n                        _throwInternal(itemCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 73 /* _eInternalMessageId.PluginException */, \"Plugin [\" + identifier + \"] failed during \" + name + \" - \" + dumpObj(error) + \", run flags: \" + dumpObj(hasRunContext));\r\n                    }\r\n                }\r\n            }, details, isAsync);\r\n        }\r\n        return hasRun;\r\n    }\r\n    function _processTelemetry(env, itemCtx) {\r\n        itemCtx = itemCtx || _getTelCtx();\r\n        function _callProcessTelemetry(itemCtx) {\r\n            if (!plugin || !hasProcessTelemetry) {\r\n                return false;\r\n            }\r\n            var pluginState = _getPluginState(plugin);\r\n            if (pluginState[_DYN_TEARDOWN /* @min:%2eteardown */] || pluginState[STR_DISABLED]) {\r\n                return false;\r\n            }\r\n            // Ensure that we keep the context in sync (for processNext()), just in case a plugin\r\n            // doesn't calls processTelemetry() instead of itemContext.processNext() or some\r\n            // other form of error occurred\r\n            if (hasSetNext) {\r\n                // Backward compatibility setting the next plugin on the instance\r\n                plugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */](nextProxy);\r\n            }\r\n            plugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */](env, itemCtx);\r\n            // Process Telemetry is expected to call itemCtx.processNext() or nextPlugin.processTelemetry()\r\n            return true;\r\n        }\r\n        if (!_processChain(itemCtx, _callProcessTelemetry, \"processTelemetry\", function () { return ({ item: env }); }, !(env.sync))) {\r\n            // The underlying plugin is either not defined, not enabled or does not have a processTelemetry implementation\r\n            // so we still want the next plugin to be executed.\r\n            itemCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](env);\r\n        }\r\n    }\r\n    function _unloadPlugin(unloadCtx, unloadState) {\r\n        function _callTeardown() {\r\n            // Setting default of hasRun as false so the proxyProcessFn() is called as teardown() doesn't have to exist or call unloadNext().\r\n            var hasRun = false;\r\n            if (plugin) {\r\n                var pluginState = _getPluginState(plugin);\r\n                var pluginCore = plugin[STR_CORE] || pluginState[STR_CORE /* @min:%2ecore */];\r\n                // Only teardown the plugin if it was initialized by the current core (i.e. It's not a shared plugin)\r\n                if (plugin && (!pluginCore || pluginCore === unloadCtx.core()) && !pluginState[_DYN_TEARDOWN /* @min:%2eteardown */]) {\r\n                    // Handle plugins that don't extend from the BaseTelemetryPlugin\r\n                    pluginState[STR_CORE /* @min:%2ecore */] = null;\r\n                    pluginState[_DYN_TEARDOWN /* @min:%2eteardown */] = true;\r\n                    pluginState[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = false;\r\n                    if (plugin[_DYN_TEARDOWN /* @min:%2eteardown */] && plugin[_DYN_TEARDOWN /* @min:%2eteardown */](unloadCtx, unloadState) === true) {\r\n                        // plugin told us that it was going to (or has) call unloadCtx.processNext()\r\n                        hasRun = true;\r\n                    }\r\n                }\r\n            }\r\n            return hasRun;\r\n        }\r\n        if (!_processChain(unloadCtx, _callTeardown, \"unload\", function () { }, unloadState[_DYN_IS_ASYNC /* @min:%2eisAsync */])) {\r\n            // Only called if we hasRun was not true\r\n            unloadCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](unloadState);\r\n        }\r\n    }\r\n    function _updatePlugin(updateCtx, updateState) {\r\n        function _callUpdate() {\r\n            // Setting default of hasRun as false so the proxyProcessFn() is called as teardown() doesn't have to exist or call unloadNext().\r\n            var hasRun = false;\r\n            if (plugin) {\r\n                var pluginState = _getPluginState(plugin);\r\n                var pluginCore = plugin[STR_CORE] || pluginState[STR_CORE /* @min:%2ecore */];\r\n                // Only update the plugin if it was initialized by the current core (i.e. It's not a shared plugin)\r\n                if (plugin && (!pluginCore || pluginCore === updateCtx.core()) && !pluginState[_DYN_TEARDOWN /* @min:%2eteardown */]) {\r\n                    if (plugin[_DYN_UPDATE /* @min:%2eupdate */] && plugin[_DYN_UPDATE /* @min:%2eupdate */](updateCtx, updateState) === true) {\r\n                        // plugin told us that it was going to (or has) call unloadCtx.processNext()\r\n                        hasRun = true;\r\n                    }\r\n                }\r\n            }\r\n            return hasRun;\r\n        }\r\n        if (!_processChain(updateCtx, _callUpdate, \"update\", function () { }, false)) {\r\n            // Only called if we hasRun was not true\r\n            updateCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](updateState);\r\n        }\r\n    }\r\n    return objFreeze(proxyChain);\r\n}\r\n/**\r\n * This class will be removed!\r\n * @deprecated use createProcessTelemetryContext() instead\r\n */\r\nvar ProcessTelemetryContext = /** @class */ (function () {\r\n    /**\r\n     * Creates a new Telemetry Item context with the current config, core and plugin execution chain\r\n     * @param plugins - The plugin instances that will be executed\r\n     * @param config - The current config\r\n     * @param core - The current core instance\r\n     */\r\n    function ProcessTelemetryContext(pluginChain, config, core, startAt) {\r\n        var _self = this;\r\n        var context = createProcessTelemetryContext(pluginChain, config, core, startAt);\r\n        // Proxy all functions of the context to this object\r\n        proxyFunctions(_self, context, objKeys(context));\r\n    }\r\n    return ProcessTelemetryContext;\r\n}());\r\nexport { ProcessTelemetryContext };\r\n//# sourceMappingURL=ProcessTelemetryContext.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { utcNow } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { getCrypto, getMsCrypto, isIE } from \"./EnvUtils\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nvar UInt32Mask = 0x100000000;\r\nvar MaxUInt32 = 0xffffffff;\r\nvar SEED1 = 123456789;\r\nvar SEED2 = 987654321;\r\n// MWC based Random generator (for IE)\r\nvar _mwcSeeded = false;\r\nvar _mwcW = SEED1;\r\nvar _mwcZ = SEED2;\r\n// Takes any integer\r\nfunction _mwcSeed(seedValue) {\r\n    if (seedValue < 0) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        seedValue >>>= 0;\r\n    }\r\n    _mwcW = (SEED1 + seedValue) & MaxUInt32;\r\n    _mwcZ = (SEED2 - seedValue) & MaxUInt32;\r\n    _mwcSeeded = true;\r\n}\r\nfunction _autoSeedMwc() {\r\n    // Simple initialization using default Math.random() - So we inherit any entropy from the browser\r\n    // and bitwise XOR with the current milliseconds\r\n    try {\r\n        var now = utcNow() & 0x7fffffff;\r\n        _mwcSeed(((Math.random() * UInt32Mask) ^ now) + now);\r\n    }\r\n    catch (e) {\r\n        // Don't crash if something goes wrong\r\n    }\r\n}\r\n/**\r\n * Generate a random value between 0 and maxValue, max value should be limited to a 32-bit maximum.\r\n * So maxValue(16) will produce a number from 0..16 (range of 17)\r\n * @param maxValue\r\n */\r\nexport function randomValue(maxValue) {\r\n    if (maxValue > 0) {\r\n        return Math.floor((random32() / MaxUInt32) * (maxValue + 1)) >>> 0;\r\n    }\r\n    return 0;\r\n}\r\n/**\r\n * generate a random 32-bit number (0x000000..0xFFFFFFFF) or (-0x80000000..0x7FFFFFFF), defaults un-unsigned.\r\n * @param signed - True to return a signed 32-bit number (-0x80000000..0x7FFFFFFF) otherwise an unsigned one (0x000000..0xFFFFFFFF)\r\n */\r\nexport function random32(signed) {\r\n    var value = 0;\r\n    var c = getCrypto() || getMsCrypto();\r\n    if (c && c.getRandomValues) {\r\n        // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n        value = c.getRandomValues(new Uint32Array(1))[0] & MaxUInt32;\r\n    }\r\n    if (value === 0 && isIE()) {\r\n        // For IE 6, 7, 8 (especially on XP) Math.random is not very random\r\n        if (!_mwcSeeded) {\r\n            // Set the seed for the Mwc algorithm\r\n            _autoSeedMwc();\r\n        }\r\n        // Don't use Math.random for IE\r\n        // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n        value = mwcRandom32() & MaxUInt32;\r\n    }\r\n    if (value === 0) {\r\n        // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n        value = Math.floor((UInt32Mask * Math.random()) | 0);\r\n    }\r\n    if (!signed) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        value >>>= 0;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Seed the MWC random number generator with the specified seed or a random value\r\n * @param value - optional the number to used as the seed, if undefined, null or zero a random value will be chosen\r\n */\r\nexport function mwcRandomSeed(value) {\r\n    if (!value) {\r\n        _autoSeedMwc();\r\n    }\r\n    else {\r\n        _mwcSeed(value);\r\n    }\r\n}\r\n/**\r\n * Generate a random 32-bit number between (0x000000..0xFFFFFFFF) or (-0x80000000..0x7FFFFFFF), using MWC (Multiply with carry)\r\n * instead of Math.random() defaults to un-signed.\r\n * Used as a replacement random generator for IE to avoid issues with older IE instances.\r\n * @param signed - True to return a signed 32-bit number (-0x80000000..0x7FFFFFFF) otherwise an unsigned one (0x000000..0xFFFFFFFF)\r\n */\r\nexport function mwcRandom32(signed) {\r\n    _mwcZ = (36969 * (_mwcZ & 0xFFFF) + (_mwcZ >> 16)) & MaxUInt32;\r\n    _mwcW = (18000 * (_mwcW & 0xFFFF) + (_mwcW >> 16)) & MaxUInt32;\r\n    var value = (((_mwcZ << 16) + (_mwcW & 0xFFFF)) >>> 0) & MaxUInt32 | 0;\r\n    if (!signed) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        value >>>= 0;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Generate random base64 id string.\r\n * The default length is 22 which is 132-bits so almost the same as a GUID but as base64 (the previous default was 5)\r\n * @param maxLength - Optional value to specify the length of the id to be generated, defaults to 22\r\n */\r\nexport function newId(maxLength) {\r\n    if (maxLength === void 0) { maxLength = 22; }\r\n    var base64chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n    // Start with an initial random number, consuming the value in reverse byte order\r\n    var number = random32() >>> 0; // Make sure it's a +ve number\r\n    var chars = 0;\r\n    var result = STR_EMPTY;\r\n    while (result[_DYN_LENGTH /* @min:%2elength */] < maxLength) {\r\n        chars++;\r\n        result += base64chars.charAt(number & 0x3F);\r\n        number >>>= 6; // Zero fill with right shift\r\n        if (chars === 5) {\r\n            // 5 base64 characters === 30 bits so we don't have enough bits for another base64 char\r\n            // So add on another 30 bits and make sure it's +ve\r\n            number = (((random32() << 2) & 0xFFFFFFFF) | (number & 0x03)) >>> 0;\r\n            chars = 0; // We need to reset the number every 5 chars (30 bits)\r\n        }\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=RandomHelper.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_ITEMS_RECEIVED, _DYN_LENGTH, _DYN_NAME } from \"../__DynamicConstants\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nimport { getJSON } from \"./EnvUtils\";\r\n/**\r\n * Parses the response from the backend.\r\n * @param response - XMLHttpRequest or XDomainRequest response\r\n */\r\nexport function parseResponse(response, diagLog) {\r\n    try {\r\n        if (response && response !== \"\") {\r\n            var result = getJSON().parse(response);\r\n            if (result && result[_DYN_ITEMS_RECEIVED /* @min:%2eitemsReceived */] && result[_DYN_ITEMS_RECEIVED /* @min:%2eitemsReceived */] >= result.itemsAccepted &&\r\n                result.itemsReceived - result.itemsAccepted === result.errors[_DYN_LENGTH /* @min:%2elength */]) {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        _throwInternal(diagLog, 1 /* eLoggingSeverity.CRITICAL */, 43 /* _eInternalMessageId.InvalidBackendResponse */, \"Cannot parse the response. \" + (e[_DYN_NAME /* @min:%2ename */] || dumpObj(e)), {\r\n            response: response\r\n        });\r\n    }\r\n    return null;\r\n}\r\n//# sourceMappingURL=ResponseHelpers.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { createPromise, doAwaitResponse } from \"@nevware21/ts-async\";\r\nimport { arrForEach, dumpObj, getNavigator, getWindow, isFunction, objKeys } from \"@nevware21/ts-utils\";\r\nimport { _DYN_DATA, _DYN_HEADERS, _DYN_INITIALIZE, _DYN_LENGTH, _DYN_MESSAGE, _DYN_PROTOCOL, _DYN_REPLACE, _DYN_SEND_POST, _DYN_SET_REQUEST_HEADER, _DYN_STATUS, _DYN_TIMEOUT, _DYN_TO_LOWER_CASE, _DYN_URL_STRING, _DYN_VALUE, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { DisabledPropertyName } from \"./Constants\";\r\nimport { _throwInternal, _warnToConsole } from \"./DiagnosticLogger\";\r\nimport { getLocation, isBeaconsSupported, isFetchSupported, isXhrSupported, useXDomainRequest } from \"./EnvUtils\";\r\nimport { _getAllResponseHeaders, formatErrorMessageXdr, formatErrorMessageXhr, getResponseText, openXhr } from \"./HelperFuncs\";\r\nvar STR_EMPTY = \"\";\r\nvar STR_NO_RESPONSE_BODY = \"NoResponseBody\";\r\nvar _noResponseQs = \"&\" + STR_NO_RESPONSE_BODY + \"=true\";\r\nvar STR_POST_METHOD = \"POST\";\r\n/**\r\n * This Internal component\r\n * Manager SendPost functions\r\n * SendPostManger\r\n * @internal for internal use only\r\n */\r\nvar SenderPostManager = /** @class */ (function () {\r\n    function SenderPostManager() {\r\n        var _syncFetchPayload = 0; // Keep track of the outstanding sync fetch payload total (as sync fetch has limits)\r\n        var _enableSendPromise;\r\n        var _isInitialized;\r\n        var _diagLog;\r\n        var _isOneDs;\r\n        var _onCompleteFuncs;\r\n        var _disableCredentials;\r\n        var _fetchCredentials;\r\n        var _fallbackInst;\r\n        var _disableXhr;\r\n        var _disableBeacon;\r\n        var _disableBeaconSync;\r\n        var _disableFetchKeepAlive;\r\n        var _addNoResponse;\r\n        var _timeoutWrapper;\r\n        dynamicProto(SenderPostManager, this, function (_self, _base) {\r\n            var _sendCredentials = true; // for 1ds\r\n            _initDefaults();\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (config, diagLog) {\r\n                _diagLog = diagLog;\r\n                if (_isInitialized) {\r\n                    _throwInternal(_diagLog, 1 /* eLoggingSeverity.CRITICAL */, 28 /* _eInternalMessageId.SenderNotInitialized */, \"Sender is already initialized\");\r\n                }\r\n                _self.SetConfig(config);\r\n                _isInitialized = true;\r\n            };\r\n            _self[\"_getDbgPlgTargets\"] = function () {\r\n                return [_isInitialized, _isOneDs, _disableCredentials, _enableSendPromise];\r\n            };\r\n            // This componet might get its config from sender, offline sender, 1ds post\r\n            // so set this function to mock dynamic changes\r\n            _self.SetConfig = function (config) {\r\n                try {\r\n                    _onCompleteFuncs = config.senderOnCompleteCallBack || {};\r\n                    _disableCredentials = !!config.disableCredentials;\r\n                    _fetchCredentials = config.fetchCredentials;\r\n                    _isOneDs = !!config.isOneDs;\r\n                    _enableSendPromise = !!config.enableSendPromise;\r\n                    _disableXhr = !!config.disableXhr;\r\n                    _disableBeacon = !!config.disableBeacon;\r\n                    _disableBeaconSync = !!config.disableBeaconSync;\r\n                    _timeoutWrapper = config.timeWrapper;\r\n                    _addNoResponse = !!config.addNoResponse;\r\n                    _disableFetchKeepAlive = !!config.disableFetchKeepAlive;\r\n                    _fallbackInst = { sendPOST: _xhrSender };\r\n                    if (!_isOneDs) {\r\n                        _sendCredentials = false; // for appInsights, set it to false always\r\n                    }\r\n                    if (_disableCredentials) {\r\n                        var location_1 = getLocation();\r\n                        if (location_1 && location_1.protocol && location_1.protocol[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() === \"file:\") {\r\n                            // Special case where a local html file fails with a CORS error on Chromium browsers\r\n                            _sendCredentials = false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return false;\r\n            };\r\n            _self.getSyncFetchPayload = function () {\r\n                return _syncFetchPayload;\r\n            };\r\n            _self.getSenderInst = function (transports, sync) {\r\n                if (transports && transports[_DYN_LENGTH /* @min:%2elength */]) {\r\n                    return _getSenderInterface(transports, sync);\r\n                }\r\n                return null;\r\n            };\r\n            _self.getFallbackInst = function () {\r\n                return _fallbackInst;\r\n            };\r\n            _self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */] = function (unloadCtx, unloadState) {\r\n                _initDefaults();\r\n            };\r\n            /**\r\n             * success handler\r\n             */\r\n            function _onSuccess(res, onComplete) {\r\n                _doOnComplete(onComplete, 200, {}, res);\r\n            }\r\n            /**\r\n             * error handler\r\n             */\r\n            function _onError(message, onComplete) {\r\n                _throwInternal(_diagLog, 2 /* eLoggingSeverity.WARNING */, 26 /* _eInternalMessageId.OnError */, \"Failed to send telemetry.\", { message: message });\r\n                _doOnComplete(onComplete, 400, {});\r\n            }\r\n            function _onNoPayloadUrl(onComplete) {\r\n                _onError(\"No endpoint url is provided for the batch\", onComplete);\r\n            }\r\n            function _getSenderInterface(transports, syncSupport) {\r\n                var _a;\r\n                var transportType = 0 /* TransportType.NotSet */;\r\n                var sendPostFunc = null;\r\n                var lp = 0;\r\n                while (sendPostFunc == null && lp < transports[_DYN_LENGTH /* @min:%2elength */]) {\r\n                    transportType = transports[lp];\r\n                    if (!_disableXhr && transportType === 1 /* TransportType.Xhr */) {\r\n                        if (useXDomainRequest()) {\r\n                            // IE 8 and 9\r\n                            sendPostFunc = _xdrSender;\r\n                        }\r\n                        else if (isXhrSupported()) {\r\n                            sendPostFunc = _xhrSender;\r\n                        }\r\n                    }\r\n                    else if (transportType === 2 /* TransportType.Fetch */ && isFetchSupported(syncSupport) && (!syncSupport || !_disableFetchKeepAlive)) {\r\n                        sendPostFunc = _doFetchSender;\r\n                    }\r\n                    else if (transportType === 3 /* TransportType.Beacon */ && isBeaconsSupported() && (syncSupport ? !_disableBeaconSync : !_disableBeacon)) {\r\n                        sendPostFunc = _beaconSender;\r\n                    }\r\n                    lp++;\r\n                }\r\n                if (sendPostFunc) {\r\n                    return _a = {\r\n                            _transport: transportType,\r\n                            _isSync: syncSupport\r\n                        },\r\n                        _a[_DYN_SEND_POST /* @min:sendPOST */] = sendPostFunc,\r\n                        _a;\r\n                }\r\n                return null;\r\n            }\r\n            function _doOnComplete(oncomplete, status, headers, response) {\r\n                try {\r\n                    oncomplete && oncomplete(status, headers, response);\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n            }\r\n            function _doBeaconSend(payload, oncomplete) {\r\n                var nav = getNavigator();\r\n                var url = payload[_DYN_URL_STRING /* @min:%2eurlString */];\r\n                if (!url) {\r\n                    _onNoPayloadUrl(oncomplete);\r\n                    // return true here, because we don't want to retry it with fallback sender\r\n                    return true;\r\n                }\r\n                url = payload[_DYN_URL_STRING /* @min:%2eurlString */] + (_addNoResponse ? _noResponseQs : STR_EMPTY);\r\n                var data = payload[_DYN_DATA /* @min:%2edata */];\r\n                // Chrome only allows CORS-safelisted values for the sendBeacon data argument\r\n                // see: https://bugs.chromium.org/p/chromium/issues/detail?id=720283\r\n                // Chrome only allows CORS-safelisted values for the sendBeacon data argument\r\n                // see: https://bugs.chromium.org/p/chromium/issues/detail?id=720283\r\n                var plainTextBatch = _isOneDs ? data : new Blob([data], { type: \"text/plain;charset=UTF-8\" });\r\n                // The sendBeacon method returns true if the user agent is able to successfully queue the data for transfer. Otherwise it returns false.\r\n                var queued = nav.sendBeacon(url, plainTextBatch);\r\n                return queued;\r\n            }\r\n            /**\r\n             * Send Beacon API request\r\n             * @param payload - {string} - The data payload to be sent.\r\n             * @param sync - {boolean} - not used\r\n             * Note: Beacon API does not support custom headers and we are not able to get\r\n             * appId from the backend for the correct correlation.\r\n             */\r\n            function _beaconSender(payload, oncomplete, sync) {\r\n                var data = payload[_DYN_DATA /* @min:%2edata */];\r\n                try {\r\n                    if (data) {\r\n                        // The sendBeacon method returns true if the user agent is able to successfully queue the data for transfer. Otherwise it returns false.\r\n                        if (!_doBeaconSend(payload, oncomplete)) {\r\n                            var onRetry = _onCompleteFuncs && _onCompleteFuncs.beaconOnRetry;\r\n                            if (onRetry && isFunction(onRetry)) {\r\n                                onRetry(payload, oncomplete, _doBeaconSend);\r\n                            }\r\n                            else {\r\n                                _fallbackInst && _fallbackInst[_DYN_SEND_POST /* @min:%2esendPOST */](payload, oncomplete, true);\r\n                                _throwInternal(_diagLog, 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" + \"Failed to send telemetry with Beacon API, retried with normal sender.\");\r\n                            }\r\n                        }\r\n                        else {\r\n                            // if can send\r\n                            _onSuccess(STR_EMPTY, oncomplete);\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _isOneDs && _warnToConsole(_diagLog, \"Failed to send telemetry using sendBeacon API. Ex:\" + dumpObj(e));\r\n                    _doOnComplete(oncomplete, _isOneDs ? 0 : 400, {}, STR_EMPTY);\r\n                }\r\n                return;\r\n            }\r\n            /**\r\n             * Send XMLHttpRequest\r\n             * @param payload - {string} - The data payload to be sent.\r\n             * @param sync - {boolean} - Indicates if the request should be sent synchronously\r\n             */\r\n            function _xhrSender(payload, oncomplete, sync) {\r\n                //let  internalPayload = payload as IInternalPayloadData;\r\n                var thePromise;\r\n                var resolveFunc;\r\n                var rejectFunc;\r\n                var headers = payload[_DYN_HEADERS /* @min:%2eheaders */] || {};\r\n                if (!sync && _enableSendPromise) {\r\n                    thePromise = createPromise(function (resolve, reject) {\r\n                        resolveFunc = resolve;\r\n                        rejectFunc = reject;\r\n                    });\r\n                }\r\n                if (_isOneDs && sync && payload.disableXhrSync) {\r\n                    sync = false;\r\n                }\r\n                //const xhr = new XMLHttpRequest();\r\n                var endPointUrl = payload[_DYN_URL_STRING /* @min:%2eurlString */];\r\n                if (!endPointUrl) {\r\n                    _onNoPayloadUrl(oncomplete);\r\n                    resolveFunc && resolveFunc(false);\r\n                    return;\r\n                }\r\n                var xhr = openXhr(STR_POST_METHOD, endPointUrl, _sendCredentials, true, sync, payload[_DYN_TIMEOUT /* @min:%2etimeout */]);\r\n                if (!_isOneDs) {\r\n                    // application/json should NOT add to 1ds post by default\r\n                    xhr[_DYN_SET_REQUEST_HEADER /* @min:%2esetRequestHeader */](\"Content-type\", \"application/json\");\r\n                }\r\n                arrForEach(objKeys(headers), function (headerName) {\r\n                    xhr[_DYN_SET_REQUEST_HEADER /* @min:%2esetRequestHeader */](headerName, headers[headerName]);\r\n                });\r\n                xhr.onreadystatechange = function () {\r\n                    if (!_isOneDs) {\r\n                        _doOnReadyFunc(xhr);\r\n                        if (xhr.readyState === 4) {\r\n                            resolveFunc && resolveFunc(true);\r\n                        }\r\n                    }\r\n                };\r\n                xhr.onload = function () {\r\n                    if (_isOneDs) {\r\n                        _doOnReadyFunc(xhr);\r\n                    }\r\n                };\r\n                function _doOnReadyFunc(xhr) {\r\n                    var onReadyFunc = _onCompleteFuncs && _onCompleteFuncs.xhrOnComplete;\r\n                    var onReadyFuncExist = onReadyFunc && isFunction(onReadyFunc);\r\n                    if (onReadyFuncExist) {\r\n                        onReadyFunc(xhr, oncomplete, payload);\r\n                    }\r\n                    else {\r\n                        var response = getResponseText(xhr);\r\n                        _doOnComplete(oncomplete, xhr[_DYN_STATUS /* @min:%2estatus */], _getAllResponseHeaders(xhr, _isOneDs), response);\r\n                    }\r\n                }\r\n                xhr.onerror = function (event) {\r\n                    _doOnComplete(oncomplete, _isOneDs ? xhr[_DYN_STATUS /* @min:%2estatus */] : 400, _getAllResponseHeaders(xhr, _isOneDs), _isOneDs ? STR_EMPTY : formatErrorMessageXhr(xhr));\r\n                    rejectFunc && rejectFunc(event);\r\n                };\r\n                xhr.ontimeout = function () {\r\n                    _doOnComplete(oncomplete, _isOneDs ? xhr[_DYN_STATUS /* @min:%2estatus */] : 500, _getAllResponseHeaders(xhr, _isOneDs), _isOneDs ? STR_EMPTY : formatErrorMessageXhr(xhr));\r\n                    resolveFunc && resolveFunc(false);\r\n                };\r\n                xhr.send(payload[_DYN_DATA /* @min:%2edata */]);\r\n                return thePromise;\r\n            }\r\n            /**\r\n             * Send fetch API request\r\n             * @param payload - {string} - The data payload to be sent.\r\n             * @param sync - {boolean} - For fetch this identifies whether we are \"unloading\" (false) or a normal request\r\n             */\r\n            function _doFetchSender(payload, oncomplete, sync) {\r\n                var _a;\r\n                var endPointUrl = payload[_DYN_URL_STRING /* @min:%2eurlString */];\r\n                var batch = payload[_DYN_DATA /* @min:%2edata */];\r\n                var plainTextBatch = _isOneDs ? batch : new Blob([batch], { type: \"application/json\" });\r\n                var thePromise;\r\n                var resolveFunc;\r\n                var rejectFunc;\r\n                var requestHeaders = new Headers();\r\n                var batchLength = batch[_DYN_LENGTH /* @min:%2elength */];\r\n                var ignoreResponse = false;\r\n                var responseHandled = false;\r\n                var headers = payload[_DYN_HEADERS /* @min:%2eheaders */] || {};\r\n                //TODO: handle time out for 1ds\r\n                var init = (_a = {\r\n                        method: STR_POST_METHOD,\r\n                        body: plainTextBatch\r\n                    },\r\n                    _a[DisabledPropertyName] = true // Mark so we don't attempt to track this request\r\n                ,\r\n                    _a);\r\n                // Only add headers if there are headers to add, due to issue with some polyfills\r\n                if (payload.headers && objKeys(payload.headers)[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    arrForEach(objKeys(headers), function (headerName) {\r\n                        requestHeaders.append(headerName, headers[headerName]);\r\n                    });\r\n                    init[_DYN_HEADERS /* @min:%2eheaders */] = requestHeaders;\r\n                }\r\n                if (_fetchCredentials) { // if user passed in this value via post channel (1ds), then use it\r\n                    init.credentials = _fetchCredentials;\r\n                }\r\n                else if (_sendCredentials && _isOneDs) {\r\n                    // for 1ds, Don't send credentials when URL is file://\r\n                    init.credentials = \"include\";\r\n                }\r\n                if (sync) {\r\n                    init.keepalive = true;\r\n                    _syncFetchPayload += batchLength;\r\n                    if (_isOneDs) {\r\n                        if (payload[\"_sendReason\"] === 2 /* SendRequestReason.Unload */) {\r\n                            // As a sync request (during unload), it is unlikely that we will get a chance to process the response so\r\n                            // just like beacon send assume that the events have been accepted and processed\r\n                            ignoreResponse = true;\r\n                            if (_addNoResponse) {\r\n                                endPointUrl += _noResponseQs;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        // for appinsights, set to true for all sync request\r\n                        ignoreResponse = true;\r\n                    }\r\n                }\r\n                var request = new Request(endPointUrl, init);\r\n                try {\r\n                    // Also try and tag the request (just in case the value in init is not copied over)\r\n                    request[DisabledPropertyName] = true;\r\n                }\r\n                catch (e) {\r\n                    // If the environment has locked down the XMLHttpRequest (preventExtensions and/or freeze), this would\r\n                    // cause the request to fail and we no telemetry would be sent\r\n                }\r\n                if (!sync && _enableSendPromise) {\r\n                    thePromise = createPromise(function (resolve, reject) {\r\n                        resolveFunc = resolve;\r\n                        rejectFunc = reject;\r\n                    });\r\n                }\r\n                if (!endPointUrl) {\r\n                    _onNoPayloadUrl(oncomplete);\r\n                    resolveFunc && resolveFunc(false);\r\n                    return;\r\n                }\r\n                function _handleError(res) {\r\n                    // In case there is an error in the request. Set the status to 0 for 1ds and 400 for appInsights\r\n                    // so that the events can be retried later.\r\n                    _doOnComplete(oncomplete, _isOneDs ? 0 : 400, {}, _isOneDs ? STR_EMPTY : res);\r\n                }\r\n                function _onFetchComplete(response, payload, value) {\r\n                    var status = response[_DYN_STATUS /* @min:%2estatus */];\r\n                    var onCompleteFunc = _onCompleteFuncs.fetchOnComplete;\r\n                    if (onCompleteFunc && isFunction(onCompleteFunc)) {\r\n                        onCompleteFunc(response, oncomplete, value || STR_EMPTY, payload);\r\n                    }\r\n                    else {\r\n                        _doOnComplete(oncomplete, status, {}, value || STR_EMPTY);\r\n                    }\r\n                }\r\n                try {\r\n                    doAwaitResponse(fetch(_isOneDs ? endPointUrl : request, _isOneDs ? init : null), function (result) {\r\n                        if (sync) {\r\n                            _syncFetchPayload -= batchLength;\r\n                            batchLength = 0;\r\n                        }\r\n                        if (!responseHandled) {\r\n                            responseHandled = true;\r\n                            if (!result.rejected) {\r\n                                var response_1 = result[_DYN_VALUE /* @min:%2evalue */];\r\n                                try {\r\n                                    /**\r\n                                     * The Promise returned from fetch() won’t reject on HTTP error status even if the response is an HTTP 404 or 500.\r\n                                     * Instead, it will resolve normally (with ok status set to false), and it will only reject on network failure\r\n                                     * or if anything prevented the request from completing.\r\n                                     */\r\n                                    if (!_isOneDs && !response_1.ok) {\r\n                                        // this is for appInsights only\r\n                                        _handleError(response_1.statusText);\r\n                                        resolveFunc && resolveFunc(false);\r\n                                    }\r\n                                    else {\r\n                                        if (_isOneDs && !response_1.body) {\r\n                                            _onFetchComplete(response_1, null, STR_EMPTY);\r\n                                            resolveFunc && resolveFunc(true);\r\n                                        }\r\n                                        else {\r\n                                            doAwaitResponse(response_1.text(), function (resp) {\r\n                                                _onFetchComplete(response_1, payload, resp[_DYN_VALUE /* @min:%2evalue */]);\r\n                                                resolveFunc && resolveFunc(true);\r\n                                            });\r\n                                        }\r\n                                    }\r\n                                }\r\n                                catch (e) {\r\n                                    _handleError(dumpObj(e));\r\n                                    rejectFunc && rejectFunc(e);\r\n                                }\r\n                            }\r\n                            else {\r\n                                _handleError(result.reason && result.reason[_DYN_MESSAGE /* @min:%2emessage */]);\r\n                                rejectFunc && rejectFunc(result.reason);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                catch (e) {\r\n                    if (!responseHandled) {\r\n                        _handleError(dumpObj(e));\r\n                        rejectFunc && rejectFunc(e);\r\n                    }\r\n                }\r\n                if (ignoreResponse && !responseHandled) {\r\n                    // Assume success during unload processing as we most likely won't get the response\r\n                    responseHandled = true;\r\n                    _doOnComplete(oncomplete, 200, {});\r\n                    resolveFunc && resolveFunc(true);\r\n                }\r\n                if (_isOneDs && !responseHandled && payload[_DYN_TIMEOUT /* @min:%2etimeout */] > 0) {\r\n                    // Simulate timeout\r\n                    _timeoutWrapper && _timeoutWrapper.set(function () {\r\n                        if (!responseHandled) {\r\n                            // Assume a 500 response (which will cause a retry)\r\n                            responseHandled = true;\r\n                            _doOnComplete(oncomplete, 500, {});\r\n                            resolveFunc && resolveFunc(true);\r\n                        }\r\n                    }, payload[_DYN_TIMEOUT /* @min:%2etimeout */]);\r\n                }\r\n                return thePromise;\r\n            }\r\n            /**\r\n             * Send XDomainRequest\r\n             * @param payload - {string} - The data payload to be sent.\r\n             * @param sync - {boolean} - Indicates if the request should be sent synchronously\r\n             *\r\n             * Note: XDomainRequest does not support sync requests. This 'isAsync' parameter is added\r\n             * to maintain consistency with the xhrSender's contract\r\n             * Note: XDomainRequest does not support custom headers and we are not able to get\r\n             * appId from the backend for the correct correlation.\r\n             */\r\n            function _xdrSender(payload, oncomplete, sync) {\r\n                // It doesn't support custom headers, so no action is taken with current requestHeaders\r\n                var _window = getWindow();\r\n                var xdr = new XDomainRequest();\r\n                var data = payload[_DYN_DATA /* @min:%2edata */];\r\n                xdr.onload = function () {\r\n                    var response = getResponseText(xdr);\r\n                    var onloadFunc = _onCompleteFuncs && _onCompleteFuncs.xdrOnComplete;\r\n                    if (onloadFunc && isFunction(onloadFunc)) {\r\n                        onloadFunc(xdr, oncomplete, payload);\r\n                    }\r\n                    else {\r\n                        _doOnComplete(oncomplete, 200, {}, response);\r\n                    }\r\n                };\r\n                xdr.onerror = function () {\r\n                    _doOnComplete(oncomplete, 400, {}, _isOneDs ? STR_EMPTY : formatErrorMessageXdr(xdr));\r\n                };\r\n                xdr.ontimeout = function () {\r\n                    _doOnComplete(oncomplete, 500, {});\r\n                };\r\n                xdr.onprogress = function () { };\r\n                // XDomainRequest requires the same protocol as the hosting page.\r\n                // If the protocol doesn't match, we can't send the telemetry :(.\r\n                var hostingProtocol = _window && _window.location && _window.location[_DYN_PROTOCOL /* @min:%2eprotocol */] || \"\";\r\n                var endpoint = payload[_DYN_URL_STRING /* @min:%2eurlString */];\r\n                if (!endpoint) {\r\n                    _onNoPayloadUrl(oncomplete);\r\n                    return;\r\n                }\r\n                if (!_isOneDs && endpoint.lastIndexOf(hostingProtocol, 0) !== 0) {\r\n                    var msg = \"Cannot send XDomain request. The endpoint URL protocol doesn't match the hosting page protocol.\";\r\n                    _throwInternal(_diagLog, 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" + msg);\r\n                    _onError(msg, oncomplete);\r\n                    return;\r\n                }\r\n                var endpointUrl = _isOneDs ? endpoint : endpoint[_DYN_REPLACE /* @min:%2ereplace */](/^(https?:)/, \"\");\r\n                xdr.open(STR_POST_METHOD, endpointUrl);\r\n                if (payload[_DYN_TIMEOUT /* @min:%2etimeout */]) {\r\n                    xdr[_DYN_TIMEOUT /* @min:%2etimeout */] = payload[_DYN_TIMEOUT /* @min:%2etimeout */];\r\n                }\r\n                xdr.send(data);\r\n                if (_isOneDs && sync) {\r\n                    _timeoutWrapper && _timeoutWrapper.set(function () {\r\n                        xdr.send(data);\r\n                    }, 0);\r\n                }\r\n                else {\r\n                    xdr.send(data);\r\n                }\r\n            }\r\n            function _initDefaults() {\r\n                _syncFetchPayload = 0;\r\n                _isInitialized = false;\r\n                _enableSendPromise = false;\r\n                _diagLog = null;\r\n                _isOneDs = null;\r\n                _onCompleteFuncs = null;\r\n                _disableCredentials = null;\r\n                _fetchCredentials = null;\r\n                _fallbackInst = null;\r\n                _disableXhr = false;\r\n                _disableBeacon = false;\r\n                _disableBeaconSync = false;\r\n                _disableFetchKeepAlive = false;\r\n                _addNoResponse = false;\r\n                _timeoutWrapper = null;\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for SenderPostManager.prototype.initialize.\r\n// Removed Stub for SenderPostManager.prototype.getSyncFetchPayload.\r\n// Removed Stub for SenderPostManager.prototype.SetConfig.\r\n// Removed Stub for SenderPostManager.prototype.getSenderInst.\r\n// Removed Stub for SenderPostManager.prototype.getFallbackInst.\r\n// Removed Stub for SenderPostManager.prototype._doTeardown.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    SenderPostManager.__ieDyn=1;\n\n    return SenderPostManager;\r\n}());\r\nexport { SenderPostManager };\r\n//# sourceMappingURL=SenderPostManager.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { arrForEach, isFunction } from \"@nevware21/ts-utils\";\r\nimport { _DYN_GET_NEXT, _DYN_GET_PLUGIN, _DYN_INITIALIZE, _DYN_IS_INITIALIZED, _DYN_LENGTH, _DYN_NAME, _DYN_PUSH, _DYN_SET_NEXT_PLUGIN, _DYN_SPAN_ID, _DYN_TEARDOWN, _DYN_TRACE_FLAGS, _DYN_TRACE_ID, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { createElmNodeData } from \"./DataCacheHelper\";\r\nimport { STR_CORE, STR_PRIORITY, STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nimport { isValidSpanId, isValidTraceId } from \"./W3cTraceParent\";\r\nvar pluginStateData = createElmNodeData(\"plugin\");\r\nexport function _getPluginState(plugin) {\r\n    return pluginStateData.get(plugin, \"state\", {}, true);\r\n}\r\n/**\r\n * Initialize the queue of plugins\r\n * @param plugins - The array of plugins to initialize and setting of the next plugin\r\n * @param config - The current config for the instance\r\n * @param core - THe current core instance\r\n * @param extensions - The extensions\r\n */\r\nexport function initializePlugins(processContext, extensions) {\r\n    // Set the next plugin and identified the uninitialized plugins\r\n    var initPlugins = [];\r\n    var lastPlugin = null;\r\n    var proxy = processContext[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n    var pluginState;\r\n    while (proxy) {\r\n        var thePlugin = proxy[_DYN_GET_PLUGIN /* @min:%2egetPlugin */]();\r\n        if (thePlugin) {\r\n            if (lastPlugin && lastPlugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */] && thePlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */]) {\r\n                // Set this plugin as the next for the previous one\r\n                lastPlugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */](thePlugin);\r\n            }\r\n            pluginState = _getPluginState(thePlugin);\r\n            var isInitialized = !!pluginState[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */];\r\n            if (thePlugin[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]) {\r\n                isInitialized = thePlugin[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]();\r\n            }\r\n            if (!isInitialized) {\r\n                initPlugins[_DYN_PUSH /* @min:%2epush */](thePlugin);\r\n            }\r\n            lastPlugin = thePlugin;\r\n            proxy = proxy[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n        }\r\n    }\r\n    // Now initialize the plugins\r\n    arrForEach(initPlugins, function (thePlugin) {\r\n        var core = processContext[STR_CORE /* @min:%2ecore */]();\r\n        thePlugin[_DYN_INITIALIZE /* @min:%2einitialize */](processContext.getCfg(), core, extensions, processContext[_DYN_GET_NEXT /* @min:%2egetNext */]());\r\n        pluginState = _getPluginState(thePlugin);\r\n        // Only add the core to the state if the plugin didn't set it (doesn't extend from BaseTelemetryPlugin)\r\n        if (!thePlugin[STR_CORE] && !pluginState[STR_CORE]) {\r\n            pluginState[STR_CORE] = core;\r\n        }\r\n        pluginState[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = true;\r\n        delete pluginState[_DYN_TEARDOWN /* @min:%2eteardown */];\r\n    });\r\n}\r\nexport function sortPlugins(plugins) {\r\n    // Sort by priority\r\n    return plugins.sort(function (extA, extB) {\r\n        var result = 0;\r\n        if (extB) {\r\n            var bHasProcess = extB[STR_PROCESS_TELEMETRY];\r\n            if (extA[STR_PROCESS_TELEMETRY]) {\r\n                result = bHasProcess ? extA[STR_PRIORITY] - extB[STR_PRIORITY] : 1;\r\n            }\r\n            else if (bHasProcess) {\r\n                result = -1;\r\n            }\r\n        }\r\n        else {\r\n            result = extA ? 1 : -1;\r\n        }\r\n        return result;\r\n    });\r\n    // sort complete\r\n}\r\n/**\r\n * Teardown / Unload helper to perform teardown/unloading operations for the provided components synchronously or asynchronously, this will call any\r\n * _doTeardown() or _doUnload() functions on the provided components to allow them to finish removal.\r\n * @param components - The components you want to unload\r\n * @param unloadCtx - This is the context that should be used during unloading.\r\n * @param unloadState - The details / state of the unload process, it holds details like whether it should be unloaded synchronously or asynchronously and the reason for the unload.\r\n * @param asyncCallback - An optional callback that the plugin must call if it returns true to inform the caller that it has completed any async unload/teardown operations.\r\n * @returns boolean - true if the plugin has or will call asyncCallback, this allows the plugin to perform any asynchronous operations.\r\n */\r\nexport function unloadComponents(components, unloadCtx, unloadState, asyncCallback) {\r\n    var idx = 0;\r\n    function _doUnload() {\r\n        while (idx < components[_DYN_LENGTH /* @min:%2elength */]) {\r\n            var component = components[idx++];\r\n            if (component) {\r\n                var func = component._doUnload || component[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */];\r\n                if (isFunction(func)) {\r\n                    if (func.call(component, unloadCtx, unloadState, _doUnload) === true) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return _doUnload();\r\n}\r\n/**\r\n * Creates a IDistributedTraceContext which optionally also \"sets\" the value on a parent\r\n * @param parentCtx - An optional parent distributed trace instance\r\n * @returns A new IDistributedTraceContext instance that uses an internal temporary object\r\n */\r\nexport function createDistributedTraceContext(parentCtx) {\r\n    var trace = {};\r\n    return {\r\n        getName: function () {\r\n            return trace[_DYN_NAME /* @min:%2ename */];\r\n        },\r\n        setName: function (newValue) {\r\n            parentCtx && parentCtx.setName(newValue);\r\n            trace[_DYN_NAME /* @min:%2ename */] = newValue;\r\n        },\r\n        getTraceId: function () {\r\n            return trace[_DYN_TRACE_ID /* @min:%2etraceId */];\r\n        },\r\n        setTraceId: function (newValue) {\r\n            parentCtx && parentCtx.setTraceId(newValue);\r\n            if (isValidTraceId(newValue)) {\r\n                trace[_DYN_TRACE_ID /* @min:%2etraceId */] = newValue;\r\n            }\r\n        },\r\n        getSpanId: function () {\r\n            return trace[_DYN_SPAN_ID /* @min:%2espanId */];\r\n        },\r\n        setSpanId: function (newValue) {\r\n            parentCtx && parentCtx.setSpanId(newValue);\r\n            if (isValidSpanId(newValue)) {\r\n                trace[_DYN_SPAN_ID /* @min:%2espanId */] = newValue;\r\n            }\r\n        },\r\n        getTraceFlags: function () {\r\n            return trace[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */];\r\n        },\r\n        setTraceFlags: function (newTraceFlags) {\r\n            parentCtx && parentCtx.setTraceFlags(newTraceFlags);\r\n            trace[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */] = newTraceFlags;\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=TelemetryHelpers.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_DIAG_LOG, _DYN_PUSH } from \"../__DynamicConstants\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nexport function createUnloadHandlerContainer() {\r\n    var handlers = [];\r\n    function _addHandler(handler) {\r\n        if (handler) {\r\n            handlers[_DYN_PUSH /* @min:%2epush */](handler);\r\n        }\r\n    }\r\n    function _runHandlers(unloadCtx, unloadState) {\r\n        arrForEach(handlers, function (handler) {\r\n            try {\r\n                handler(unloadCtx, unloadState);\r\n            }\r\n            catch (e) {\r\n                _throwInternal(unloadCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, \"Unexpected error calling unload handler - \" + dumpObj(e));\r\n            }\r\n        });\r\n        handlers = [];\r\n    }\r\n    return {\r\n        add: _addHandler,\r\n        run: _runHandlers\r\n    };\r\n}\r\n//# sourceMappingURL=UnloadHandlerContainer.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrAppend, arrForEach, dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nvar _maxHooks;\r\nvar _hookAddMonitor;\r\n/**\r\n * Test hook for setting the maximum number of unload hooks and calling a monitor function when the hooks are added or removed\r\n * This allows for automatic test failure when the maximum number of unload hooks is exceeded\r\n * @param maxHooks - The maximum number of unload hooks\r\n * @param addMonitor - The monitor function to call when hooks are added or removed\r\n */\r\nexport function _testHookMaxUnloadHooksCb(maxHooks, addMonitor) {\r\n    _maxHooks = maxHooks;\r\n    _hookAddMonitor = addMonitor;\r\n}\r\n/**\r\n * Create a IUnloadHookContainer which can be used to remember unload hook functions to be executed during the component unloading\r\n * process.\r\n * @returns A new IUnloadHookContainer instance\r\n */\r\nexport function createUnloadHookContainer() {\r\n    var _hooks = [];\r\n    function _doUnload(logger) {\r\n        var oldHooks = _hooks;\r\n        _hooks = [];\r\n        // Remove all registered unload hooks\r\n        arrForEach(oldHooks, function (fn) {\r\n            // allow either rm or remove callback function\r\n            try {\r\n                (fn.rm || fn.remove).call(fn);\r\n            }\r\n            catch (e) {\r\n                _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, \"Unloading:\" + dumpObj(e));\r\n            }\r\n        });\r\n        if (_maxHooks && oldHooks[_DYN_LENGTH /* @min:%2elength */] > _maxHooks) {\r\n            _hookAddMonitor ? _hookAddMonitor(\"doUnload\", oldHooks) : _throwInternal(null, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.MaxUnloadHookExceeded */, \"Max unload hooks exceeded. An excessive number of unload hooks has been detected.\");\r\n        }\r\n    }\r\n    function _addHook(hooks) {\r\n        if (hooks) {\r\n            arrAppend(_hooks, hooks);\r\n            if (_maxHooks && _hooks[_DYN_LENGTH /* @min:%2elength */] > _maxHooks) {\r\n                _hookAddMonitor ? _hookAddMonitor(\"Add\", _hooks) : _throwInternal(null, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.MaxUnloadHookExceeded */, \"Max unload hooks exceeded. An excessive number of unload hooks has been detected.\");\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        run: _doUnload,\r\n        add: _addHook\r\n    };\r\n}\r\n//# sourceMappingURL=UnloadHookContainer.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { arrForEach, isArray, isString, strLeft, strTrim } from \"@nevware21/ts-utils\";\r\nimport { _DYN_GET_ATTRIBUTE, _DYN_LENGTH, _DYN_PUSH, _DYN_SPAN_ID, _DYN_SPLIT, _DYN_TO_LOWER_CASE, _DYN_TRACE_FLAGS, _DYN_TRACE_ID, _DYN_VERSION } from \"../__DynamicConstants\";\r\nimport { generateW3CId } from \"./CoreUtils\";\r\nimport { findMetaTag, findNamedServerTiming } from \"./EnvUtils\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n// using {0,16} for leading and trailing whitespace just to constrain the possible runtime of a random string\r\nvar TRACE_PARENT_REGEX = /^([\\da-f]{2})-([\\da-f]{32})-([\\da-f]{16})-([\\da-f]{2})(-[^\\s]{1,64})?$/i;\r\nvar DEFAULT_VERSION = \"00\";\r\nvar INVALID_VERSION = \"ff\";\r\nvar INVALID_TRACE_ID = \"00000000000000000000000000000000\";\r\nvar INVALID_SPAN_ID = \"0000000000000000\";\r\nvar SAMPLED_FLAG = 0x01;\r\nfunction _isValid(value, len, invalidValue) {\r\n    if (value && value[_DYN_LENGTH /* @min:%2elength */] === len && value !== invalidValue) {\r\n        return !!value.match(/^[\\da-f]*$/i);\r\n    }\r\n    return false;\r\n}\r\nfunction _formatValue(value, len, defValue) {\r\n    if (_isValid(value, len)) {\r\n        return value;\r\n    }\r\n    return defValue;\r\n}\r\nfunction _formatFlags(value) {\r\n    if (isNaN(value) || value < 0 || value > 255) {\r\n        value = 0x01;\r\n    }\r\n    var result = value.toString(16);\r\n    while (result[_DYN_LENGTH /* @min:%2elength */] < 2) {\r\n        result = \"0\" + result;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Create a new ITraceParent instance using the provided values.\r\n * @param traceId - The traceId to use, when invalid a new random W3C id will be generated.\r\n * @param spanId - The parent/span id to use, a new random value will be generated if it is invalid.\r\n * @param flags - The traceFlags to use, defaults to zero (0) if not supplied or invalid\r\n * @param version - The version to used, defaults to version \"01\" if not supplied or invalid.\r\n * @returns\r\n */\r\nexport function createTraceParent(traceId, spanId, flags, version) {\r\n    var _a;\r\n    return _a = {},\r\n        _a[_DYN_VERSION /* @min:version */] = _isValid(version, 2, INVALID_VERSION) ? version : DEFAULT_VERSION,\r\n        _a[_DYN_TRACE_ID /* @min:traceId */] = isValidTraceId(traceId) ? traceId : generateW3CId(),\r\n        _a[_DYN_SPAN_ID /* @min:spanId */] = isValidSpanId(spanId) ? spanId : strLeft(generateW3CId(), 16),\r\n        _a.traceFlags = flags >= 0 && flags <= 0xFF ? flags : 1,\r\n        _a;\r\n}\r\n/**\r\n * Attempt to parse the provided string as a W3C TraceParent header value (https://www.w3.org/TR/trace-context/#traceparent-header)\r\n *\r\n * @param value - The value to be parsed\r\n * @param selectIdx - If the found value is comma separated which is the preferred entry to select, defaults to the first\r\n * @returns\r\n */\r\nexport function parseTraceParent(value, selectIdx) {\r\n    var _a;\r\n    if (!value) {\r\n        // Don't pass a null/undefined or empty string\r\n        return null;\r\n    }\r\n    if (isArray(value)) {\r\n        // The value may have been encoded on the page into an array so handle this automatically\r\n        value = value[0] || \"\";\r\n    }\r\n    if (!value || !isString(value) || value[_DYN_LENGTH /* @min:%2elength */] > 8192) {\r\n        // limit potential processing based on total length\r\n        return null;\r\n    }\r\n    if (value.indexOf(\",\") !== -1) {\r\n        var values = value[_DYN_SPLIT /* @min:%2esplit */](\",\");\r\n        value = values[selectIdx > 0 && values[_DYN_LENGTH /* @min:%2elength */] > selectIdx ? selectIdx : 0];\r\n    }\r\n    // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\r\n    var match = TRACE_PARENT_REGEX.exec(strTrim(value));\r\n    if (!match || // No match\r\n        match[1] === INVALID_VERSION || // version ff is forbidden\r\n        match[2] === INVALID_TRACE_ID || // All zeros is considered to be invalid\r\n        match[3] === INVALID_SPAN_ID) { // All zeros is considered to be invalid\r\n        return null;\r\n    }\r\n    return _a = {\r\n            version: (match[1] || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */](),\r\n            traceId: (match[2] || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */](),\r\n            spanId: (match[3] || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]()\r\n        },\r\n        _a[_DYN_TRACE_FLAGS /* @min:traceFlags */] = parseInt(match[4], 16),\r\n        _a;\r\n}\r\n/**\r\n * Is the provided W3c Trace Id a valid string representation, it must be a 32-character string\r\n * of lowercase hexadecimal characters for example, 4bf92f3577b34da6a3ce929d0e0e4736.\r\n * If all characters as zero (00000000000000000000000000000000) it will be considered an invalid value.\r\n * @param value - The W3c trace Id to be validated\r\n * @returns true if valid otherwise false\r\n */\r\nexport function isValidTraceId(value) {\r\n    return _isValid(value, 32, INVALID_TRACE_ID);\r\n}\r\n/**\r\n * Is the provided W3c span id (aka. parent id) a valid string representation, it must be a 16-character\r\n * string of lowercase hexadecimal characters, for example, 00f067aa0ba902b7.\r\n * If all characters are zero (0000000000000000) this is considered an invalid value.\r\n * @param value - The W3c span id to be validated\r\n * @returns true if valid otherwise false\r\n */\r\nexport function isValidSpanId(value) {\r\n    return _isValid(value, 16, INVALID_SPAN_ID);\r\n}\r\n/**\r\n * Validates that the provided ITraceParent instance conforms to the currently supported specifications\r\n * @param value\r\n * @returns\r\n */\r\nexport function isValidTraceParent(value) {\r\n    if (!value ||\r\n        !_isValid(value[_DYN_VERSION /* @min:%2eversion */], 2, INVALID_VERSION) ||\r\n        !_isValid(value[_DYN_TRACE_ID /* @min:%2etraceId */], 32, INVALID_TRACE_ID) ||\r\n        !_isValid(value[_DYN_SPAN_ID /* @min:%2espanId */], 16, INVALID_SPAN_ID) ||\r\n        !_isValid(_formatFlags(value[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */]), 2)) {\r\n        // Each known field must contain a valid value\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Is the parsed traceParent indicating that the trace is currently sampled.\r\n * @param value - The parsed traceParent value\r\n * @returns\r\n */\r\nexport function isSampledFlag(value) {\r\n    if (isValidTraceParent(value)) {\r\n        return (value[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */] & SAMPLED_FLAG) === SAMPLED_FLAG;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Format the ITraceParent value as a string using the supported and know version formats.\r\n * So even if the passed traceParent is a later version the string value returned from this\r\n * function will convert it to only the known version formats.\r\n * This currently only supports version \"00\" and invalid \"ff\"\r\n * @param value - The parsed traceParent value\r\n * @returns\r\n */\r\nexport function formatTraceParent(value) {\r\n    if (value) {\r\n        // Special Note: This only supports formatting as version 00, future versions should encode any known supported version\r\n        // So parsing a future version will populate the correct version value but reformatting will reduce it to version 00.\r\n        var flags = _formatFlags(value[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */]);\r\n        if (!_isValid(flags, 2)) {\r\n            flags = \"01\";\r\n        }\r\n        var version = value[_DYN_VERSION /* @min:%2eversion */] || DEFAULT_VERSION;\r\n        if (version !== \"00\" && version !== \"ff\") {\r\n            // Reduce version to \"00\"\r\n            version = DEFAULT_VERSION;\r\n        }\r\n        // Format as version 00\r\n        return \"\".concat(version.toLowerCase(), \"-\").concat(_formatValue(value.traceId, 32, INVALID_TRACE_ID).toLowerCase(), \"-\").concat(_formatValue(value.spanId, 16, INVALID_SPAN_ID).toLowerCase(), \"-\").concat(flags.toLowerCase());\r\n    }\r\n    return \"\";\r\n}\r\n/**\r\n * Helper function to fetch the passed traceparent from the page, looking for it as a meta-tag or a Server-Timing header.\r\n * @param selectIdx - If the found value is comma separated which is the preferred entry to select, defaults to the first\r\n * @returns\r\n */\r\nexport function findW3cTraceParent(selectIdx) {\r\n    var name = \"traceparent\";\r\n    var traceParent = parseTraceParent(findMetaTag(name), selectIdx);\r\n    if (!traceParent) {\r\n        traceParent = parseTraceParent(findNamedServerTiming(name), selectIdx);\r\n    }\r\n    return traceParent;\r\n}\r\n/**\r\n * Find all script tags in the provided document and return the information about them.\r\n * @param doc\r\n * @returns\r\n */\r\nexport function findAllScripts(doc) {\r\n    var scripts = doc.getElementsByTagName(\"script\");\r\n    var result = [];\r\n    arrForEach(scripts, function (script) {\r\n        var src = script[_DYN_GET_ATTRIBUTE /* @min:%2egetAttribute */](\"src\");\r\n        if (src) {\r\n            var crossOrigin = script[_DYN_GET_ATTRIBUTE /* @min:%2egetAttribute */](\"crossorigin\");\r\n            var async = script.hasAttribute(\"async\") === true;\r\n            var defer = script.hasAttribute(\"defer\") === true;\r\n            var referrerPolicy = script[_DYN_GET_ATTRIBUTE /* @min:%2egetAttribute */](\"referrerpolicy\");\r\n            var info = { url: src };\r\n            if (crossOrigin) {\r\n                info.crossOrigin = crossOrigin;\r\n            }\r\n            if (async) {\r\n                info.async = async;\r\n            }\r\n            if (defer) {\r\n                info.defer = defer;\r\n            }\r\n            if (referrerPolicy) {\r\n                info.referrerPolicy = referrerPolicy;\r\n            }\r\n            result[_DYN_PUSH /* @min:%2epush */](info);\r\n        }\r\n    });\r\n    return result;\r\n}\r\n//# sourceMappingURL=W3cTraceParent.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_TO_LOWER_CASE = \"toLowerCase\"; // Count: 11\r\nexport var _DYN_BLK_VAL = \"blkVal\"; // Count: 5\r\nexport var _DYN_LENGTH = \"length\"; // Count: 55\r\nexport var _DYN_RD_ONLY = \"rdOnly\"; // Count: 4\r\nexport var _DYN_NOTIFY = \"notify\"; // Count: 4\r\nexport var _DYN_WARN_TO_CONSOLE = \"warnToConsole\"; // Count: 4\r\nexport var _DYN_THROW_INTERNAL = \"throwInternal\"; // Count: 5\r\nexport var _DYN_SET_DF = \"setDf\"; // Count: 6\r\nexport var _DYN_WATCH = \"watch\"; // Count: 8\r\nexport var _DYN_LOGGER = \"logger\"; // Count: 21\r\nexport var _DYN_APPLY = \"apply\"; // Count: 7\r\nexport var _DYN_PUSH = \"push\"; // Count: 35\r\nexport var _DYN_SPLICE = \"splice\"; // Count: 8\r\nexport var _DYN_HDLR = \"hdlr\"; // Count: 6\r\nexport var _DYN_CANCEL = \"cancel\"; // Count: 6\r\nexport var _DYN_INITIALIZE = \"initialize\"; // Count: 5\r\nexport var _DYN_IDENTIFIER = \"identifier\"; // Count: 8\r\nexport var _DYN_REMOVE_NOTIFICATION_0 = \"removeNotificationListener\"; // Count: 4\r\nexport var _DYN_ADD_NOTIFICATION_LIS1 = \"addNotificationListener\"; // Count: 4\r\nexport var _DYN_IS_INITIALIZED = \"isInitialized\"; // Count: 10\r\nexport var _DYN_INSTRUMENTATION_KEY = \"instrumentationKey\"; // Count: 2\r\nexport var _DYN__INACTIVE = \"INACTIVE\"; // Count: 3\r\nexport var _DYN_VALUE = \"value\"; // Count: 5\r\nexport var _DYN_GET_NOTIFY_MGR = \"getNotifyMgr\"; // Count: 5\r\nexport var _DYN_GET_PLUGIN = \"getPlugin\"; // Count: 6\r\nexport var _DYN_NAME = \"name\"; // Count: 12\r\nexport var _DYN_I_KEY = \"iKey\"; // Count: 5\r\nexport var _DYN_TIME = \"time\"; // Count: 6\r\nexport var _DYN_PROCESS_NEXT = \"processNext\"; // Count: 15\r\nexport var _DYN_GET_PROCESS_TEL_CONT2 = \"getProcessTelContext\"; // Count: 2\r\nexport var _DYN_POLL_INTERNAL_LOGS = \"pollInternalLogs\"; // Count: 2\r\nexport var _DYN_ENABLED = \"enabled\"; // Count: 6\r\nexport var _DYN_STOP_POLLING_INTERNA3 = \"stopPollingInternalLogs\"; // Count: 2\r\nexport var _DYN_UNLOAD = \"unload\"; // Count: 9\r\nexport var _DYN_ON_COMPLETE = \"onComplete\"; // Count: 5\r\nexport var _DYN_VERSION = \"version\"; // Count: 6\r\nexport var _DYN_LOGGING_LEVEL_CONSOL4 = \"loggingLevelConsole\"; // Count: 2\r\nexport var _DYN_CREATE_NEW = \"createNew\"; // Count: 7\r\nexport var _DYN_TEARDOWN = \"teardown\"; // Count: 9\r\nexport var _DYN_MESSAGE_ID = \"messageId\"; // Count: 4\r\nexport var _DYN_MESSAGE = \"message\"; // Count: 7\r\nexport var _DYN_IS_ASYNC = \"isAsync\"; // Count: 6\r\nexport var _DYN_DIAG_LOG = \"diagLog\"; // Count: 10\r\nexport var _DYN__DO_TEARDOWN = \"_doTeardown\"; // Count: 5\r\nexport var _DYN_UPDATE = \"update\"; // Count: 6\r\nexport var _DYN_GET_NEXT = \"getNext\"; // Count: 12\r\nexport var _DYN_SET_NEXT_PLUGIN = \"setNextPlugin\"; // Count: 5\r\nexport var _DYN_PROTOCOL = \"protocol\"; // Count: 3\r\nexport var _DYN_USER_AGENT = \"userAgent\"; // Count: 5\r\nexport var _DYN_SPLIT = \"split\"; // Count: 7\r\nexport var _DYN_NODE_TYPE = \"nodeType\"; // Count: 3\r\nexport var _DYN_REPLACE = \"replace\"; // Count: 9\r\nexport var _DYN_LOG_INTERNAL_MESSAGE = \"logInternalMessage\"; // Count: 2\r\nexport var _DYN_TYPE = \"type\"; // Count: 14\r\nexport var _DYN_HANDLER = \"handler\"; // Count: 5\r\nexport var _DYN_STATUS = \"status\"; // Count: 5\r\nexport var _DYN_GET_RESPONSE_HEADER = \"getResponseHeader\"; // Count: 2\r\nexport var _DYN_GET_ALL_RESPONSE_HEA5 = \"getAllResponseHeaders\"; // Count: 2\r\nexport var _DYN_IS_CHILD_EVT = \"isChildEvt\"; // Count: 3\r\nexport var _DYN_DATA = \"data\"; // Count: 7\r\nexport var _DYN_GET_CTX = \"getCtx\"; // Count: 6\r\nexport var _DYN_SET_CTX = \"setCtx\"; // Count: 10\r\nexport var _DYN_COMPLETE = \"complete\"; // Count: 3\r\nexport var _DYN_ITEMS_RECEIVED = \"itemsReceived\"; // Count: 3\r\nexport var _DYN_URL_STRING = \"urlString\"; // Count: 5\r\nexport var _DYN_SEND_POST = \"sendPOST\"; // Count: 3\r\nexport var _DYN_HEADERS = \"headers\"; // Count: 5\r\nexport var _DYN_TIMEOUT = \"timeout\"; // Count: 6\r\nexport var _DYN_SET_REQUEST_HEADER = \"setRequestHeader\"; // Count: 2\r\nexport var _DYN_TRACE_ID = \"traceId\"; // Count: 5\r\nexport var _DYN_SPAN_ID = \"spanId\"; // Count: 5\r\nexport var _DYN_TRACE_FLAGS = \"traceFlags\"; // Count: 6\r\nexport var _DYN_GET_ATTRIBUTE = \"getAttribute\"; // Count: 3\r\n//# sourceMappingURL=__DynamicConstants.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var strShimFunction = \"function\";\r\nexport var strShimObject = \"object\";\r\nexport var strShimUndefined = \"undefined\";\r\nexport var strShimPrototype = \"prototype\";\r\nexport var strDefault = \"default\";\r\nexport var ObjClass = Object;\r\nexport var ObjProto = ObjClass[strShimPrototype];\r\n//# sourceMappingURL=Constants.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { getGlobal, objAssign, objCreate, objDefineProp, objHasOwnProperty, throwTypeError } from \"@nevware21/ts-utils\";\r\nimport { ObjClass, ObjProto, strDefault, strShimFunction, strShimPrototype } from \"./Constants\";\r\n// Most of these functions have been directly shamelessly \"lifted\" from the https://github.com/@microsoft/tslib and\r\n// modified to be ES5 compatible and applying several minification and tree-shaking techniques so that Application Insights\r\n// can successfully use TypeScript \"importHelpers\" which imports tslib during compilation but it will use these at runtime\r\n// Which is also why all of the functions have not been included as Application Insights currently doesn't use or require\r\n// them.\r\nexport var SymbolObj = (getGlobal() || {})[\"Symbol\"];\r\nexport var ReflectObj = (getGlobal() || {})[\"Reflect\"];\r\nexport var __hasReflect = !!ReflectObj;\r\nvar strDecorate = \"decorate\";\r\nvar strMetadata = \"metadata\";\r\nvar strGetOwnPropertySymbols = \"getOwnPropertySymbols\";\r\nvar strIterator = \"iterator\";\r\nvar strHasOwnProperty = \"hasOwnProperty\";\r\nexport var __objAssignFnImpl = function (t) {\r\n    // tslint:disable-next-line: ban-comma-operator\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) {\r\n            if (ObjProto[strHasOwnProperty].call(s, p)) {\r\n                t[p] = s[p];\r\n            }\r\n        }\r\n    }\r\n    return t;\r\n};\r\nexport var __assignFn = objAssign || __objAssignFnImpl;\r\n// tslint:disable-next-line: only-arrow-functions\r\nvar extendStaticsFn = function (d, b) {\r\n    extendStaticsFn = ObjClass[\"setPrototypeOf\"] ||\r\n        // tslint:disable-next-line: only-arrow-functions\r\n        ({ __proto__: [] } instanceof Array && function (d, b) {\r\n            d.__proto__ = b;\r\n        }) ||\r\n        // tslint:disable-next-line: only-arrow-functions\r\n        function (d, b) {\r\n            for (var p in b) {\r\n                if (b[strHasOwnProperty](p)) {\r\n                    d[p] = b[p];\r\n                }\r\n            }\r\n        };\r\n    return extendStaticsFn(d, b);\r\n};\r\nexport function __extendsFn(d, b) {\r\n    if (typeof b !== strShimFunction && b !== null) {\r\n        throwTypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    }\r\n    extendStaticsFn(d, b);\r\n    function __() {\r\n        this.constructor = d;\r\n    }\r\n    // tslint:disable-next-line: ban-comma-operator\r\n    d[strShimPrototype] = b === null ? objCreate(b) : (__[strShimPrototype] = b[strShimPrototype], new __());\r\n}\r\nexport function __restFn(s, e) {\r\n    var t = {};\r\n    for (var k in s) {\r\n        if (objHasOwnProperty(s, k) && e.indexOf(k) < 0) {\r\n            t[k] = s[k];\r\n        }\r\n    }\r\n    if (s != null && typeof ObjClass[strGetOwnPropertySymbols] === strShimFunction) {\r\n        for (var i = 0, p = ObjClass[strGetOwnPropertySymbols](s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && ObjProto[\"propertyIsEnumerable\"].call(s, p[i])) {\r\n                t[p[i]] = s[p[i]];\r\n            }\r\n        }\r\n    }\r\n    return t;\r\n}\r\nexport function __decorateFn(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = ObjClass[\"getOwnPropertyDescriptor\"](target, key) : desc, d;\r\n    if (__hasReflect && typeof ReflectObj[strDecorate] === strShimFunction) {\r\n        r = ReflectObj[strDecorate](decorators, target, key, desc);\r\n    }\r\n    else {\r\n        for (var i = decorators.length - 1; i >= 0; i--) {\r\n            // eslint-disable-next-line no-cond-assign\r\n            if (d = decorators[i]) {\r\n                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n            }\r\n        }\r\n    }\r\n    // tslint:disable-next-line:ban-comma-operator\r\n    return c > 3 && r && objDefineProp(target, key, r), r;\r\n}\r\nexport function __paramFn(paramIndex, decorator) {\r\n    return function (target, key) {\r\n        decorator(target, key, paramIndex);\r\n    };\r\n}\r\nexport function __metadataFn(metadataKey, metadataValue) {\r\n    if (__hasReflect && ReflectObj[strMetadata] === strShimFunction) {\r\n        return ReflectObj[strMetadata](metadataKey, metadataValue);\r\n    }\r\n}\r\nexport function __exportStarFn(m, o) {\r\n    for (var p in m) {\r\n        if (p !== strDefault && !objHasOwnProperty(o, p)) {\r\n            __createBindingFn(o, m, p);\r\n        }\r\n    }\r\n}\r\nexport function __createBindingFn(o, m, k, k2) {\r\n    if (k2 === undefined) {\r\n        k2 = k;\r\n    }\r\n    if (!!objDefineProp) {\r\n        objDefineProp(o, k2, {\r\n            enumerable: true,\r\n            get: function () {\r\n                return m[k];\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        o[k2] = m[k];\r\n    }\r\n}\r\nexport function __valuesFn(o) {\r\n    var s = typeof SymbolObj === strShimFunction && SymbolObj[strIterator], m = s && o[s], i = 0;\r\n    if (m) {\r\n        return m.call(o);\r\n    }\r\n    if (o && typeof o.length === \"number\") {\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) {\r\n                    o = void 0;\r\n                }\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n    throwTypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\nexport function __readFn(o, n) {\r\n    var m = typeof SymbolObj === strShimFunction && o[SymbolObj[strIterator]];\r\n    if (!m) {\r\n        return o;\r\n    }\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\r\n            ar.push(r.value);\r\n        }\r\n    }\r\n    catch (error) {\r\n        e = {\r\n            error: error\r\n        };\r\n    }\r\n    finally {\r\n        try {\r\n            // tslint:disable-next-line:no-conditional-assignment\r\n            if (r && !r.done && (m = i[\"return\"])) {\r\n                m.call(i);\r\n            }\r\n        }\r\n        finally {\r\n            if (e) {\r\n                // eslint-disable-next-line no-unsafe-finally\r\n                throw e.error;\r\n            }\r\n        }\r\n    }\r\n    return ar;\r\n}\r\n/** @deprecated */\r\nexport function __spreadArraysFn() {\r\n    var theArgs = arguments;\r\n    // Calculate new total size\r\n    for (var s = 0, i = 0, il = theArgs.length; i < il; i++) {\r\n        s += theArgs[i].length;\r\n    }\r\n    // Create new full array\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++) {\r\n        for (var a = theArgs[i], j = 0, jl = a.length; j < jl; j++, k++) {\r\n            r[k] = a[j];\r\n        }\r\n    }\r\n    return r;\r\n}\r\nexport function __spreadArrayFn(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {\r\n        to[j] = from[i];\r\n    }\r\n    return to;\r\n}\r\nexport function __makeTemplateObjectFn(cooked, raw) {\r\n    if (objDefineProp) {\r\n        objDefineProp(cooked, \"raw\", { value: raw });\r\n    }\r\n    else {\r\n        cooked.raw = raw;\r\n    }\r\n    return cooked;\r\n}\r\nexport function __importStarFn(mod) {\r\n    if (mod && mod.__esModule) {\r\n        return mod;\r\n    }\r\n    var result = {};\r\n    if (mod != null) {\r\n        for (var k in mod) {\r\n            if (k !== strDefault && Object.prototype.hasOwnProperty.call(mod, k)) {\r\n                __createBindingFn(result, mod, k);\r\n            }\r\n        }\r\n    }\r\n    // Set default module\r\n    if (!!objDefineProp) {\r\n        objDefineProp(result, strDefault, { enumerable: true, value: mod });\r\n    }\r\n    else {\r\n        result[strDefault] = mod;\r\n    }\r\n    return result;\r\n}\r\nexport function __importDefaultFn(mod) {\r\n    return (mod && mod.__esModule) ? mod : { strDefault: mod };\r\n}\r\n//# sourceMappingURL=TsLibShims.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// ###################################################################################################################################################\r\n// Note: DON'T Export these const from the package as we are still targeting IE/ES5 this will export a mutable variables that someone could change ###\r\n// ###################################################################################################################################################\r\n// Generally you should only put values that are used more than 2 times and then only if not already exposed as a constant (such as SdkCoreNames)\r\n// as when using \"short\" named values from here they will be will be minified smaller than the SdkCoreNames[eSdkCoreNames.xxxx] value.\r\nexport var STR_DURATION = \"duration\";\r\n//# sourceMappingURL=InternalConstants.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_TAGS = \"tags\"; // Count: 17\r\nexport var _DYN_DEVICE_TYPE = \"deviceType\"; // Count: 3\r\nexport var _DYN_DATA = \"data\"; // Count: 15\r\nexport var _DYN_NAME = \"name\"; // Count: 8\r\nexport var _DYN_TRACE_ID = \"traceID\"; // Count: 5\r\nexport var _DYN_LENGTH = \"length\"; // Count: 38\r\nexport var _DYN_STRINGIFY = \"stringify\"; // Count: 5\r\nexport var _DYN_MEASUREMENTS = \"measurements\"; // Count: 7\r\nexport var _DYN_DATA_TYPE = \"dataType\"; // Count: 10\r\nexport var _DYN_ENVELOPE_TYPE = \"envelopeType\"; // Count: 7\r\nexport var _DYN_TO_STRING = \"toString\"; // Count: 7\r\nexport var _DYN__GET = \"_get\"; // Count: 5\r\nexport var _DYN_ENQUEUE = \"enqueue\"; // Count: 7\r\nexport var _DYN_COUNT = \"count\"; // Count: 7\r\nexport var _DYN_EVENTS_LIMIT_IN_MEM = \"eventsLimitInMem\"; // Count: 2\r\nexport var _DYN_PUSH = \"push\"; // Count: 9\r\nexport var _DYN_ITEM = \"item\"; // Count: 6\r\nexport var _DYN_EMIT_LINE_DELIMITED_0 = \"emitLineDelimitedJson\"; // Count: 3\r\nexport var _DYN_CLEAR = \"clear\"; // Count: 6\r\nexport var _DYN_CREATE_NEW = \"createNew\"; // Count: 3\r\nexport var _DYN_MARK_AS_SENT = \"markAsSent\"; // Count: 4\r\nexport var _DYN_CLEAR_SENT = \"clearSent\"; // Count: 5\r\nexport var _DYN_BUFFER_OVERRIDE = \"bufferOverride\"; // Count: 3\r\nexport var _DYN__BUFFER__KEY = \"BUFFER_KEY\"; // Count: 5\r\nexport var _DYN__SENT__BUFFER__KEY = \"SENT_BUFFER_KEY\"; // Count: 8\r\nexport var _DYN_CONCAT = \"concat\"; // Count: 6\r\nexport var _DYN__MAX__BUFFER__SIZE = \"MAX_BUFFER_SIZE\"; // Count: 5\r\nexport var _DYN_TRIGGER_SEND = \"triggerSend\"; // Count: 5\r\nexport var _DYN_DIAG_LOG = \"diagLog\"; // Count: 16\r\nexport var _DYN_INITIALIZE = \"initialize\"; // Count: 3\r\nexport var _DYN__SENDER = \"_sender\"; // Count: 5\r\nexport var _DYN_ENDPOINT_URL = \"endpointUrl\"; // Count: 5\r\nexport var _DYN_INSTRUMENTATION_KEY = \"instrumentationKey\"; // Count: 5\r\nexport var _DYN_CUSTOM_HEADERS = \"customHeaders\"; // Count: 3\r\nexport var _DYN_MAX_BATCH_SIZE_IN_BY1 = \"maxBatchSizeInBytes\"; // Count: 2\r\nexport var _DYN_ONUNLOAD_DISABLE_BEA2 = \"onunloadDisableBeacon\"; // Count: 3\r\nexport var _DYN_IS_BEACON_API_DISABL3 = \"isBeaconApiDisabled\"; // Count: 3\r\nexport var _DYN_ALWAYS_USE_XHR_OVERR4 = \"alwaysUseXhrOverride\"; // Count: 2\r\nexport var _DYN_DISABLE_XHR = \"disableXhr\"; // Count: 3\r\nexport var _DYN_ENABLE_SESSION_STORA5 = \"enableSessionStorageBuffer\"; // Count: 2\r\nexport var _DYN__BUFFER = \"_buffer\"; // Count: 9\r\nexport var _DYN_ONUNLOAD_DISABLE_FET6 = \"onunloadDisableFetch\"; // Count: 2\r\nexport var _DYN_DISABLE_SEND_BEACON_7 = \"disableSendBeaconSplit\"; // Count: 2\r\nexport var _DYN_ENABLE_SEND_PROMISE = \"enableSendPromise\"; // Count: 2\r\nexport var _DYN_GET_SENDER_INST = \"getSenderInst\"; // Count: 4\r\nexport var _DYN_UNLOAD_TRANSPORTS = \"unloadTransports\"; // Count: 2\r\nexport var _DYN_CONVERT_UNDEFINED = \"convertUndefined\"; // Count: 2\r\nexport var _DYN_MAX_BATCH_INTERVAL = \"maxBatchInterval\"; // Count: 2\r\nexport var _DYN_SERIALIZE = \"serialize\"; // Count: 4\r\nexport var _DYN__ON_ERROR = \"_onError\"; // Count: 7\r\nexport var _DYN__ON_PARTIAL_SUCCESS = \"_onPartialSuccess\"; // Count: 3\r\nexport var _DYN__ON_SUCCESS = \"_onSuccess\"; // Count: 6\r\nexport var _DYN_ITEMS_RECEIVED = \"itemsReceived\"; // Count: 3\r\nexport var _DYN_ITEMS_ACCEPTED = \"itemsAccepted\"; // Count: 3\r\nexport var _DYN_ORI_PAYLOAD = \"oriPayload\"; // Count: 3\r\nexport var _DYN_BASE_TYPE = \"baseType\"; // Count: 4\r\nexport var _DYN_SAMPLE_RATE = \"sampleRate\"; // Count: 4\r\nexport var _DYN_EVENTS_SEND_REQUEST = \"eventsSendRequest\"; // Count: 2\r\nexport var _DYN_GET_SAMPLING_SCORE = \"getSamplingScore\"; // Count: 2\r\nexport var _DYN_GET_HASH_CODE_SCORE = \"getHashCodeScore\"; // Count: 4\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { __assignFn as __assign } from \"@microsoft/applicationinsights-shims\";\r\nimport { CtxTagKeys, Data, Envelope, Event, Exception, HttpMethod, Metric, PageView, PageViewPerformance, RemoteDependencyData, SampleRate, Trace, dataSanitizeString } from \"@microsoft/applicationinsights-common\";\r\nimport { _throwInternal, _warnToConsole, getJSON, hasJSON, isNullOrUndefined, isNumber, isString, isTruthy, objForEachKey, optimizeObject, setValue, toISOString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { STR_DURATION } from \"./InternalConstants\";\r\nimport { _DYN_DATA, _DYN_DATA_TYPE, _DYN_DEVICE_TYPE, _DYN_ENVELOPE_TYPE, _DYN_LENGTH, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_STRINGIFY, _DYN_TAGS, _DYN_TO_STRING, _DYN_TRACE_ID } from \"./__DynamicConstants\";\r\n// these two constants are used to filter out properties not needed when trying to extract custom properties and measurements from the incoming payload\r\nvar strBaseType = \"baseType\";\r\nvar strBaseData = \"baseData\";\r\nvar strProperties = \"properties\";\r\nvar strTrue = \"true\";\r\nfunction _setValueIf(target, field, value) {\r\n    return setValue(target, field, value, isTruthy);\r\n}\r\n/*\r\n * Maps Part A data from CS 4.0\r\n */\r\nfunction _extractPartAExtensions(logger, item, env) {\r\n    // todo: switch to keys from common in this method\r\n    var envTags = env[_DYN_TAGS /* @min:%2etags */] = env[_DYN_TAGS /* @min:%2etags */] || {};\r\n    var itmExt = item.ext = item.ext || {};\r\n    var itmTags = item[_DYN_TAGS /* @min:%2etags */] = item[_DYN_TAGS /* @min:%2etags */] || [];\r\n    var extUser = itmExt.user;\r\n    if (extUser) {\r\n        _setValueIf(envTags, CtxTagKeys.userAuthUserId, extUser.authId);\r\n        _setValueIf(envTags, CtxTagKeys.userId, extUser.id || extUser.localId);\r\n    }\r\n    var extApp = itmExt.app;\r\n    if (extApp) {\r\n        _setValueIf(envTags, CtxTagKeys.sessionId, extApp.sesId);\r\n    }\r\n    var extDevice = itmExt.device;\r\n    if (extDevice) {\r\n        _setValueIf(envTags, CtxTagKeys.deviceId, extDevice.id || extDevice.localId);\r\n        _setValueIf(envTags, CtxTagKeys[_DYN_DEVICE_TYPE /* @min:%2edeviceType */], extDevice.deviceClass);\r\n        _setValueIf(envTags, CtxTagKeys.deviceIp, extDevice.ip);\r\n        _setValueIf(envTags, CtxTagKeys.deviceModel, extDevice.model);\r\n        _setValueIf(envTags, CtxTagKeys[_DYN_DEVICE_TYPE /* @min:%2edeviceType */], extDevice[_DYN_DEVICE_TYPE /* @min:%2edeviceType */]);\r\n    }\r\n    var web = item.ext.web;\r\n    if (web) {\r\n        _setValueIf(envTags, CtxTagKeys.deviceLanguage, web.browserLang);\r\n        _setValueIf(envTags, CtxTagKeys.deviceBrowserVersion, web.browserVer);\r\n        _setValueIf(envTags, CtxTagKeys.deviceBrowser, web.browser);\r\n        var envData = env[_DYN_DATA /* @min:%2edata */] = env[_DYN_DATA /* @min:%2edata */] || {};\r\n        var envBaseData = envData[strBaseData] = envData[strBaseData] || {};\r\n        var envProps = envBaseData[strProperties] = envBaseData[strProperties] || {};\r\n        _setValueIf(envProps, \"domain\", web.domain);\r\n        _setValueIf(envProps, \"isManual\", web.isManual ? strTrue : null);\r\n        _setValueIf(envProps, \"screenRes\", web.screenRes);\r\n        _setValueIf(envProps, \"userConsent\", web.userConsent ? strTrue : null);\r\n    }\r\n    var extOs = itmExt.os;\r\n    if (extOs) {\r\n        _setValueIf(envTags, CtxTagKeys.deviceOS, extOs[_DYN_NAME /* @min:%2ename */]);\r\n        _setValueIf(envTags, CtxTagKeys.deviceOSVersion, extOs.osVer);\r\n    }\r\n    // No support for mapping Trace.traceState to 2.0 as it is currently empty\r\n    var extTrace = itmExt.trace;\r\n    if (extTrace) {\r\n        _setValueIf(envTags, CtxTagKeys.operationParentId, extTrace.parentID);\r\n        _setValueIf(envTags, CtxTagKeys.operationName, dataSanitizeString(logger, extTrace[_DYN_NAME /* @min:%2ename */]));\r\n        _setValueIf(envTags, CtxTagKeys.operationId, extTrace[_DYN_TRACE_ID /* @min:%2etraceID */]);\r\n    }\r\n    // Sample 4.0 schema\r\n    //  {\r\n    //     \"time\" : \"2018-09-05T22:51:22.4936Z\",\r\n    //     \"name\" : \"MetricWithNamespace\",\r\n    //     \"iKey\" : \"ABC-5a4cbd20-e601-4ef5-a3c6-5d6577e4398e\",\r\n    //     \"ext\": {  \"cloud\": {\r\n    //          \"role\": \"WATSON3\",\r\n    //          \"roleInstance\": \"CO4AEAP00000260\"\r\n    //      },\r\n    //      \"device\": {}, \"correlation\": {} },\r\n    //      \"tags\": [\r\n    //        { \"amazon.region\" : \"east2\" },\r\n    //        { \"os.expid\" : \"wp:02df239\" }\r\n    //     ]\r\n    //   }\r\n    var tgs = {};\r\n    // deals with tags.push({object})\r\n    for (var i = itmTags[_DYN_LENGTH /* @min:%2elength */] - 1; i >= 0; i--) {\r\n        var tg = itmTags[i];\r\n        objForEachKey(tg, function (key, value) {\r\n            tgs[key] = value;\r\n        });\r\n        itmTags.splice(i, 1);\r\n    }\r\n    // deals with tags[key]=value (and handles hasOwnProperty)\r\n    objForEachKey(itmTags, function (tg, value) {\r\n        tgs[tg] = value;\r\n    });\r\n    var theTags = __assign(__assign({}, envTags), tgs);\r\n    if (!theTags[CtxTagKeys.internalSdkVersion]) {\r\n        // Append a version in case it is not already set\r\n        theTags[CtxTagKeys.internalSdkVersion] = dataSanitizeString(logger, \"javascript:\".concat(EnvelopeCreator.Version), 64);\r\n    }\r\n    env[_DYN_TAGS /* @min:%2etags */] = optimizeObject(theTags);\r\n}\r\nfunction _extractPropsAndMeasurements(data, properties, measurements) {\r\n    if (!isNullOrUndefined(data)) {\r\n        objForEachKey(data, function (key, value) {\r\n            if (isNumber(value)) {\r\n                measurements[key] = value;\r\n            }\r\n            else if (isString(value)) {\r\n                properties[key] = value;\r\n            }\r\n            else if (hasJSON()) {\r\n                properties[key] = getJSON()[_DYN_STRINGIFY /* @min:%2estringify */](value);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction _convertPropsUndefinedToCustomDefinedValue(properties, customUndefinedValue) {\r\n    if (!isNullOrUndefined(properties)) {\r\n        objForEachKey(properties, function (key, value) {\r\n            properties[key] = value || customUndefinedValue;\r\n        });\r\n    }\r\n}\r\n// TODO: Do we want this to take logger as arg or use this._logger as nonstatic?\r\nfunction _createEnvelope(logger, envelopeType, telemetryItem, data) {\r\n    var envelope = new Envelope(logger, data, envelopeType);\r\n    _setValueIf(envelope, \"sampleRate\", telemetryItem[SampleRate]);\r\n    if ((telemetryItem[strBaseData] || {}).startTime) {\r\n        // Starting from Version 3.0.3, the time property will be assigned by the startTime value,\r\n        // which records the loadEvent time for the pageView event.\r\n        envelope.time = toISOString(telemetryItem[strBaseData].startTime);\r\n    }\r\n    envelope.iKey = telemetryItem.iKey;\r\n    var iKeyNoDashes = telemetryItem.iKey.replace(/-/g, \"\");\r\n    envelope[_DYN_NAME /* @min:%2ename */] = envelope[_DYN_NAME /* @min:%2ename */].replace(\"{0}\", iKeyNoDashes);\r\n    // extract all extensions from ctx\r\n    _extractPartAExtensions(logger, telemetryItem, envelope);\r\n    // loop through the envelope tags (extension of Part A) and pick out the ones that should go in outgoing envelope tags\r\n    telemetryItem[_DYN_TAGS /* @min:%2etags */] = telemetryItem[_DYN_TAGS /* @min:%2etags */] || [];\r\n    return optimizeObject(envelope);\r\n}\r\nfunction EnvelopeCreatorInit(logger, telemetryItem) {\r\n    if (isNullOrUndefined(telemetryItem[strBaseData])) {\r\n        _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 46 /* _eInternalMessageId.TelemetryEnvelopeInvalid */, \"telemetryItem.baseData cannot be null.\");\r\n    }\r\n}\r\nexport var EnvelopeCreator = {\r\n    Version: '3.3.3'\r\n};\r\nexport function DependencyEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    var customMeasurements = telemetryItem[strBaseData][_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    var customProperties = telemetryItem[strBaseData][strProperties] || {};\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], customProperties, customMeasurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(customProperties, customUndefinedValue);\r\n    }\r\n    var bd = telemetryItem[strBaseData];\r\n    if (isNullOrUndefined(bd)) {\r\n        _warnToConsole(logger, \"Invalid input for dependency data\");\r\n        return null;\r\n    }\r\n    var method = bd[strProperties] && bd[strProperties][HttpMethod] ? bd[strProperties][HttpMethod] : \"GET\";\r\n    var remoteDepData = new RemoteDependencyData(logger, bd.id, bd.target, bd[_DYN_NAME /* @min:%2ename */], bd[STR_DURATION /* @min:%2eduration */], bd.success, bd.responseCode, method, bd.type, bd.correlationContext, customProperties, customMeasurements);\r\n    var data = new Data(RemoteDependencyData[_DYN_DATA_TYPE /* @min:%2edataType */], remoteDepData);\r\n    return _createEnvelope(logger, RemoteDependencyData[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function EventEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    var customProperties = {};\r\n    var customMeasurements = {};\r\n    if (telemetryItem[strBaseType] !== Event[_DYN_DATA_TYPE /* @min:%2edataType */]) {\r\n        customProperties[\"baseTypeSource\"] = telemetryItem[strBaseType]; // save the passed in base type as a property\r\n    }\r\n    if (telemetryItem[strBaseType] === Event[_DYN_DATA_TYPE /* @min:%2edataType */]) { // take collection\r\n        customProperties = telemetryItem[strBaseData][strProperties] || {};\r\n        customMeasurements = telemetryItem[strBaseData][_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    }\r\n    else { // if its not a known type, convert to custom event\r\n        if (telemetryItem[strBaseData]) {\r\n            _extractPropsAndMeasurements(telemetryItem[strBaseData], customProperties, customMeasurements);\r\n        }\r\n    }\r\n    // Extract root level properties from part C telemetryItem.data\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], customProperties, customMeasurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(customProperties, customUndefinedValue);\r\n    }\r\n    var eventName = telemetryItem[strBaseData][_DYN_NAME /* @min:%2ename */];\r\n    var eventData = new Event(logger, eventName, customProperties, customMeasurements);\r\n    var data = new Data(Event[_DYN_DATA_TYPE /* @min:%2edataType */], eventData);\r\n    return _createEnvelope(logger, Event[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function ExceptionEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    // Extract root level properties from part C telemetryItem.data\r\n    var customMeasurements = telemetryItem[strBaseData][_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    var customProperties = telemetryItem[strBaseData][strProperties] || {};\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], customProperties, customMeasurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(customProperties, customUndefinedValue);\r\n    }\r\n    var bd = telemetryItem[strBaseData];\r\n    var exData = Exception.CreateFromInterface(logger, bd, customProperties, customMeasurements);\r\n    var data = new Data(Exception[_DYN_DATA_TYPE /* @min:%2edataType */], exData);\r\n    return _createEnvelope(logger, Exception[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function MetricEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    var baseData = telemetryItem[strBaseData];\r\n    var props = baseData[strProperties] || {};\r\n    var measurements = baseData[_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], props, measurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(props, customUndefinedValue);\r\n    }\r\n    var baseMetricData = new Metric(logger, baseData[_DYN_NAME /* @min:%2ename */], baseData.average, baseData.sampleCount, baseData.min, baseData.max, baseData.stdDev, props, measurements);\r\n    var data = new Data(Metric[_DYN_DATA_TYPE /* @min:%2edataType */], baseMetricData);\r\n    return _createEnvelope(logger, Metric[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function PageViewEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    // Since duration is not part of the domain properties in Common Schema, extract it from part C\r\n    var duration;\r\n    var baseData = telemetryItem[strBaseData];\r\n    if (!isNullOrUndefined(baseData) &&\r\n        !isNullOrUndefined(baseData[strProperties]) &&\r\n        !isNullOrUndefined(baseData[strProperties][STR_DURATION])) { // from part B properties\r\n        duration = baseData[strProperties][STR_DURATION];\r\n        delete baseData[strProperties][STR_DURATION];\r\n    }\r\n    else if (!isNullOrUndefined(telemetryItem[_DYN_DATA /* @min:%2edata */]) &&\r\n        !isNullOrUndefined(telemetryItem[_DYN_DATA /* @min:%2edata */][STR_DURATION])) { // from custom properties\r\n        duration = telemetryItem[_DYN_DATA /* @min:%2edata */][STR_DURATION];\r\n        delete telemetryItem[_DYN_DATA /* @min:%2edata */][STR_DURATION];\r\n    }\r\n    var bd = telemetryItem[strBaseData];\r\n    // special case: pageview.id is grabbed from current operation id. Analytics plugin is decoupled from properties plugin, so this is done here instead. This can be made a default telemetry intializer instead if needed to be decoupled from channel\r\n    var currentContextId;\r\n    if (((telemetryItem.ext || {}).trace || {})[_DYN_TRACE_ID /* @min:%2etraceID */]) {\r\n        currentContextId = telemetryItem.ext.trace[_DYN_TRACE_ID /* @min:%2etraceID */];\r\n    }\r\n    var id = bd.id || currentContextId;\r\n    var name = bd[_DYN_NAME /* @min:%2ename */];\r\n    var url = bd.uri;\r\n    var properties = bd[strProperties] || {};\r\n    var measurements = bd[_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    // refUri is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n    if (!isNullOrUndefined(bd.refUri)) {\r\n        properties[\"refUri\"] = bd.refUri;\r\n    }\r\n    // pageType is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n    if (!isNullOrUndefined(bd.pageType)) {\r\n        properties[\"pageType\"] = bd.pageType;\r\n    }\r\n    // isLoggedIn is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n    if (!isNullOrUndefined(bd.isLoggedIn)) {\r\n        properties[\"isLoggedIn\"] = bd.isLoggedIn[_DYN_TO_STRING /* @min:%2etoString */]();\r\n    }\r\n    // pageTags is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n    if (!isNullOrUndefined(bd[strProperties])) {\r\n        var pageTags = bd[strProperties];\r\n        objForEachKey(pageTags, function (key, value) {\r\n            properties[key] = value;\r\n        });\r\n    }\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], properties, measurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(properties, customUndefinedValue);\r\n    }\r\n    var pageViewData = new PageView(logger, name, url, duration, properties, measurements, id);\r\n    var data = new Data(PageView[_DYN_DATA_TYPE /* @min:%2edataType */], pageViewData);\r\n    return _createEnvelope(logger, PageView[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function PageViewPerformanceEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    var bd = telemetryItem[strBaseData];\r\n    var name = bd[_DYN_NAME /* @min:%2ename */];\r\n    var url = bd.uri || bd.url;\r\n    var properties = bd[strProperties] || {};\r\n    var measurements = bd[_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], properties, measurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(properties, customUndefinedValue);\r\n    }\r\n    var baseData = new PageViewPerformance(logger, name, url, undefined, properties, measurements, bd);\r\n    var data = new Data(PageViewPerformance[_DYN_DATA_TYPE /* @min:%2edataType */], baseData);\r\n    return _createEnvelope(logger, PageViewPerformance[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function TraceEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    var message = telemetryItem[strBaseData].message;\r\n    var severityLevel = telemetryItem[strBaseData].severityLevel;\r\n    var props = telemetryItem[strBaseData][strProperties] || {};\r\n    var measurements = telemetryItem[strBaseData][_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], props, measurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(props, customUndefinedValue);\r\n    }\r\n    var baseData = new Trace(logger, message, severityLevel, props, measurements);\r\n    var data = new Data(Trace[_DYN_DATA_TYPE /* @min:%2edataType */], baseData);\r\n    return _createEnvelope(logger, Trace[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\n//# sourceMappingURL=EnvelopeCreator.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { utlGetSessionStorage, utlRemoveSessionStorage, utlSetSessionStorage } from \"@microsoft/applicationinsights-common\";\r\nimport { _throwInternal, arrForEach, arrIndexOf, dumpObj, getExceptionName, getJSON, isArray, isFunction, isNullOrUndefined, isString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_BUFFER_OVERRIDE, _DYN_CLEAR, _DYN_CLEAR_SENT, _DYN_CONCAT, _DYN_COUNT, _DYN_CREATE_NEW, _DYN_EMIT_LINE_DELIMITED_0, _DYN_ENQUEUE, _DYN_EVENTS_LIMIT_IN_MEM, _DYN_ITEM, _DYN_LENGTH, _DYN_MARK_AS_SENT, _DYN_PUSH, _DYN_STRINGIFY, _DYN__BUFFER__KEY, _DYN__GET, _DYN__MAX__BUFFER__SIZE, _DYN__SENT__BUFFER__KEY } from \"./__DynamicConstants\";\r\nvar BaseSendBuffer = /** @class */ (function () {\r\n    function BaseSendBuffer(logger, config) {\r\n        var _buffer = [];\r\n        var _bufferFullMessageSent = false;\r\n        var _maxRetryCnt = config.maxRetryCnt;\r\n        this[_DYN__GET /* @min:%2e_get */] = function () {\r\n            return _buffer;\r\n        };\r\n        this._set = function (buffer) {\r\n            _buffer = buffer;\r\n            return _buffer;\r\n        };\r\n        dynamicProto(BaseSendBuffer, this, function (_self) {\r\n            _self[_DYN_ENQUEUE /* @min:%2eenqueue */] = function (payload) {\r\n                if (_self[_DYN_COUNT /* @min:%2ecount */]() >= config[_DYN_EVENTS_LIMIT_IN_MEM /* @min:%2eeventsLimitInMem */]) {\r\n                    // sent internal log only once per page view\r\n                    if (!_bufferFullMessageSent) {\r\n                        _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 105 /* _eInternalMessageId.InMemoryStorageBufferFull */, \"Maximum in-memory buffer size reached: \" + _self[_DYN_COUNT /* @min:%2ecount */](), true);\r\n                        _bufferFullMessageSent = true;\r\n                    }\r\n                    return;\r\n                }\r\n                payload.cnt = payload.cnt || 0;\r\n                // max retry is defined, and max retry is reached, do not add the payload to buffer\r\n                if (!isNullOrUndefined(_maxRetryCnt)) {\r\n                    if (payload.cnt > _maxRetryCnt) {\r\n                        // TODO: add log here on dropping payloads\r\n                        return;\r\n                    }\r\n                }\r\n                _buffer[_DYN_PUSH /* @min:%2epush */](payload);\r\n                return;\r\n            };\r\n            _self[_DYN_COUNT /* @min:%2ecount */] = function () {\r\n                return _buffer[_DYN_LENGTH /* @min:%2elength */];\r\n            };\r\n            _self.size = function () {\r\n                var size = _buffer[_DYN_LENGTH /* @min:%2elength */];\r\n                for (var lp = 0; lp < _buffer[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                    size += (_buffer[lp].item)[_DYN_LENGTH /* @min:%2elength */];\r\n                }\r\n                if (!config[_DYN_EMIT_LINE_DELIMITED_0 /* @min:%2eemitLineDelimitedJson */]) {\r\n                    size += 2;\r\n                }\r\n                return size;\r\n            };\r\n            _self[_DYN_CLEAR /* @min:%2eclear */] = function () {\r\n                _buffer = [];\r\n                _bufferFullMessageSent = false;\r\n            };\r\n            _self.getItems = function () {\r\n                return _buffer.slice(0);\r\n            };\r\n            _self.batchPayloads = function (payloads) {\r\n                if (payloads && payloads[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var payloadStr_1 = [];\r\n                    arrForEach(payloads, function (payload) {\r\n                        payloadStr_1[_DYN_PUSH /* @min:%2epush */](payload[_DYN_ITEM /* @min:%2eitem */]);\r\n                    });\r\n                    var batch = config[_DYN_EMIT_LINE_DELIMITED_0 /* @min:%2eemitLineDelimitedJson */] ?\r\n                        payloadStr_1.join(\"\\n\") :\r\n                        \"[\" + payloadStr_1.join(\",\") + \"]\";\r\n                    return batch;\r\n                }\r\n                return null;\r\n            };\r\n            _self[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = function (newLogger, newConfig, canUseSessionStorage) {\r\n                var items = _buffer.slice(0);\r\n                newLogger = newLogger || logger;\r\n                newConfig = newConfig || {};\r\n                var newBuffer = !!canUseSessionStorage ? new SessionStorageSendBuffer(newLogger, newConfig) : new ArraySendBuffer(newLogger, newConfig);\r\n                arrForEach(items, function (payload) {\r\n                    newBuffer[_DYN_ENQUEUE /* @min:%2eenqueue */](payload);\r\n                });\r\n                return newBuffer;\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for BaseSendBuffer.prototype.enqueue.\r\n// Removed Stub for BaseSendBuffer.prototype.count.\r\n// Removed Stub for BaseSendBuffer.prototype.size.\r\n// Removed Stub for BaseSendBuffer.prototype.clear.\r\n// Removed Stub for BaseSendBuffer.prototype.getItems.\r\n// Removed Stub for BaseSendBuffer.prototype.batchPayloads.\r\n// Removed Stub for BaseSendBuffer.prototype.createNew.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    BaseSendBuffer.__ieDyn=1;\n\n    return BaseSendBuffer;\r\n}());\r\n/*\r\n * An array based send buffer.\r\n */\r\nvar ArraySendBuffer = /** @class */ (function (_super) {\r\n    __extends(ArraySendBuffer, _super);\r\n    function ArraySendBuffer(logger, config) {\r\n        var _this = _super.call(this, logger, config) || this;\r\n        dynamicProto(ArraySendBuffer, _this, function (_self, _base) {\r\n            _self[_DYN_MARK_AS_SENT /* @min:%2emarkAsSent */] = function (payload) {\r\n                _base[_DYN_CLEAR /* @min:%2eclear */]();\r\n            };\r\n            _self[_DYN_CLEAR_SENT /* @min:%2eclearSent */] = function (payload) {\r\n                // not supported\r\n            };\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for ArraySendBuffer.prototype.markAsSent.\r\n// Removed Stub for ArraySendBuffer.prototype.clearSent.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    ArraySendBuffer.__ieDyn=1;\n\n    return ArraySendBuffer;\r\n}(BaseSendBuffer));\r\nexport { ArraySendBuffer };\r\nvar PREVIOUS_KEYS = [\"AI_buffer\", \"AI_sentBuffer\"];\r\n/*\r\n * Session storage buffer holds a copy of all unsent items in the browser session storage.\r\n */\r\nvar SessionStorageSendBuffer = /** @class */ (function (_super) {\r\n    __extends(SessionStorageSendBuffer, _super);\r\n    function SessionStorageSendBuffer(logger, config) {\r\n        var _this = _super.call(this, logger, config) || this;\r\n        var _bufferFullMessageSent = false;\r\n        //Note: should not use config.namePrefix directly, because it will always refers to the latest namePrefix\r\n        var _namePrefix = config === null || config === void 0 ? void 0 : config.namePrefix;\r\n        // TODO: add remove buffer override as well\r\n        var _b = config[_DYN_BUFFER_OVERRIDE /* @min:%2ebufferOverride */] || { getItem: utlGetSessionStorage, setItem: utlSetSessionStorage }, getItem = _b.getItem, setItem = _b.setItem;\r\n        var _maxRetryCnt = config.maxRetryCnt;\r\n        dynamicProto(SessionStorageSendBuffer, _this, function (_self, _base) {\r\n            var bufferItems = _getBuffer(SessionStorageSendBuffer[_DYN__BUFFER__KEY /* @min:%2eBUFFER_KEY */]);\r\n            var itemsInSentBuffer = _getBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */]);\r\n            var previousItems = _getPreviousEvents();\r\n            var notDeliveredItems = itemsInSentBuffer[_DYN_CONCAT /* @min:%2econcat */](previousItems);\r\n            var buffer = _self._set(bufferItems[_DYN_CONCAT /* @min:%2econcat */](notDeliveredItems));\r\n            // If the buffer has too many items, drop items from the end.\r\n            if (buffer[_DYN_LENGTH /* @min:%2elength */] > SessionStorageSendBuffer[_DYN__MAX__BUFFER__SIZE /* @min:%2eMAX_BUFFER_SIZE */]) {\r\n                buffer[_DYN_LENGTH /* @min:%2elength */] = SessionStorageSendBuffer[_DYN__MAX__BUFFER__SIZE /* @min:%2eMAX_BUFFER_SIZE */];\r\n            }\r\n            _setBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */], []);\r\n            _setBuffer(SessionStorageSendBuffer[_DYN__BUFFER__KEY /* @min:%2eBUFFER_KEY */], buffer);\r\n            _self[_DYN_ENQUEUE /* @min:%2eenqueue */] = function (payload) {\r\n                if (_self[_DYN_COUNT /* @min:%2ecount */]() >= SessionStorageSendBuffer[_DYN__MAX__BUFFER__SIZE /* @min:%2eMAX_BUFFER_SIZE */]) {\r\n                    // sent internal log only once per page view\r\n                    if (!_bufferFullMessageSent) {\r\n                        _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 67 /* _eInternalMessageId.SessionStorageBufferFull */, \"Maximum buffer size reached: \" + _self[_DYN_COUNT /* @min:%2ecount */](), true);\r\n                        _bufferFullMessageSent = true;\r\n                    }\r\n                    return;\r\n                }\r\n                payload.cnt = payload.cnt || 0;\r\n                // max retry is defined, and max retry is reached, do not add the payload to buffer\r\n                if (!isNullOrUndefined(_maxRetryCnt)) {\r\n                    if (payload.cnt > _maxRetryCnt) {\r\n                        // TODO: add log here on dropping payloads\r\n                        return;\r\n                    }\r\n                }\r\n                _base[_DYN_ENQUEUE /* @min:%2eenqueue */](payload);\r\n                _setBuffer(SessionStorageSendBuffer.BUFFER_KEY, _self[_DYN__GET /* @min:%2e_get */]());\r\n            };\r\n            _self[_DYN_CLEAR /* @min:%2eclear */] = function () {\r\n                _base[_DYN_CLEAR /* @min:%2eclear */]();\r\n                _setBuffer(SessionStorageSendBuffer.BUFFER_KEY, _self[_DYN__GET /* @min:%2e_get */]());\r\n                _setBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */], []);\r\n                _bufferFullMessageSent = false;\r\n            };\r\n            _self[_DYN_MARK_AS_SENT /* @min:%2emarkAsSent */] = function (payload) {\r\n                _setBuffer(SessionStorageSendBuffer[_DYN__BUFFER__KEY /* @min:%2eBUFFER_KEY */], _self._set(_removePayloadsFromBuffer(payload, _self[_DYN__GET /* @min:%2e_get */]())));\r\n                var sentElements = _getBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */]);\r\n                if (sentElements instanceof Array && payload instanceof Array) {\r\n                    sentElements = sentElements[_DYN_CONCAT /* @min:%2econcat */](payload);\r\n                    if (sentElements[_DYN_LENGTH /* @min:%2elength */] > SessionStorageSendBuffer[_DYN__MAX__BUFFER__SIZE /* @min:%2eMAX_BUFFER_SIZE */]) {\r\n                        // We send telemetry normally. If the SENT_BUFFER is too big we don't add new elements\r\n                        // until we receive a response from the backend and the buffer has free space again (see clearSent method)\r\n                        _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 67 /* _eInternalMessageId.SessionStorageBufferFull */, \"Sent buffer reached its maximum size: \" + sentElements[_DYN_LENGTH /* @min:%2elength */], true);\r\n                        sentElements[_DYN_LENGTH /* @min:%2elength */] = SessionStorageSendBuffer[_DYN__MAX__BUFFER__SIZE /* @min:%2eMAX_BUFFER_SIZE */];\r\n                    }\r\n                    _setBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */], sentElements);\r\n                }\r\n            };\r\n            _self[_DYN_CLEAR_SENT /* @min:%2eclearSent */] = function (payload) {\r\n                var sentElements = _getBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */]);\r\n                sentElements = _removePayloadsFromBuffer(payload, sentElements);\r\n                _setBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */], sentElements);\r\n            };\r\n            _self[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = function (newLogger, newConfig, canUseSessionStorage) {\r\n                canUseSessionStorage = !!canUseSessionStorage;\r\n                var unsentItems = _self[_DYN__GET /* @min:%2e_get */]().slice(0);\r\n                var sentItems = _getBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */]).slice(0);\r\n                newLogger = newLogger || logger;\r\n                newConfig = newConfig || {};\r\n                // to make sure that we do not send duplicated payloads when it is switched back to previous one\r\n                _self[_DYN_CLEAR /* @min:%2eclear */]();\r\n                var newBuffer = canUseSessionStorage ? new SessionStorageSendBuffer(newLogger, newConfig) : new ArraySendBuffer(newLogger, newConfig);\r\n                arrForEach(unsentItems, function (payload) {\r\n                    newBuffer[_DYN_ENQUEUE /* @min:%2eenqueue */](payload);\r\n                });\r\n                if (canUseSessionStorage) {\r\n                    // arr buffer will clear all payloads if markAsSent() is called\r\n                    newBuffer[_DYN_MARK_AS_SENT /* @min:%2emarkAsSent */](sentItems);\r\n                }\r\n                return newBuffer;\r\n            };\r\n            function _removePayloadsFromBuffer(payloads, buffer) {\r\n                var remaining = [];\r\n                var payloadStr = [];\r\n                arrForEach(payloads, function (payload) {\r\n                    payloadStr[_DYN_PUSH /* @min:%2epush */](payload[_DYN_ITEM /* @min:%2eitem */]);\r\n                });\r\n                arrForEach(buffer, function (value) {\r\n                    if (!isFunction(value) && arrIndexOf(payloadStr, value[_DYN_ITEM /* @min:%2eitem */]) === -1) {\r\n                        remaining[_DYN_PUSH /* @min:%2epush */](value);\r\n                    }\r\n                });\r\n                return remaining;\r\n            }\r\n            function _getBuffer(key) {\r\n                var prefixedKey = key;\r\n                prefixedKey = _namePrefix ? _namePrefix + \"_\" + prefixedKey : prefixedKey;\r\n                return _getBufferBase(prefixedKey);\r\n            }\r\n            function _getBufferBase(key) {\r\n                try {\r\n                    var bufferJson = getItem(logger, key);\r\n                    if (bufferJson) {\r\n                        var buffer_1 = getJSON().parse(bufferJson);\r\n                        if (isString(buffer_1)) {\r\n                            // When using some version prototype.js the stringify / parse cycle does not decode array's correctly\r\n                            buffer_1 = getJSON().parse(buffer_1);\r\n                        }\r\n                        if (buffer_1 && isArray(buffer_1)) {\r\n                            return buffer_1;\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 42 /* _eInternalMessageId.FailedToRestoreStorageBuffer */, \" storage key: \" + key + \", \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n                return [];\r\n            }\r\n            function _setBuffer(key, buffer) {\r\n                var prefixedKey = key;\r\n                try {\r\n                    prefixedKey = _namePrefix ? _namePrefix + \"_\" + prefixedKey : prefixedKey;\r\n                    var bufferJson = JSON[_DYN_STRINGIFY /* @min:%2estringify */](buffer);\r\n                    setItem(logger, prefixedKey, bufferJson);\r\n                }\r\n                catch (e) {\r\n                    // if there was an error, clear the buffer\r\n                    // telemetry is stored in the _buffer array so we won't loose any items\r\n                    setItem(logger, prefixedKey, JSON[_DYN_STRINGIFY /* @min:%2estringify */]([]));\r\n                    _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 41 /* _eInternalMessageId.FailedToSetStorageBuffer */, \" storage key: \" + prefixedKey + \", \" + getExceptionName(e) + \". Buffer cleared\", { exception: dumpObj(e) });\r\n                }\r\n            }\r\n            // this removes buffer with prefix+key\r\n            function _getPreviousEvents() {\r\n                var items = [];\r\n                try {\r\n                    arrForEach(PREVIOUS_KEYS, function (key) {\r\n                        var events = _getItemsFromPreviousKey(key);\r\n                        items = items[_DYN_CONCAT /* @min:%2econcat */](events);\r\n                        // to make sure that we also transfer items from old prefixed + key buffer\r\n                        if (_namePrefix) {\r\n                            var prefixedKey = _namePrefix + \"_\" + key;\r\n                            var prefixEvents = _getItemsFromPreviousKey(prefixedKey);\r\n                            items = items[_DYN_CONCAT /* @min:%2econcat */](prefixEvents);\r\n                        }\r\n                    });\r\n                    return items;\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 41 /* _eInternalMessageId.FailedToSetStorageBuffer */, \"Transfer events from previous buffers: \" + getExceptionName(e) + \". previous Buffer items can not be removed\", { exception: dumpObj(e) });\r\n                }\r\n                return [];\r\n            }\r\n            // transform string[] to IInternalStorageItem[]\r\n            function _getItemsFromPreviousKey(key) {\r\n                try {\r\n                    var items = _getBufferBase(key);\r\n                    var transFormedItems_1 = [];\r\n                    arrForEach(items, function (item) {\r\n                        var internalItem = {\r\n                            item: item,\r\n                            cnt: 0 // previous events will be default to 0 count\r\n                        };\r\n                        transFormedItems_1[_DYN_PUSH /* @min:%2epush */](internalItem);\r\n                    });\r\n                    // remove the session storage if we can add events back\r\n                    utlRemoveSessionStorage(logger, key);\r\n                    return transFormedItems_1;\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return [];\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for SessionStorageSendBuffer.prototype.enqueue.\r\n// Removed Stub for SessionStorageSendBuffer.prototype.clear.\r\n// Removed Stub for SessionStorageSendBuffer.prototype.markAsSent.\r\n// Removed Stub for SessionStorageSendBuffer.prototype.clearSent.\r\n// Removed Stub for SessionStorageSendBuffer.prototype.createNew.\r\n    var _a;\r\n    _a = SessionStorageSendBuffer;\r\n    SessionStorageSendBuffer.VERSION = \"_1\";\r\n    SessionStorageSendBuffer.BUFFER_KEY = \"AI_buffer\" + _a.VERSION;\r\n    SessionStorageSendBuffer.SENT_BUFFER_KEY = \"AI_sentBuffer\" + _a.VERSION;\r\n    // Maximum number of payloads stored in the buffer. If the buffer is full, new elements will be dropped.\r\n    SessionStorageSendBuffer.MAX_BUFFER_SIZE = 2000;\r\n    return SessionStorageSendBuffer;\r\n}(BaseSendBuffer));\r\nexport { SessionStorageSendBuffer };\r\n//# sourceMappingURL=SendBuffer.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nvar _a, _b;\r\nimport { __assignFn as __assign, __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { BreezeChannelIdentifier, DEFAULT_BREEZE_ENDPOINT, DEFAULT_BREEZE_PATH, Event, Exception, Metric, PageView, PageViewPerformance, ProcessLegacy, RemoteDependencyData, RequestHeaders, SampleRate, Trace, createOfflineListener, isInternalApplicationInsightsEndpoint, utlCanUseSessionStorage, utlSetStoragePrefix } from \"@microsoft/applicationinsights-common\";\r\nimport { ActiveStatus, BaseTelemetryPlugin, SenderPostManager, _throwInternal, _warnToConsole, arrForEach, cfgDfBoolean, cfgDfValidate, createProcessTelemetryContext, createUniqueNamespace, dateNow, dumpObj, formatErrorMessageXdr, formatErrorMessageXhr, getExceptionName, getIEVersion, isArray, isBeaconsSupported, isFetchSupported, isNullOrUndefined, mergeEvtNamespace, objExtend, onConfigChange, parseResponse, prependTransports, runTargetUnload } from \"@microsoft/applicationinsights-core-js\";\r\nimport { isNumber, isPromiseLike, isString, isTruthy, objDeepFreeze, objDefine, scheduleTimeout } from \"@nevware21/ts-utils\";\r\nimport { DependencyEnvelopeCreator, EventEnvelopeCreator, ExceptionEnvelopeCreator, MetricEnvelopeCreator, PageViewEnvelopeCreator, PageViewPerformanceEnvelopeCreator, TraceEnvelopeCreator } from \"./EnvelopeCreator\";\r\nimport { ArraySendBuffer, SessionStorageSendBuffer } from \"./SendBuffer\";\r\nimport { Serializer } from \"./Serializer\";\r\nimport { Sample } from \"./TelemetryProcessors/Sample\";\r\nimport { _DYN_ALWAYS_USE_XHR_OVERR4, _DYN_BASE_TYPE, _DYN_BUFFER_OVERRIDE, _DYN_CLEAR, _DYN_CLEAR_SENT, _DYN_CONVERT_UNDEFINED, _DYN_COUNT, _DYN_CREATE_NEW, _DYN_CUSTOM_HEADERS, _DYN_DATA, _DYN_DIAG_LOG, _DYN_DISABLE_SEND_BEACON_7, _DYN_DISABLE_XHR, _DYN_EMIT_LINE_DELIMITED_0, _DYN_ENABLE_SEND_PROMISE, _DYN_ENABLE_SESSION_STORA5, _DYN_ENDPOINT_URL, _DYN_ENQUEUE, _DYN_EVENTS_LIMIT_IN_MEM, _DYN_EVENTS_SEND_REQUEST, _DYN_GET_SENDER_INST, _DYN_INITIALIZE, _DYN_INSTRUMENTATION_KEY, _DYN_IS_BEACON_API_DISABL3, _DYN_ITEM, _DYN_ITEMS_ACCEPTED, _DYN_ITEMS_RECEIVED, _DYN_LENGTH, _DYN_MARK_AS_SENT, _DYN_MAX_BATCH_INTERVAL, _DYN_MAX_BATCH_SIZE_IN_BY1, _DYN_ONUNLOAD_DISABLE_BEA2, _DYN_ONUNLOAD_DISABLE_FET6, _DYN_ORI_PAYLOAD, _DYN_PUSH, _DYN_SAMPLE_RATE, _DYN_SERIALIZE, _DYN_TAGS, _DYN_TRIGGER_SEND, _DYN_UNLOAD_TRANSPORTS, _DYN__BUFFER, _DYN__ON_ERROR, _DYN__ON_PARTIAL_SUCCESS, _DYN__ON_SUCCESS, _DYN__SENDER } from \"./__DynamicConstants\";\r\nvar UNDEFINED_VALUE = undefined;\r\nvar EMPTY_STR = \"\";\r\nvar FetchSyncRequestSizeLimitBytes = 65000; // approx 64kb (the current Edge, Firefox and Chrome max limit)\r\nfunction _getResponseText(xhr) {\r\n    try {\r\n        return xhr.responseText;\r\n    }\r\n    catch (e) {\r\n        // Best effort, as XHR may throw while XDR wont so just ignore\r\n    }\r\n    return null;\r\n}\r\nfunction isOverrideFn(httpXHROverride) {\r\n    return httpXHROverride && httpXHROverride.sendPOST;\r\n}\r\nvar defaultAppInsightsChannelConfig = objDeepFreeze((_a = {\r\n        // Use the default value (handles empty string in the configuration)\r\n        endpointUrl: cfgDfValidate(isTruthy, DEFAULT_BREEZE_ENDPOINT + DEFAULT_BREEZE_PATH)\r\n    },\r\n    _a[_DYN_EMIT_LINE_DELIMITED_0 /* @min:emitLineDelimitedJson */] = cfgDfBoolean(),\r\n    _a[_DYN_MAX_BATCH_INTERVAL /* @min:maxBatchInterval */] = 15000,\r\n    _a[_DYN_MAX_BATCH_SIZE_IN_BY1 /* @min:maxBatchSizeInBytes */] = 102400,\r\n    _a.disableTelemetry = cfgDfBoolean(),\r\n    _a[_DYN_ENABLE_SESSION_STORA5 /* @min:enableSessionStorageBuffer */] = cfgDfBoolean(true),\r\n    _a.isRetryDisabled = cfgDfBoolean(),\r\n    _a[_DYN_IS_BEACON_API_DISABL3 /* @min:isBeaconApiDisabled */] = cfgDfBoolean(true),\r\n    _a[_DYN_DISABLE_SEND_BEACON_7 /* @min:disableSendBeaconSplit */] = cfgDfBoolean(true),\r\n    _a[_DYN_DISABLE_XHR /* @min:disableXhr */] = cfgDfBoolean(),\r\n    _a[_DYN_ONUNLOAD_DISABLE_FET6 /* @min:onunloadDisableFetch */] = cfgDfBoolean(),\r\n    _a[_DYN_ONUNLOAD_DISABLE_BEA2 /* @min:onunloadDisableBeacon */] = cfgDfBoolean(),\r\n    _a[_DYN_INSTRUMENTATION_KEY /* @min:instrumentationKey */] = UNDEFINED_VALUE,\r\n    _a.namePrefix = UNDEFINED_VALUE,\r\n    _a.samplingPercentage = cfgDfValidate(_chkSampling, 100),\r\n    _a[_DYN_CUSTOM_HEADERS /* @min:customHeaders */] = UNDEFINED_VALUE,\r\n    _a[_DYN_CONVERT_UNDEFINED /* @min:convertUndefined */] = UNDEFINED_VALUE,\r\n    _a[_DYN_EVENTS_LIMIT_IN_MEM /* @min:eventsLimitInMem */] = 10000,\r\n    _a[_DYN_BUFFER_OVERRIDE /* @min:bufferOverride */] = false,\r\n    _a.httpXHROverride = { isVal: isOverrideFn, v: UNDEFINED_VALUE },\r\n    _a[_DYN_ALWAYS_USE_XHR_OVERR4 /* @min:alwaysUseXhrOverride */] = cfgDfBoolean(),\r\n    _a.transports = UNDEFINED_VALUE,\r\n    _a.retryCodes = UNDEFINED_VALUE,\r\n    _a.maxRetryCnt = { isVal: isNumber, v: 10 },\r\n    _a));\r\nfunction _chkSampling(value) {\r\n    return !isNaN(value) && value > 0 && value <= 100;\r\n}\r\nvar EnvelopeTypeCreator = (_b = {},\r\n    _b[Event.dataType] = EventEnvelopeCreator,\r\n    _b[Trace.dataType] = TraceEnvelopeCreator,\r\n    _b[PageView.dataType] = PageViewEnvelopeCreator,\r\n    _b[PageViewPerformance.dataType] = PageViewPerformanceEnvelopeCreator,\r\n    _b[Exception.dataType] = ExceptionEnvelopeCreator,\r\n    _b[Metric.dataType] = MetricEnvelopeCreator,\r\n    _b[RemoteDependencyData.dataType] = DependencyEnvelopeCreator,\r\n    _b);\r\nvar Sender = /** @class */ (function (_super) {\r\n    __extends(Sender, _super);\r\n    function Sender() {\r\n        var _this = _super.call(this) || this;\r\n        _this.priority = 1001;\r\n        _this.identifier = BreezeChannelIdentifier;\r\n        // Don't set the defaults here, set them in the _initDefaults() as this is also called during unload\r\n        var _consecutiveErrors; // How many times in a row a retryable error condition has occurred.\r\n        var _retryAt; // The time to retry at in milliseconds from 1970/01/01 (this makes the timer calculation easy).\r\n        var _lastSend; // The time of the last send operation.\r\n        var _paused; // Flag indicating that the sending should be paused\r\n        var _timeoutHandle; // Handle to the timer for delayed sending of batches of data.\r\n        var _serializer;\r\n        var _stamp_specific_redirects;\r\n        var _headers;\r\n        var _syncFetchPayload = 0; // Keep track of the outstanding sync fetch payload total (as sync fetch has limits)\r\n        var _syncUnloadSender; // The identified sender to use for the synchronous unload stage\r\n        var _offlineListener;\r\n        var _evtNamespace;\r\n        var _endpointUrl;\r\n        var _orgEndpointUrl;\r\n        var _maxBatchSizeInBytes;\r\n        var _beaconSupported;\r\n        var _beaconOnUnloadSupported;\r\n        var _beaconNormalSupported;\r\n        var _customHeaders;\r\n        var _disableTelemetry;\r\n        var _instrumentationKey;\r\n        var _convertUndefined;\r\n        var _isRetryDisabled;\r\n        var _maxBatchInterval;\r\n        var _sessionStorageUsed;\r\n        var _bufferOverrideUsed;\r\n        var _namePrefix;\r\n        var _enableSendPromise;\r\n        var _alwaysUseCustomSend;\r\n        var _disableXhr;\r\n        var _fetchKeepAlive;\r\n        var _xhrSend;\r\n        var _fallbackSend;\r\n        var _disableBeaconSplit;\r\n        var _sendPostMgr;\r\n        var _retryCodes;\r\n        dynamicProto(Sender, _this, function (_self, _base) {\r\n            _initDefaults();\r\n            _self.pause = function () {\r\n                _clearScheduledTimer();\r\n                _paused = true;\r\n            };\r\n            _self.resume = function () {\r\n                if (_paused) {\r\n                    _paused = false;\r\n                    _retryAt = null;\r\n                    // flush if we have exceeded the max-size already\r\n                    _checkMaxSize();\r\n                    _setupTimer();\r\n                }\r\n            };\r\n            _self.flush = function (isAsync, callBack, sendReason) {\r\n                if (isAsync === void 0) { isAsync = true; }\r\n                if (!_paused) {\r\n                    // Clear the normal schedule timer as we are going to try and flush ASAP\r\n                    _clearScheduledTimer();\r\n                    try {\r\n                        return _self[_DYN_TRIGGER_SEND /* @min:%2etriggerSend */](isAsync, null, sendReason || 1 /* SendRequestReason.ManualFlush */);\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 22 /* _eInternalMessageId.FlushFailed */, \"flush failed, telemetry will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                    }\r\n                }\r\n            };\r\n            _self.onunloadFlush = function () {\r\n                if (!_paused) {\r\n                    if (_beaconSupported || _alwaysUseCustomSend) {\r\n                        try {\r\n                            return _self[_DYN_TRIGGER_SEND /* @min:%2etriggerSend */](true, _doUnloadSend, 2 /* SendRequestReason.Unload */);\r\n                        }\r\n                        catch (e) {\r\n                            _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 20 /* _eInternalMessageId.FailedToSendQueuedTelemetry */, \"failed to flush with beacon sender on page unload, telemetry will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                        }\r\n                    }\r\n                    else {\r\n                        _self.flush(false);\r\n                    }\r\n                }\r\n            };\r\n            _self.addHeader = function (name, value) {\r\n                _headers[name] = value;\r\n            };\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (config, core, extensions, pluginChain) {\r\n                if (_self.isInitialized()) {\r\n                    _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 28 /* _eInternalMessageId.SenderNotInitialized */, \"Sender is already initialized\");\r\n                }\r\n                _base[_DYN_INITIALIZE /* @min:%2einitialize */](config, core, extensions, pluginChain);\r\n                var identifier = _self.identifier;\r\n                _serializer = new Serializer(core.logger);\r\n                _consecutiveErrors = 0;\r\n                _retryAt = null;\r\n                _lastSend = 0;\r\n                _self[_DYN__SENDER /* @min:%2e_sender */] = null;\r\n                _stamp_specific_redirects = 0;\r\n                var diagLog = _self[_DYN_DIAG_LOG /* @min:%2ediagLog */]();\r\n                _evtNamespace = mergeEvtNamespace(createUniqueNamespace(\"Sender\"), core.evtNamespace && core.evtNamespace());\r\n                _offlineListener = createOfflineListener(_evtNamespace);\r\n                // This function will be re-called whenever any referenced configuration is changed\r\n                _self._addHook(onConfigChange(config, function (details) {\r\n                    var config = details.cfg;\r\n                    if (config.storagePrefix) {\r\n                        utlSetStoragePrefix(config.storagePrefix);\r\n                    }\r\n                    var ctx = createProcessTelemetryContext(null, config, core);\r\n                    // getExtCfg only finds undefined values from core\r\n                    var senderConfig = ctx.getExtCfg(identifier, defaultAppInsightsChannelConfig);\r\n                    if (isPromiseLike(senderConfig[_DYN_ENDPOINT_URL /* @min:%2eendpointUrl */])) {\r\n                        // if it is promise, means the endpoint url is from core.endpointurl\r\n                        senderConfig[_DYN_ENDPOINT_URL /* @min:%2eendpointUrl */] = config[_DYN_ENDPOINT_URL /* @min:%2eendpointUrl */];\r\n                    }\r\n                    if (isPromiseLike(senderConfig[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */])) {\r\n                        // if it is promise, means the endpoint url is from core.endpointurl\r\n                        senderConfig[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */] = config[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */];\r\n                    }\r\n                    objDefine(_self, \"_senderConfig\", {\r\n                        g: function () {\r\n                            return senderConfig;\r\n                        }\r\n                    });\r\n                    // Only update the endpoint if the original config !== the current config\r\n                    // This is so any redirect endpointUrl is not overwritten\r\n                    if (_orgEndpointUrl !== senderConfig[_DYN_ENDPOINT_URL /* @min:%2eendpointUrl */]) {\r\n                        if (_orgEndpointUrl) {\r\n                            // TODO: add doc to remind users to flush before changing endpoint, otherwise all unsent payload will be sent to new endpoint\r\n                        }\r\n                        _endpointUrl = _orgEndpointUrl = senderConfig[_DYN_ENDPOINT_URL /* @min:%2eendpointUrl */];\r\n                    }\r\n                    // or is not string\r\n                    if (core.activeStatus() === ActiveStatus.PENDING) {\r\n                        // waiting for core promises to be resolved\r\n                        // NOTE: if active status is set to pending, stop sending, clear timer here\r\n                        _self.pause();\r\n                    }\r\n                    else if (core.activeStatus() === ActiveStatus.ACTIVE) {\r\n                        // core status changed from pending to other status\r\n                        _self.resume();\r\n                    }\r\n                    if (_customHeaders && _customHeaders !== senderConfig[_DYN_CUSTOM_HEADERS /* @min:%2ecustomHeaders */]) {\r\n                        // Removing any previously defined custom headers as they have changed\r\n                        arrForEach(_customHeaders, function (customHeader) {\r\n                            delete _headers[customHeader.header];\r\n                        });\r\n                    }\r\n                    _maxBatchSizeInBytes = senderConfig[_DYN_MAX_BATCH_SIZE_IN_BY1 /* @min:%2emaxBatchSizeInBytes */];\r\n                    _beaconSupported = (senderConfig[_DYN_ONUNLOAD_DISABLE_BEA2 /* @min:%2eonunloadDisableBeacon */] === false || senderConfig[_DYN_IS_BEACON_API_DISABL3 /* @min:%2eisBeaconApiDisabled */] === false) && isBeaconsSupported();\r\n                    _beaconOnUnloadSupported = senderConfig[_DYN_ONUNLOAD_DISABLE_BEA2 /* @min:%2eonunloadDisableBeacon */] === false && isBeaconsSupported();\r\n                    _beaconNormalSupported = senderConfig[_DYN_IS_BEACON_API_DISABL3 /* @min:%2eisBeaconApiDisabled */] === false && isBeaconsSupported();\r\n                    _alwaysUseCustomSend = senderConfig[_DYN_ALWAYS_USE_XHR_OVERR4 /* @min:%2ealwaysUseXhrOverride */];\r\n                    _disableXhr = !!senderConfig[_DYN_DISABLE_XHR /* @min:%2edisableXhr */];\r\n                    _retryCodes = senderConfig.retryCodes;\r\n                    var bufferOverride = senderConfig[_DYN_BUFFER_OVERRIDE /* @min:%2ebufferOverride */];\r\n                    var canUseSessionStorage = !!senderConfig[_DYN_ENABLE_SESSION_STORA5 /* @min:%2eenableSessionStorageBuffer */] &&\r\n                        (!!bufferOverride || utlCanUseSessionStorage());\r\n                    var namePrefix = senderConfig.namePrefix;\r\n                    //Note: emitLineDelimitedJson and eventsLimitInMem is directly accessed via config in senderBuffer\r\n                    //Therefore, if canUseSessionStorage is not changed, we do not need to re initialize a new one\r\n                    var shouldUpdate = (canUseSessionStorage !== _sessionStorageUsed)\r\n                        || (canUseSessionStorage && (_namePrefix !== namePrefix)) // prefixName is only used in session storage\r\n                        || (canUseSessionStorage && (_bufferOverrideUsed !== bufferOverride));\r\n                    if (_self[_DYN__BUFFER /* @min:%2e_buffer */]) {\r\n                        // case1 (Pre and Now enableSessionStorageBuffer settings are same)\r\n                        // if namePrefix changes, transfer current buffer to new buffer\r\n                        // else no action needed\r\n                        //case2 (Pre and Now enableSessionStorageBuffer settings are changed)\r\n                        // transfer current buffer to new buffer\r\n                        if (shouldUpdate) {\r\n                            try {\r\n                                _self._buffer = _self._buffer[_DYN_CREATE_NEW /* @min:%2ecreateNew */](diagLog, senderConfig, canUseSessionStorage);\r\n                            }\r\n                            catch (e) {\r\n                                _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 12 /* _eInternalMessageId.FailedAddingTelemetryToBuffer */, \"failed to transfer telemetry to different buffer storage, telemetry will be lost: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                            }\r\n                        }\r\n                        _checkMaxSize();\r\n                    }\r\n                    else {\r\n                        _self[_DYN__BUFFER /* @min:%2e_buffer */] = canUseSessionStorage\r\n                            ? new SessionStorageSendBuffer(diagLog, senderConfig) : new ArraySendBuffer(diagLog, senderConfig);\r\n                    }\r\n                    _namePrefix = namePrefix;\r\n                    _sessionStorageUsed = canUseSessionStorage;\r\n                    _bufferOverrideUsed = bufferOverride;\r\n                    _fetchKeepAlive = !senderConfig[_DYN_ONUNLOAD_DISABLE_FET6 /* @min:%2eonunloadDisableFetch */] && isFetchSupported(true);\r\n                    _disableBeaconSplit = !!senderConfig[_DYN_DISABLE_SEND_BEACON_7 /* @min:%2edisableSendBeaconSplit */];\r\n                    _self._sample = new Sample(senderConfig.samplingPercentage, diagLog);\r\n                    _instrumentationKey = senderConfig[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */];\r\n                    if (!isPromiseLike(_instrumentationKey) && !_validateInstrumentationKey(_instrumentationKey, config)) {\r\n                        _throwInternal(diagLog, 1 /* eLoggingSeverity.CRITICAL */, 100 /* _eInternalMessageId.InvalidInstrumentationKey */, \"Invalid Instrumentation key \" + _instrumentationKey);\r\n                    }\r\n                    _customHeaders = senderConfig[_DYN_CUSTOM_HEADERS /* @min:%2ecustomHeaders */];\r\n                    if (isString(_endpointUrl) && !isInternalApplicationInsightsEndpoint(_endpointUrl) && _customHeaders && _customHeaders[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                        arrForEach(_customHeaders, function (customHeader) {\r\n                            _this.addHeader(customHeader.header, customHeader.value);\r\n                        });\r\n                    }\r\n                    else {\r\n                        _customHeaders = null;\r\n                    }\r\n                    _enableSendPromise = senderConfig[_DYN_ENABLE_SEND_PROMISE /* @min:%2eenableSendPromise */];\r\n                    var sendPostConfig = _getSendPostMgrConfig();\r\n                    // only init it once\r\n                    if (!_sendPostMgr) {\r\n                        _sendPostMgr = new SenderPostManager();\r\n                        _sendPostMgr[_DYN_INITIALIZE /* @min:%2einitialize */](sendPostConfig, diagLog);\r\n                    }\r\n                    else {\r\n                        _sendPostMgr.SetConfig(sendPostConfig);\r\n                    }\r\n                    var customInterface = senderConfig.httpXHROverride;\r\n                    var httpInterface = null;\r\n                    var syncInterface = null;\r\n                    // User requested transport(s) values > Beacon > Fetch > XHR\r\n                    // Beacon would be filtered out if user has set disableBeaconApi to true at _getSenderInterface\r\n                    var theTransports = prependTransports([3 /* TransportType.Beacon */, 1 /* TransportType.Xhr */, 2 /* TransportType.Fetch */], senderConfig.transports);\r\n                    httpInterface = _sendPostMgr && _sendPostMgr[_DYN_GET_SENDER_INST /* @min:%2egetSenderInst */](theTransports, false);\r\n                    var xhrInterface = _sendPostMgr && _sendPostMgr.getFallbackInst();\r\n                    _xhrSend = function (payload, isAsync) {\r\n                        return _doSend(xhrInterface, payload, isAsync);\r\n                    };\r\n                    _fallbackSend = function (payload, isAsync) {\r\n                        return _doSend(xhrInterface, payload, isAsync, false);\r\n                    };\r\n                    httpInterface = _alwaysUseCustomSend ? customInterface : (httpInterface || customInterface || xhrInterface);\r\n                    _self[_DYN__SENDER /* @min:%2e_sender */] = function (payload, isAsync) {\r\n                        return _doSend(httpInterface, payload, isAsync);\r\n                    };\r\n                    if (_fetchKeepAlive) {\r\n                        // Try and use the fetch with keepalive\r\n                        _syncUnloadSender = _fetchKeepAliveSender;\r\n                    }\r\n                    var syncTransports = prependTransports([3 /* TransportType.Beacon */, 1 /* TransportType.Xhr */], senderConfig[_DYN_UNLOAD_TRANSPORTS /* @min:%2eunloadTransports */]);\r\n                    if (!_fetchKeepAlive) {\r\n                        // remove fetch from theTransports\r\n                        syncTransports = syncTransports.filter(function (transport) { return transport !== 2 /* TransportType.Fetch */; });\r\n                    }\r\n                    syncInterface = _sendPostMgr && _sendPostMgr[_DYN_GET_SENDER_INST /* @min:%2egetSenderInst */](syncTransports, true);\r\n                    syncInterface = _alwaysUseCustomSend ? customInterface : (syncInterface || customInterface);\r\n                    if ((_alwaysUseCustomSend || senderConfig[_DYN_UNLOAD_TRANSPORTS /* @min:%2eunloadTransports */] || !_syncUnloadSender) && syncInterface) {\r\n                        _syncUnloadSender = function (payload, isAsync) {\r\n                            return _doSend(syncInterface, payload, isAsync);\r\n                        };\r\n                    }\r\n                    if (!_syncUnloadSender) {\r\n                        _syncUnloadSender = _xhrSend;\r\n                    }\r\n                    _disableTelemetry = senderConfig.disableTelemetry;\r\n                    _convertUndefined = senderConfig[_DYN_CONVERT_UNDEFINED /* @min:%2econvertUndefined */] || UNDEFINED_VALUE;\r\n                    _isRetryDisabled = senderConfig.isRetryDisabled;\r\n                    _maxBatchInterval = senderConfig[_DYN_MAX_BATCH_INTERVAL /* @min:%2emaxBatchInterval */];\r\n                }));\r\n            };\r\n            _self.processTelemetry = function (telemetryItem, itemCtx) {\r\n                var _a;\r\n                itemCtx = _self._getTelCtx(itemCtx);\r\n                var diagLogger = itemCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */]();\r\n                try {\r\n                    var isValidate = _validate(telemetryItem, diagLogger);\r\n                    if (!isValidate) {\r\n                        return;\r\n                    }\r\n                    var aiEnvelope = _getEnvelope(telemetryItem, diagLogger);\r\n                    if (!aiEnvelope) {\r\n                        return;\r\n                    }\r\n                    // check if the incoming payload is too large, truncate if necessary\r\n                    var payload = _serializer[_DYN_SERIALIZE /* @min:%2eserialize */](aiEnvelope);\r\n                    // flush if we would exceed the max-size limit by adding this item\r\n                    var buffer = _self[_DYN__BUFFER /* @min:%2e_buffer */];\r\n                    _checkMaxSize(payload);\r\n                    var payloadItem = (_a = {},\r\n                        _a[_DYN_ITEM /* @min:item */] = payload,\r\n                        _a.cnt = 0 // inital cnt will always be 0\r\n                    ,\r\n                        _a);\r\n                    // enqueue the payload\r\n                    buffer[_DYN_ENQUEUE /* @min:%2eenqueue */](payloadItem);\r\n                    // ensure an invocation timeout is set\r\n                    _setupTimer();\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(diagLogger, 2 /* eLoggingSeverity.WARNING */, 12 /* _eInternalMessageId.FailedAddingTelemetryToBuffer */, \"Failed adding telemetry to the sender's buffer, some telemetry will be lost: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n                // hand off the telemetry item to the next plugin\r\n                _self.processNext(telemetryItem, itemCtx);\r\n            };\r\n            _self.isCompletelyIdle = function () {\r\n                return !_paused && _syncFetchPayload === 0 && _self._buffer[_DYN_COUNT /* @min:%2ecount */]() === 0;\r\n            };\r\n            /**\r\n             * xhr state changes\r\n             */\r\n            _self._xhrReadyStateChange = function (xhr, payload, countOfItemsInPayload) {\r\n                // since version 3.2.0, this function is no-op\r\n                if (_isStringArr(payload)) {\r\n                    return;\r\n                }\r\n                return _xhrReadyStateChange(xhr, payload, countOfItemsInPayload);\r\n            };\r\n            /**\r\n             * Immediately send buffered data\r\n             * @param async - {boolean} - Indicates if the events should be sent asynchronously\r\n             * @param forcedSender - {SenderFunction} - Indicates the forcedSender, undefined if not passed\r\n             */\r\n            _self[_DYN_TRIGGER_SEND /* @min:%2etriggerSend */] = function (async, forcedSender, sendReason) {\r\n                if (async === void 0) { async = true; }\r\n                var result;\r\n                if (!_paused) {\r\n                    try {\r\n                        var buffer = _self[_DYN__BUFFER /* @min:%2e_buffer */];\r\n                        // Send data only if disableTelemetry is false\r\n                        if (!_disableTelemetry) {\r\n                            if (buffer[_DYN_COUNT /* @min:%2ecount */]() > 0) {\r\n                                var payload = buffer.getItems();\r\n                                _notifySendRequest(sendReason || 0 /* SendRequestReason.Undefined */, async);\r\n                                // invoke send\r\n                                if (forcedSender) {\r\n                                    result = forcedSender.call(_self, payload, async);\r\n                                }\r\n                                else {\r\n                                    result = _self[_DYN__SENDER /* @min:%2e_sender */](payload, async);\r\n                                }\r\n                            }\r\n                            // update lastSend time to enable throttling\r\n                            _lastSend = +new Date;\r\n                        }\r\n                        else {\r\n                            buffer[_DYN_CLEAR /* @min:%2eclear */]();\r\n                        }\r\n                        _clearScheduledTimer();\r\n                    }\r\n                    catch (e) {\r\n                        /* Ignore this error for IE under v10 */\r\n                        var ieVer = getIEVersion();\r\n                        if (!ieVer || ieVer > 9) {\r\n                            _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 40 /* _eInternalMessageId.TransmissionFailed */, \"Telemetry transmission failed, some telemetry will be lost: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                        }\r\n                    }\r\n                }\r\n                return result;\r\n            };\r\n            _self.getOfflineSupport = function () {\r\n                var _a;\r\n                return _a = {\r\n                        getUrl: function () {\r\n                            return _endpointUrl;\r\n                        },\r\n                        createPayload: _createPayload\r\n                    },\r\n                    _a[_DYN_SERIALIZE /* @min:serialize */] = _serialize,\r\n                    _a.batch = _batch,\r\n                    _a.shouldProcess = function (evt) {\r\n                        return !!_validate(evt);\r\n                    },\r\n                    _a;\r\n            };\r\n            _self._doTeardown = function (unloadCtx, unloadState) {\r\n                _self.onunloadFlush();\r\n                runTargetUnload(_offlineListener, false);\r\n                _initDefaults();\r\n            };\r\n            /**\r\n             * error handler\r\n             */\r\n            _self[_DYN__ON_ERROR /* @min:%2e_onError */] = function (payload, message, event) {\r\n                // since version 3.1.3, string[] is no-op\r\n                if (_isStringArr(payload)) {\r\n                    return;\r\n                }\r\n                return _onError(payload, message, event);\r\n            };\r\n            /**\r\n             * partial success handler\r\n             */\r\n            _self[_DYN__ON_PARTIAL_SUCCESS /* @min:%2e_onPartialSuccess */] = function (payload, results) {\r\n                // since version 3.1.3, string[] is no-op\r\n                if (_isStringArr(payload)) {\r\n                    return;\r\n                }\r\n                return _onPartialSuccess(payload, results);\r\n            };\r\n            /**\r\n             * success handler\r\n             */\r\n            _self[_DYN__ON_SUCCESS /* @min:%2e_onSuccess */] = function (payload, countOfItemsInPayload) {\r\n                // since version 3.1.3, string[] is no-op\r\n                if (_isStringArr(payload)) {\r\n                    return;\r\n                }\r\n                return _onSuccess(payload, countOfItemsInPayload);\r\n                //_self._buffer && _self._buffer.clearSent(payload);\r\n            };\r\n            /**\r\n             * xdr state changes\r\n             */\r\n            _self._xdrOnLoad = function (xdr, payload) {\r\n                // since version 3.1.3, string[] is no-op\r\n                if (_isStringArr(payload)) {\r\n                    return;\r\n                }\r\n                return _xdrOnLoad(xdr, payload);\r\n            };\r\n            function _xdrOnLoad(xdr, payload) {\r\n                var responseText = _getResponseText(xdr);\r\n                if (xdr && (responseText + \"\" === \"200\" || responseText === \"\")) {\r\n                    _consecutiveErrors = 0;\r\n                    _self[_DYN__ON_SUCCESS /* @min:%2e_onSuccess */](payload, 0);\r\n                }\r\n                else {\r\n                    var results = parseResponse(responseText);\r\n                    if (results && results[_DYN_ITEMS_RECEIVED /* @min:%2eitemsReceived */] && results[_DYN_ITEMS_RECEIVED /* @min:%2eitemsReceived */] > results[_DYN_ITEMS_ACCEPTED /* @min:%2eitemsAccepted */]\r\n                        && !_isRetryDisabled) {\r\n                        _self[_DYN__ON_PARTIAL_SUCCESS /* @min:%2e_onPartialSuccess */](payload, results);\r\n                    }\r\n                    else {\r\n                        _self[_DYN__ON_ERROR /* @min:%2e_onError */](payload, formatErrorMessageXdr(xdr));\r\n                    }\r\n                }\r\n            }\r\n            function _getSendPostMgrConfig() {\r\n                var _a;\r\n                try {\r\n                    var onCompleteFuncs = {\r\n                        xdrOnComplete: function (xdr, oncomplete, payload) {\r\n                            var data = _getPayloadArr(payload);\r\n                            if (!data) {\r\n                                return;\r\n                            }\r\n                            return _xdrOnLoad(xdr, data);\r\n                        },\r\n                        fetchOnComplete: function (response, onComplete, resValue, payload) {\r\n                            var data = _getPayloadArr(payload);\r\n                            if (!data) {\r\n                                return;\r\n                            }\r\n                            return _checkResponsStatus(response.status, data, response.url, data[_DYN_LENGTH /* @min:%2elength */], response.statusText, resValue || \"\");\r\n                        },\r\n                        xhrOnComplete: function (request, oncomplete, payload) {\r\n                            var data = _getPayloadArr(payload);\r\n                            if (!data) {\r\n                                return;\r\n                            }\r\n                            return _xhrReadyStateChange(request, data, data[_DYN_LENGTH /* @min:%2elength */]);\r\n                        },\r\n                        beaconOnRetry: function (data, onComplete, canSend) {\r\n                            return _onBeaconRetry(data, onComplete, canSend);\r\n                        }\r\n                    };\r\n                    var config = (_a = {},\r\n                        _a[_DYN_ENABLE_SEND_PROMISE /* @min:enableSendPromise */] = _enableSendPromise,\r\n                        _a.isOneDs = false,\r\n                        _a.disableCredentials = false,\r\n                        _a[_DYN_DISABLE_XHR /* @min:disableXhr */] = _disableXhr,\r\n                        _a.disableBeacon = !_beaconNormalSupported,\r\n                        _a.disableBeaconSync = !_beaconOnUnloadSupported,\r\n                        _a.senderOnCompleteCallBack = onCompleteFuncs,\r\n                        _a);\r\n                    return config;\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return null;\r\n            }\r\n            /**\r\n             * xhr state changes\r\n             */\r\n            function _xhrReadyStateChange(xhr, payload, countOfItemsInPayload) {\r\n                if (xhr.readyState === 4) {\r\n                    _checkResponsStatus(xhr.status, payload, xhr.responseURL, countOfItemsInPayload, formatErrorMessageXhr(xhr), _getResponseText(xhr) || xhr.response);\r\n                }\r\n            }\r\n            /**\r\n             * error handler\r\n             */\r\n            function _onError(payload, message, event) {\r\n                _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 26 /* _eInternalMessageId.OnError */, \"Failed to send telemetry.\", { message: message });\r\n                _self._buffer && _self._buffer[_DYN_CLEAR_SENT /* @min:%2eclearSent */](payload);\r\n            }\r\n            /**\r\n             * partial success handler\r\n             */\r\n            function _onPartialSuccess(payload, results) {\r\n                var failed = [];\r\n                var retry = [];\r\n                // Iterate through the reversed array of errors so that splicing doesn't have invalid indexes after the first item.\r\n                var errors = results.errors.reverse();\r\n                for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\r\n                    var error = errors_1[_i];\r\n                    var extracted = payload.splice(error.index, 1)[0];\r\n                    if (_isRetriable(error.statusCode)) {\r\n                        retry[_DYN_PUSH /* @min:%2epush */](extracted);\r\n                    }\r\n                    else {\r\n                        // All other errors, including: 402 (Monthly quota exceeded) and 439 (Too many requests and refresh cache).\r\n                        failed[_DYN_PUSH /* @min:%2epush */](extracted);\r\n                    }\r\n                }\r\n                if (payload[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    _self[_DYN__ON_SUCCESS /* @min:%2e_onSuccess */](payload, results[_DYN_ITEMS_ACCEPTED /* @min:%2eitemsAccepted */]);\r\n                }\r\n                if (failed[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    _self[_DYN__ON_ERROR /* @min:%2e_onError */](failed, formatErrorMessageXhr(null, [\"partial success\", results[_DYN_ITEMS_ACCEPTED /* @min:%2eitemsAccepted */], \"of\", results.itemsReceived].join(\" \")));\r\n                }\r\n                if (retry[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    _resendPayload(retry);\r\n                    _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \"Partial success. \" +\r\n                        \"Delivered: \" + payload[_DYN_LENGTH /* @min:%2elength */] + \", Failed: \" + failed[_DYN_LENGTH /* @min:%2elength */] +\r\n                        \". Will retry to send \" + retry[_DYN_LENGTH /* @min:%2elength */] + \" our of \" + results[_DYN_ITEMS_RECEIVED /* @min:%2eitemsReceived */] + \" items\");\r\n                }\r\n            }\r\n            /**\r\n             * success handler\r\n             */\r\n            function _onSuccess(payload, countOfItemsInPayload) {\r\n                _self._buffer && _self._buffer[_DYN_CLEAR_SENT /* @min:%2eclearSent */](payload);\r\n            }\r\n            function _getPayloadArr(payload) {\r\n                try {\r\n                    if (payload) {\r\n                        var internalPayload = payload;\r\n                        var arr = internalPayload[_DYN_ORI_PAYLOAD /* @min:%2eoriPayload */];\r\n                        if (arr && arr[_DYN_LENGTH /* @min:%2elength */]) {\r\n                            return arr;\r\n                        }\r\n                        return null;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return null;\r\n            }\r\n            function _validate(telemetryItem, diagLogger) {\r\n                if (_disableTelemetry) {\r\n                    // Do not send/save data\r\n                    return false;\r\n                }\r\n                // validate input\r\n                if (!telemetryItem) {\r\n                    diagLogger && _throwInternal(diagLogger, 1 /* eLoggingSeverity.CRITICAL */, 7 /* _eInternalMessageId.CannotSendEmptyTelemetry */, \"Cannot send empty telemetry\");\r\n                    return false;\r\n                }\r\n                // validate event\r\n                if (telemetryItem.baseData && !telemetryItem[_DYN_BASE_TYPE /* @min:%2ebaseType */]) {\r\n                    diagLogger && _throwInternal(diagLogger, 1 /* eLoggingSeverity.CRITICAL */, 70 /* _eInternalMessageId.InvalidEvent */, \"Cannot send telemetry without baseData and baseType\");\r\n                    return false;\r\n                }\r\n                if (!telemetryItem[_DYN_BASE_TYPE /* @min:%2ebaseType */]) {\r\n                    // Default\r\n                    telemetryItem[_DYN_BASE_TYPE /* @min:%2ebaseType */] = \"EventData\";\r\n                }\r\n                // ensure a sender was constructed\r\n                if (!_self[_DYN__SENDER /* @min:%2e_sender */]) {\r\n                    diagLogger && _throwInternal(diagLogger, 1 /* eLoggingSeverity.CRITICAL */, 28 /* _eInternalMessageId.SenderNotInitialized */, \"Sender was not initialized\");\r\n                    return false;\r\n                }\r\n                // check if this item should be sampled in, else add sampleRate tag\r\n                if (!_isSampledIn(telemetryItem)) {\r\n                    // Item is sampled out, do not send it\r\n                    diagLogger && _throwInternal(diagLogger, 2 /* eLoggingSeverity.WARNING */, 33 /* _eInternalMessageId.TelemetrySampledAndNotSent */, \"Telemetry item was sampled out and not sent\", { SampleRate: _self._sample[_DYN_SAMPLE_RATE /* @min:%2esampleRate */] });\r\n                    return false;\r\n                }\r\n                else {\r\n                    telemetryItem[SampleRate] = _self._sample[_DYN_SAMPLE_RATE /* @min:%2esampleRate */];\r\n                }\r\n                return true;\r\n            }\r\n            function _getEnvelope(telemetryItem, diagLogger) {\r\n                // construct an envelope that Application Insights endpoint can understand\r\n                // if ikey of telemetry is provided and not empty, envelope will use this iKey instead of senderConfig iKey\r\n                var defaultEnvelopeIkey = telemetryItem.iKey || _instrumentationKey;\r\n                var aiEnvelope = Sender.constructEnvelope(telemetryItem, defaultEnvelopeIkey, diagLogger, _convertUndefined);\r\n                if (!aiEnvelope) {\r\n                    _throwInternal(diagLogger, 1 /* eLoggingSeverity.CRITICAL */, 47 /* _eInternalMessageId.CreateEnvelopeError */, \"Unable to create an AppInsights envelope\");\r\n                    return;\r\n                }\r\n                var doNotSendItem = false;\r\n                // this is for running in legacy mode, where customer may already have a custom initializer present\r\n                if (telemetryItem[_DYN_TAGS /* @min:%2etags */] && telemetryItem[_DYN_TAGS /* @min:%2etags */][ProcessLegacy]) {\r\n                    arrForEach(telemetryItem[_DYN_TAGS /* @min:%2etags */][ProcessLegacy], function (callBack) {\r\n                        try {\r\n                            if (callBack && callBack(aiEnvelope) === false) {\r\n                                doNotSendItem = true;\r\n                                _warnToConsole(diagLogger, \"Telemetry processor check returns false\");\r\n                            }\r\n                        }\r\n                        catch (e) {\r\n                            // log error but dont stop executing rest of the telemetry initializers\r\n                            // doNotSendItem = true;\r\n                            _throwInternal(diagLogger, 1 /* eLoggingSeverity.CRITICAL */, 64 /* _eInternalMessageId.TelemetryInitializerFailed */, \"One of telemetry initializers failed, telemetry item will not be sent: \" + getExceptionName(e), { exception: dumpObj(e) }, true);\r\n                        }\r\n                    });\r\n                    delete telemetryItem[_DYN_TAGS /* @min:%2etags */][ProcessLegacy];\r\n                }\r\n                if (doNotSendItem) {\r\n                    return; // do not send, no need to execute next plugin\r\n                }\r\n                return aiEnvelope;\r\n            }\r\n            function _serialize(item) {\r\n                var rlt = EMPTY_STR;\r\n                var diagLogger = _self[_DYN_DIAG_LOG /* @min:%2ediagLog */]();\r\n                try {\r\n                    var valid = _validate(item, diagLogger);\r\n                    var envelope = null;\r\n                    if (valid) {\r\n                        envelope = _getEnvelope(item, diagLogger);\r\n                    }\r\n                    if (envelope) {\r\n                        rlt = _serializer[_DYN_SERIALIZE /* @min:%2eserialize */](envelope);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return rlt;\r\n            }\r\n            function _batch(arr) {\r\n                var rlt = EMPTY_STR;\r\n                if (arr && arr[_DYN_LENGTH /* @min:%2elength */]) {\r\n                    rlt = \"[\" + arr.join(\",\") + \"]\";\r\n                }\r\n                return rlt;\r\n            }\r\n            function _createPayload(data) {\r\n                var _a;\r\n                var headers = _getHeaders();\r\n                return _a = {\r\n                        urlString: _endpointUrl\r\n                    },\r\n                    _a[_DYN_DATA /* @min:data */] = data,\r\n                    _a.headers = headers,\r\n                    _a;\r\n            }\r\n            function _isSampledIn(envelope) {\r\n                return _self._sample.isSampledIn(envelope);\r\n            }\r\n            function _getOnComplete(payload, status, headers, response) {\r\n                // ***********************************************************************************************\r\n                //TODO: handle other status codes\r\n                if (status === 200 && payload) {\r\n                    _self._onSuccess(payload, payload[_DYN_LENGTH /* @min:%2elength */]);\r\n                }\r\n                else {\r\n                    response && _self[_DYN__ON_ERROR /* @min:%2e_onError */](payload, response);\r\n                }\r\n            }\r\n            function _doSend(sendInterface, payload, isAsync, markAsSent) {\r\n                if (markAsSent === void 0) { markAsSent = true; }\r\n                var onComplete = function (status, headers, response) {\r\n                    return _getOnComplete(payload, status, headers, response);\r\n                };\r\n                var payloadData = _getPayload(payload);\r\n                var sendPostFunc = sendInterface && sendInterface.sendPOST;\r\n                if (sendPostFunc && payloadData) {\r\n                    // ***********************************************************************************************\r\n                    // mark payload as sent at the beginning of calling each send function\r\n                    if (markAsSent) {\r\n                        _self._buffer[_DYN_MARK_AS_SENT /* @min:%2emarkAsSent */](payload);\r\n                    }\r\n                    return sendPostFunc(payloadData, onComplete, !isAsync);\r\n                }\r\n                return null;\r\n            }\r\n            function _getPayload(payload) {\r\n                var _a;\r\n                if (isArray(payload) && payload[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var batch = _self[_DYN__BUFFER /* @min:%2e_buffer */].batchPayloads(payload);\r\n                    var headers = _getHeaders();\r\n                    var payloadData = (_a = {},\r\n                        _a[_DYN_DATA /* @min:data */] = batch,\r\n                        _a.urlString = _endpointUrl,\r\n                        _a.headers = headers,\r\n                        _a.disableXhrSync = _disableXhr,\r\n                        _a.disableFetchKeepAlive = !_fetchKeepAlive,\r\n                        _a[_DYN_ORI_PAYLOAD /* @min:oriPayload */] = payload,\r\n                        _a);\r\n                    return payloadData;\r\n                }\r\n                return null;\r\n            }\r\n            function _getHeaders() {\r\n                try {\r\n                    var headers = _headers || {};\r\n                    if (isInternalApplicationInsightsEndpoint(_endpointUrl)) {\r\n                        headers[RequestHeaders[6 /* eRequestHeaders.sdkContextHeader */]] = RequestHeaders[7 /* eRequestHeaders.sdkContextHeaderAppIdRequest */];\r\n                    }\r\n                    return headers;\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return null;\r\n            }\r\n            function _checkMaxSize(incomingPayload) {\r\n                var incomingSize = incomingPayload ? incomingPayload[_DYN_LENGTH /* @min:%2elength */] : 0;\r\n                if ((_self[_DYN__BUFFER /* @min:%2e_buffer */].size() + incomingSize) > _maxBatchSizeInBytes) {\r\n                    if (!_offlineListener || _offlineListener.isOnline()) { // only trigger send when currently online\r\n                        _self[_DYN_TRIGGER_SEND /* @min:%2etriggerSend */](true, null, 10 /* SendRequestReason.MaxBatchSize */);\r\n                    }\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n            function _checkResponsStatus(status, payload, responseUrl, countOfItemsInPayload, errorMessage, res) {\r\n                var response = null;\r\n                if (!_self._appId) {\r\n                    response = parseResponse(res);\r\n                    if (response && response.appId) {\r\n                        _self._appId = response.appId;\r\n                    }\r\n                }\r\n                if ((status < 200 || status >= 300) && status !== 0) {\r\n                    // Update End Point url if permanent redirect or moved permanently\r\n                    // Updates the end point url before retry\r\n                    if (status === 301 || status === 307 || status === 308) {\r\n                        if (!_checkAndUpdateEndPointUrl(responseUrl)) {\r\n                            _self[_DYN__ON_ERROR /* @min:%2e_onError */](payload, errorMessage);\r\n                            return;\r\n                        }\r\n                    }\r\n                    if (_offlineListener && !_offlineListener.isOnline()) { // offline\r\n                        // Note: Don't check for status == 0, since adblock gives this code\r\n                        if (!_isRetryDisabled) {\r\n                            var offlineBackOffMultiplier = 10; // arbritrary number\r\n                            _resendPayload(payload, offlineBackOffMultiplier);\r\n                            _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". Offline - Response Code: \".concat(status, \". Offline status: \").concat(!_offlineListener.isOnline(), \". Will retry to send \").concat(payload.length, \" items.\"));\r\n                        }\r\n                        return;\r\n                    }\r\n                    if (!_isRetryDisabled && _isRetriable(status)) {\r\n                        _resendPayload(payload);\r\n                        _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" +\r\n                            \"Response code \" + status + \". Will retry to send \" + payload[_DYN_LENGTH /* @min:%2elength */] + \" items.\");\r\n                    }\r\n                    else {\r\n                        _self[_DYN__ON_ERROR /* @min:%2e_onError */](payload, errorMessage);\r\n                    }\r\n                }\r\n                else {\r\n                    // check if the xhr's responseURL or fetch's response.url is same as endpoint url\r\n                    // TODO after 10 redirects force send telemetry with 'redirect=false' as query parameter.\r\n                    _checkAndUpdateEndPointUrl(responseUrl);\r\n                    if (status === 206) {\r\n                        if (!response) {\r\n                            response = parseResponse(res);\r\n                        }\r\n                        if (response && !_isRetryDisabled) {\r\n                            _self[_DYN__ON_PARTIAL_SUCCESS /* @min:%2e_onPartialSuccess */](payload, response);\r\n                        }\r\n                        else {\r\n                            _self[_DYN__ON_ERROR /* @min:%2e_onError */](payload, errorMessage);\r\n                        }\r\n                    }\r\n                    else {\r\n                        _consecutiveErrors = 0;\r\n                        _self[_DYN__ON_SUCCESS /* @min:%2e_onSuccess */](payload, countOfItemsInPayload);\r\n                    }\r\n                }\r\n            }\r\n            function _checkAndUpdateEndPointUrl(responseUrl) {\r\n                // Maximum stamp specific redirects allowed(uncomment this when breeze is ready with not allowing redirects feature)\r\n                if (_stamp_specific_redirects >= 10) {\r\n                    //  _self._senderConfig.endpointUrl = () => Sender._getDefaultAppInsightsChannelConfig().endpointUrl()+\"/?redirect=false\";\r\n                    //  _stamp_specific_redirects = 0;\r\n                    return false;\r\n                }\r\n                if (!isNullOrUndefined(responseUrl) && responseUrl !== \"\") {\r\n                    if (responseUrl !== _endpointUrl) {\r\n                        _endpointUrl = responseUrl;\r\n                        ++_stamp_specific_redirects;\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n            function _doUnloadSend(payload, isAsync) {\r\n                if (_syncUnloadSender) {\r\n                    // We are unloading so always call the sender with sync set to false\r\n                    _syncUnloadSender(payload, false);\r\n                }\r\n                else {\r\n                    // Fallback to the previous beacon Sender (which causes a CORB warning on chrome now)\r\n                    var beaconInst = _sendPostMgr && _sendPostMgr[_DYN_GET_SENDER_INST /* @min:%2egetSenderInst */]([3 /* TransportType.Beacon */], true);\r\n                    return _doSend(beaconInst, payload, isAsync);\r\n                }\r\n            }\r\n            function _onBeaconRetry(payload, onComplete, canSend) {\r\n                var internalPayload = payload;\r\n                var data = internalPayload && internalPayload[_DYN_ORI_PAYLOAD /* @min:%2eoriPayload */];\r\n                if (!_disableBeaconSplit) {\r\n                    // Failed to send entire payload so try and split data and try to send as much events as possible\r\n                    var droppedPayload = [];\r\n                    for (var lp = 0; lp < data[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                        var thePayload = data[lp];\r\n                        var arr = [thePayload];\r\n                        var item = _getPayload(arr);\r\n                        if (!canSend(item, onComplete)) {\r\n                            // Can't send anymore, so split the batch and drop the rest\r\n                            droppedPayload[_DYN_PUSH /* @min:%2epush */](thePayload);\r\n                        }\r\n                        else {\r\n                            _self._onSuccess(arr, arr[_DYN_LENGTH /* @min:%2elength */]);\r\n                        }\r\n                    }\r\n                    if (droppedPayload[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                        _fallbackSend && _fallbackSend(droppedPayload, true);\r\n                        _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" + \"Failed to send telemetry with Beacon API, retried with normal sender.\");\r\n                    }\r\n                }\r\n                else {\r\n                    _fallbackSend && _fallbackSend(data, true);\r\n                    _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" + \"Failed to send telemetry with Beacon API, retried with normal sender.\");\r\n                }\r\n            }\r\n            function _isStringArr(arr) {\r\n                try {\r\n                    if (arr && arr[_DYN_LENGTH /* @min:%2elength */]) {\r\n                        return (isString(arr[0]));\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    //TODO: log, sender use IInternalStorageItem instead of string since 3.1.3\r\n                }\r\n                return null;\r\n            }\r\n            function _fetchKeepAliveSender(payload, isAsync) {\r\n                var transport = null;\r\n                if (isArray(payload)) {\r\n                    var payloadSize = payload[_DYN_LENGTH /* @min:%2elength */];\r\n                    for (var lp = 0; lp < payload[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                        payloadSize += payload[lp].item[_DYN_LENGTH /* @min:%2elength */];\r\n                    }\r\n                    var syncFetchPayload = _sendPostMgr.getSyncFetchPayload();\r\n                    if ((syncFetchPayload + payloadSize) <= FetchSyncRequestSizeLimitBytes) {\r\n                        transport = 2 /* TransportType.Fetch */;\r\n                    }\r\n                    else if (isBeaconsSupported()) {\r\n                        // Fallback to beacon sender as we at least get told which events can't be scheduled\r\n                        transport = 3 /* TransportType.Beacon */;\r\n                    }\r\n                    else {\r\n                        // Payload is going to be too big so just try and send via XHR\r\n                        transport = 1 /* TransportType.Xhr */;\r\n                        _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" + \"Failed to send telemetry with Beacon API, retried with xhrSender.\");\r\n                    }\r\n                    var inst = _sendPostMgr && _sendPostMgr[_DYN_GET_SENDER_INST /* @min:%2egetSenderInst */]([transport], true);\r\n                    return _doSend(inst, payload, isAsync);\r\n                }\r\n                return null;\r\n            }\r\n            /**\r\n             * Resend payload. Adds payload back to the send buffer and setup a send timer (with exponential backoff).\r\n             * @param payload\r\n             */\r\n            function _resendPayload(payload, linearFactor) {\r\n                if (linearFactor === void 0) { linearFactor = 1; }\r\n                if (!payload || payload[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n                    return;\r\n                }\r\n                var buffer = _self[_DYN__BUFFER /* @min:%2e_buffer */];\r\n                buffer[_DYN_CLEAR_SENT /* @min:%2eclearSent */](payload);\r\n                _consecutiveErrors++;\r\n                for (var _i = 0, payload_1 = payload; _i < payload_1.length; _i++) {\r\n                    var item = payload_1[_i];\r\n                    item.cnt = item.cnt || 0; // to make sure we have cnt for each payload\r\n                    item.cnt++; // when resend, increase cnt\r\n                    buffer[_DYN_ENQUEUE /* @min:%2eenqueue */](item);\r\n                }\r\n                // setup timer\r\n                _setRetryTime(linearFactor);\r\n                _setupTimer();\r\n            }\r\n            /**\r\n             * Calculates the time to wait before retrying in case of an error based on\r\n             * http://en.wikipedia.org/wiki/Exponential_backoff\r\n             */\r\n            function _setRetryTime(linearFactor) {\r\n                var SlotDelayInSeconds = 10;\r\n                var delayInSeconds;\r\n                if (_consecutiveErrors <= 1) {\r\n                    delayInSeconds = SlotDelayInSeconds;\r\n                }\r\n                else {\r\n                    var backOffSlot = (Math.pow(2, _consecutiveErrors) - 1) / 2;\r\n                    // tslint:disable-next-line:insecure-random\r\n                    var backOffDelay = Math.floor(Math.random() * backOffSlot * SlotDelayInSeconds) + 1;\r\n                    backOffDelay = linearFactor * backOffDelay;\r\n                    delayInSeconds = Math.max(Math.min(backOffDelay, 3600), SlotDelayInSeconds);\r\n                }\r\n                // TODO: Log the backoff time like the C# version does.\r\n                var retryAfterTimeSpan = dateNow() + (delayInSeconds * 1000);\r\n                // TODO: Log the retry at time like the C# version does.\r\n                _retryAt = retryAfterTimeSpan;\r\n            }\r\n            /**\r\n             * Sets up the timer which triggers actually sending the data.\r\n             */\r\n            function _setupTimer() {\r\n                if (!_timeoutHandle && !_paused) {\r\n                    var retryInterval = _retryAt ? Math.max(0, _retryAt - dateNow()) : 0;\r\n                    var timerValue = Math.max(_maxBatchInterval, retryInterval);\r\n                    _timeoutHandle = scheduleTimeout(function () {\r\n                        _timeoutHandle = null;\r\n                        _self[_DYN_TRIGGER_SEND /* @min:%2etriggerSend */](true, null, 1 /* SendRequestReason.NormalSchedule */);\r\n                    }, timerValue);\r\n                }\r\n            }\r\n            function _clearScheduledTimer() {\r\n                _timeoutHandle && _timeoutHandle.cancel();\r\n                _timeoutHandle = null;\r\n                _retryAt = null;\r\n            }\r\n            /**\r\n             * Checks if the SDK should resend the payload after receiving this status code from the backend.\r\n             * @param statusCode\r\n             */\r\n            function _isRetriable(statusCode) {\r\n                // retryCodes = [] means should not retry\r\n                if (!isNullOrUndefined(_retryCodes)) {\r\n                    return _retryCodes[_DYN_LENGTH /* @min:%2elength */] && _retryCodes.indexOf(statusCode) > -1;\r\n                }\r\n                return statusCode === 401 // Unauthorized\r\n                    // Removing as private links can return a 403 which causes excessive retries and session storage usage\r\n                    // || statusCode === 403 // Forbidden\r\n                    || statusCode === 408 // Timeout\r\n                    || statusCode === 429 // Too many requests.\r\n                    || statusCode === 500 // Internal server error.\r\n                    || statusCode === 502 // Bad Gateway.\r\n                    || statusCode === 503 // Service unavailable.\r\n                    || statusCode === 504; // Gateway timeout.\r\n            }\r\n            // Using function lookups for backward compatibility as the getNotifyMgr() did not exist until after v2.5.6\r\n            function _getNotifyMgr() {\r\n                var func = \"getNotifyMgr\";\r\n                if (_self.core[func]) {\r\n                    return _self.core[func]();\r\n                }\r\n                // using _self.core['_notificationManager'] for backward compatibility\r\n                return _self.core[\"_notificationManager\"];\r\n            }\r\n            function _notifySendRequest(sendRequest, isAsync) {\r\n                var manager = _getNotifyMgr();\r\n                if (manager && manager[_DYN_EVENTS_SEND_REQUEST /* @min:%2eeventsSendRequest */]) {\r\n                    try {\r\n                        manager[_DYN_EVENTS_SEND_REQUEST /* @min:%2eeventsSendRequest */](sendRequest, isAsync);\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 74 /* _eInternalMessageId.NotificationException */, \"send request notification failed: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                    }\r\n                }\r\n            }\r\n            /**\r\n             * Validate UUID Format\r\n             * Specs taken from https://tools.ietf.org/html/rfc4122 and breeze repo\r\n             */\r\n            function _validateInstrumentationKey(instrumentationKey, config) {\r\n                var disableValidation = config.disableInstrumentationKeyValidation;\r\n                var disableIKeyValidationFlag = isNullOrUndefined(disableValidation) ? false : disableValidation;\r\n                if (disableIKeyValidationFlag) {\r\n                    return true;\r\n                }\r\n                var UUID_Regex = \"^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$\";\r\n                var regexp = new RegExp(UUID_Regex);\r\n                return regexp.test(instrumentationKey);\r\n            }\r\n            function _initDefaults() {\r\n                _self[_DYN__SENDER /* @min:%2e_sender */] = null;\r\n                _self[_DYN__BUFFER /* @min:%2e_buffer */] = null;\r\n                _self._appId = null;\r\n                _self._sample = null;\r\n                _headers = {};\r\n                _offlineListener = null;\r\n                _consecutiveErrors = 0;\r\n                _retryAt = null;\r\n                _lastSend = null;\r\n                _paused = false;\r\n                _timeoutHandle = null;\r\n                _serializer = null;\r\n                _stamp_specific_redirects = 0;\r\n                _syncFetchPayload = 0;\r\n                _syncUnloadSender = null;\r\n                _evtNamespace = null;\r\n                _endpointUrl = null;\r\n                _orgEndpointUrl = null;\r\n                _maxBatchSizeInBytes = 0;\r\n                _beaconSupported = false;\r\n                _customHeaders = null;\r\n                _disableTelemetry = false;\r\n                _instrumentationKey = null;\r\n                _convertUndefined = UNDEFINED_VALUE;\r\n                _isRetryDisabled = false;\r\n                _sessionStorageUsed = null;\r\n                _namePrefix = UNDEFINED_VALUE;\r\n                _disableXhr = false;\r\n                _fetchKeepAlive = false;\r\n                _disableBeaconSplit = false;\r\n                _xhrSend = null;\r\n                _fallbackSend = null;\r\n                _sendPostMgr = null;\r\n                objDefine(_self, \"_senderConfig\", {\r\n                    g: function () {\r\n                        return objExtend({}, defaultAppInsightsChannelConfig);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n    Sender.constructEnvelope = function (orig, iKey, logger, convertUndefined) {\r\n        var envelope;\r\n        if (iKey !== orig.iKey && !isNullOrUndefined(iKey)) {\r\n            envelope = __assign(__assign({}, orig), { iKey: iKey });\r\n        }\r\n        else {\r\n            envelope = orig;\r\n        }\r\n        var creator = EnvelopeTypeCreator[envelope.baseType] || EventEnvelopeCreator;\r\n        return creator(logger, envelope, convertUndefined);\r\n    };\r\n// Removed Stub for Sender.prototype.pause.\r\n// Removed Stub for Sender.prototype.resume.\r\n// Removed Stub for Sender.prototype.flush.\r\n// Removed Stub for Sender.prototype.onunloadFlush.\r\n// Removed Stub for Sender.prototype.initialize.\r\n// Removed Stub for Sender.prototype.processTelemetry.\r\n// Removed Stub for Sender.prototype._xhrReadyStateChange.\r\n// Removed Stub for Sender.prototype.triggerSend.\r\n// Removed Stub for Sender.prototype._onError.\r\n// Removed Stub for Sender.prototype._onPartialSuccess.\r\n// Removed Stub for Sender.prototype._onSuccess.\r\n// Removed Stub for Sender.prototype._xdrOnLoad.\r\n// Removed Stub for Sender.prototype.addHeader.\r\n// Removed Stub for Sender.prototype.isCompletelyIdle.\r\n// Removed Stub for Sender.prototype.getOfflineSupport.\r\n    return Sender;\r\n}(BaseTelemetryPlugin));\r\nexport { Sender };\r\n//# sourceMappingURL=Sender.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { _throwInternal, getJSON, isArray, isFunction, isObject, objForEachKey } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_LENGTH, _DYN_PUSH, _DYN_SERIALIZE, _DYN_STRINGIFY, _DYN_TO_STRING } from \"./__DynamicConstants\";\r\nvar Serializer = /** @class */ (function () {\r\n    function Serializer(logger) {\r\n        dynamicProto(Serializer, this, function (_self) {\r\n            /**\r\n             * Serializes the current object to a JSON string.\r\n             */\r\n            _self[_DYN_SERIALIZE /* @min:%2eserialize */] = function (input) {\r\n                var output = _serializeObject(input, \"root\");\r\n                try {\r\n                    return getJSON()[_DYN_STRINGIFY /* @min:%2estringify */](output);\r\n                }\r\n                catch (e) {\r\n                    // if serialization fails return an empty string\r\n                    _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.CannotSerializeObject */, (e && isFunction(e[_DYN_TO_STRING /* @min:%2etoString */])) ? e[_DYN_TO_STRING /* @min:%2etoString */]() : \"Error serializing object\", null, true);\r\n                }\r\n            };\r\n            function _serializeObject(source, name) {\r\n                var circularReferenceCheck = \"__aiCircularRefCheck\";\r\n                var output = {};\r\n                if (!source) {\r\n                    _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.CannotSerializeObject */, \"cannot serialize object because it is null or undefined\", { name: name }, true);\r\n                    return output;\r\n                }\r\n                if (source[circularReferenceCheck]) {\r\n                    _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 50 /* _eInternalMessageId.CircularReferenceDetected */, \"Circular reference detected while serializing object\", { name: name }, true);\r\n                    return output;\r\n                }\r\n                if (!source.aiDataContract) {\r\n                    // special case for measurements/properties/tags\r\n                    if (name === \"measurements\") {\r\n                        output = _serializeStringMap(source, \"number\", name);\r\n                    }\r\n                    else if (name === \"properties\") {\r\n                        output = _serializeStringMap(source, \"string\", name);\r\n                    }\r\n                    else if (name === \"tags\") {\r\n                        output = _serializeStringMap(source, \"string\", name);\r\n                    }\r\n                    else if (isArray(source)) {\r\n                        output = _serializeArray(source, name);\r\n                    }\r\n                    else {\r\n                        _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 49 /* _eInternalMessageId.CannotSerializeObjectNonSerializable */, \"Attempting to serialize an object which does not implement ISerializable\", { name: name }, true);\r\n                        try {\r\n                            // verify that the object can be stringified\r\n                            getJSON()[_DYN_STRINGIFY /* @min:%2estringify */](source);\r\n                            output = source;\r\n                        }\r\n                        catch (e) {\r\n                            // if serialization fails return an empty string\r\n                            _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.CannotSerializeObject */, (e && isFunction(e[_DYN_TO_STRING /* @min:%2etoString */])) ? e[_DYN_TO_STRING /* @min:%2etoString */]() : \"Error serializing object\", null, true);\r\n                        }\r\n                    }\r\n                    return output;\r\n                }\r\n                source[circularReferenceCheck] = true;\r\n                objForEachKey(source.aiDataContract, function (field, contract) {\r\n                    var isRequired = (isFunction(contract)) ? (contract() & 1 /* FieldType.Required */) : (contract & 1 /* FieldType.Required */);\r\n                    var isHidden = (isFunction(contract)) ? (contract() & 4 /* FieldType.Hidden */) : (contract & 4 /* FieldType.Hidden */);\r\n                    var isArray = contract & 2 /* FieldType.Array */;\r\n                    var isPresent = source[field] !== undefined;\r\n                    var isObj = isObject(source[field]) && source[field] !== null;\r\n                    if (isRequired && !isPresent && !isArray) {\r\n                        _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 24 /* _eInternalMessageId.MissingRequiredFieldSpecification */, \"Missing required field specification. The field is required but not present on source\", { field: field, name: name });\r\n                        // If not in debug mode, continue and hope the error is permissible\r\n                    }\r\n                    else if (!isHidden) { // Don't serialize hidden fields\r\n                        var value = void 0;\r\n                        if (isObj) {\r\n                            if (isArray) {\r\n                                // special case; recurse on each object in the source array\r\n                                value = _serializeArray(source[field], field);\r\n                            }\r\n                            else {\r\n                                // recurse on the source object in this field\r\n                                value = _serializeObject(source[field], field);\r\n                            }\r\n                        }\r\n                        else {\r\n                            // assign the source field to the output even if undefined or required\r\n                            value = source[field];\r\n                        }\r\n                        // only emit this field if the value is defined\r\n                        if (value !== undefined) {\r\n                            output[field] = value;\r\n                        }\r\n                    }\r\n                });\r\n                delete source[circularReferenceCheck];\r\n                return output;\r\n            }\r\n            function _serializeArray(sources, name) {\r\n                var output;\r\n                if (!!sources) {\r\n                    if (!isArray(sources)) {\r\n                        _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 54 /* _eInternalMessageId.ItemNotInArray */, \"This field was specified as an array in the contract but the item is not an array.\\r\\n\", { name: name }, true);\r\n                    }\r\n                    else {\r\n                        output = [];\r\n                        for (var i = 0; i < sources[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n                            var source = sources[i];\r\n                            var item = _serializeObject(source, name + \"[\" + i + \"]\");\r\n                            output[_DYN_PUSH /* @min:%2epush */](item);\r\n                        }\r\n                    }\r\n                }\r\n                return output;\r\n            }\r\n            function _serializeStringMap(map, expectedType, name) {\r\n                var output;\r\n                if (map) {\r\n                    output = {};\r\n                    objForEachKey(map, function (field, value) {\r\n                        if (expectedType === \"string\") {\r\n                            if (value === undefined) {\r\n                                output[field] = \"undefined\";\r\n                            }\r\n                            else if (value === null) {\r\n                                output[field] = \"null\";\r\n                            }\r\n                            else if (!value[_DYN_TO_STRING /* @min:%2etoString */]) {\r\n                                output[field] = \"invalid field: toString() is not defined.\";\r\n                            }\r\n                            else {\r\n                                output[field] = value[_DYN_TO_STRING /* @min:%2etoString */]();\r\n                            }\r\n                        }\r\n                        else if (expectedType === \"number\") {\r\n                            if (value === undefined) {\r\n                                output[field] = \"undefined\";\r\n                            }\r\n                            else if (value === null) {\r\n                                output[field] = \"null\";\r\n                            }\r\n                            else {\r\n                                var num = parseFloat(value);\r\n                                output[field] = num;\r\n                            }\r\n                        }\r\n                        else {\r\n                            output[field] = \"invalid field: \" + name + \" is of unknown type.\";\r\n                            _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, output[field], null, true);\r\n                        }\r\n                    });\r\n                }\r\n                return output;\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for Serializer.prototype.serialize.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    Serializer.__ieDyn=1;\n\n    return Serializer;\r\n}());\r\nexport { Serializer };\r\n//# sourceMappingURL=Serializer.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { _DYN_CONCAT, _DYN_LENGTH } from \"../../__DynamicConstants\";\r\n// (Magic number) DJB algorithm can't work on shorter strings (results in poor distribution\r\nvar MIN_INPUT_LENGTH = 8;\r\nvar HashCodeScoreGenerator = /** @class */ (function () {\r\n    function HashCodeScoreGenerator() {\r\n    }\r\n    HashCodeScoreGenerator.prototype.getHashCodeScore = function (key) {\r\n        var score = this.getHashCode(key) / HashCodeScoreGenerator.INT_MAX_VALUE;\r\n        return score * 100;\r\n    };\r\n    HashCodeScoreGenerator.prototype.getHashCode = function (input) {\r\n        if (input === \"\") {\r\n            return 0;\r\n        }\r\n        while (input[_DYN_LENGTH /* @min:%2elength */] < MIN_INPUT_LENGTH) {\r\n            input = input[_DYN_CONCAT /* @min:%2econcat */](input);\r\n        }\r\n        // 5381 is a magic number: http://stackoverflow.com/questions/10696223/reason-for-5381-number-in-djb-hash-function\r\n        var hash = 5381;\r\n        for (var i = 0; i < input[_DYN_LENGTH /* @min:%2elength */]; ++i) {\r\n            hash = ((hash << 5) + hash) + input.charCodeAt(i);\r\n            // 'hash' is of number type which means 53 bit integer (http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types-number-type)\r\n            // 'hash & hash' will keep it 32 bit integer - just to make it clearer what the result is.\r\n            hash = hash & hash;\r\n        }\r\n        return Math.abs(hash);\r\n    };\r\n    // We're using 32 bit math, hence max value is (2^31 - 1)\r\n    HashCodeScoreGenerator.INT_MAX_VALUE = 2147483647;\r\n    return HashCodeScoreGenerator;\r\n}());\r\nexport { HashCodeScoreGenerator };\r\n//# sourceMappingURL=HashCodeScoreGenerator.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { ContextTagKeys } from \"@microsoft/applicationinsights-common\";\r\nimport { _DYN_GET_HASH_CODE_SCORE, _DYN_GET_SAMPLING_SCORE, _DYN_TAGS, _DYN_TRACE_ID } from \"../../__DynamicConstants\";\r\nimport { HashCodeScoreGenerator } from \"./HashCodeScoreGenerator\";\r\nvar SamplingScoreGenerator = /** @class */ (function () {\r\n    function SamplingScoreGenerator() {\r\n        var _self = this;\r\n        var hashCodeGenerator = new HashCodeScoreGenerator();\r\n        var keys = new ContextTagKeys();\r\n        _self[_DYN_GET_SAMPLING_SCORE /* @min:%2egetSamplingScore */] = function (item) {\r\n            var score = 0;\r\n            if (item[_DYN_TAGS /* @min:%2etags */] && item[_DYN_TAGS /* @min:%2etags */][keys.userId]) { // search in tags first, then ext\r\n                score = hashCodeGenerator.getHashCodeScore(item[_DYN_TAGS /* @min:%2etags */][keys.userId]);\r\n            }\r\n            else if (item.ext && item.ext.user && item.ext.user.id) {\r\n                score = hashCodeGenerator[_DYN_GET_HASH_CODE_SCORE /* @min:%2egetHashCodeScore */](item.ext.user.id);\r\n            }\r\n            else if (item[_DYN_TAGS /* @min:%2etags */] && item[_DYN_TAGS /* @min:%2etags */][keys.operationId]) { // search in tags first, then ext\r\n                score = hashCodeGenerator.getHashCodeScore(item[_DYN_TAGS /* @min:%2etags */][keys.operationId]);\r\n            }\r\n            else if (item.ext && item.ext.telemetryTrace && item.ext.telemetryTrace[_DYN_TRACE_ID /* @min:%2etraceID */]) {\r\n                score = hashCodeGenerator.getHashCodeScore(item.ext.telemetryTrace[_DYN_TRACE_ID /* @min:%2etraceID */]);\r\n            }\r\n            else {\r\n                // tslint:disable-next-line:insecure-random\r\n                score = (Math.random() * 100);\r\n            }\r\n            return score;\r\n        };\r\n    }\r\n    return SamplingScoreGenerator;\r\n}());\r\nexport { SamplingScoreGenerator };\r\n//# sourceMappingURL=SamplingScoreGenerator.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { Metric } from \"@microsoft/applicationinsights-common\";\r\nimport { safeGetLogger } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_DATA_TYPE, _DYN_GET_SAMPLING_SCORE, _DYN_SAMPLE_RATE } from \"../__DynamicConstants\";\r\nimport { SamplingScoreGenerator } from \"./SamplingScoreGenerators/SamplingScoreGenerator\";\r\nvar Sample = /** @class */ (function () {\r\n    function Sample(sampleRate, logger) {\r\n        // We're using 32 bit math, hence max value is (2^31 - 1)\r\n        this.INT_MAX_VALUE = 2147483647;\r\n        var _logger = logger || safeGetLogger(null);\r\n        if (sampleRate > 100 || sampleRate < 0) {\r\n            _logger.throwInternal(2 /* eLoggingSeverity.WARNING */, 58 /* _eInternalMessageId.SampleRateOutOfRange */, \"Sampling rate is out of range (0..100). Sampling will be disabled, you may be sending too much data which may affect your AI service level.\", { samplingRate: sampleRate }, true);\r\n            sampleRate = 100;\r\n        }\r\n        this[_DYN_SAMPLE_RATE /* @min:%2esampleRate */] = sampleRate;\r\n        this.samplingScoreGenerator = new SamplingScoreGenerator();\r\n    }\r\n    /**\r\n    * Determines if an envelope is sampled in (i.e. will be sent) or not (i.e. will be dropped).\r\n    */\r\n    Sample.prototype.isSampledIn = function (envelope) {\r\n        var samplingPercentage = this[_DYN_SAMPLE_RATE /* @min:%2esampleRate */]; // 0 - 100\r\n        var isSampledIn = false;\r\n        if (samplingPercentage === null || samplingPercentage === undefined || samplingPercentage >= 100) {\r\n            return true;\r\n        }\r\n        else if (envelope.baseType === Metric[_DYN_DATA_TYPE /* @min:%2edataType */]) {\r\n            // exclude MetricData telemetry from sampling\r\n            return true;\r\n        }\r\n        isSampledIn = this.samplingScoreGenerator[_DYN_GET_SAMPLING_SCORE /* @min:%2egetSamplingScore */](envelope) < samplingPercentage;\r\n        return isSampledIn;\r\n    };\r\n    return Sample;\r\n}());\r\nexport { Sample };\r\n//# sourceMappingURL=Sample.js.map","/*\n * Application Insights JavaScript Web SDK - Basic, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nvar _a;\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { Sender } from \"@microsoft/applicationinsights-channel-js\";\r\nimport { DEFAULT_BREEZE_PATH, parseConnectionString } from \"@microsoft/applicationinsights-common\";\r\nimport { AppInsightsCore, cfgDfValidate, createDynamicConfig, onConfigChange, proxyFunctions } from \"@microsoft/applicationinsights-core-js\";\r\nimport { createSyncPromise, doAwaitResponse } from \"@nevware21/ts-async\";\r\nimport { isNullOrUndefined, isPromiseLike, isString, objDefine, throwError } from \"@nevware21/ts-utils\";\r\nimport { _DYN_CONNECTION_STRING, _DYN_ENDPOINT_URL, _DYN_INGESTIONENDPOINT, _DYN_INSTRUMENTATIONKEY0, _DYN_INSTRUMENTATION_KEY, _DYN_USER_OVERRIDE_ENDPOI1 } from \"./__DynamicConstants\";\r\nvar UNDEFINED_VALUE = undefined;\r\nvar defaultConfigValues = (_a = {\r\n        diagnosticLogInterval: cfgDfValidate(_chkDiagLevel, 10000)\r\n    },\r\n    _a[_DYN_CONNECTION_STRING /* @min:connectionString */] = UNDEFINED_VALUE,\r\n    _a[_DYN_ENDPOINT_URL /* @min:endpointUrl */] = UNDEFINED_VALUE,\r\n    _a[_DYN_INSTRUMENTATION_KEY /* @min:instrumentationKey */] = UNDEFINED_VALUE,\r\n    _a.extensionConfig = {},\r\n    _a);\r\nfunction _chkDiagLevel(value) {\r\n    // Make sure we have a value > 0\r\n    return value && value > 0;\r\n}\r\n/**\r\n * @export\r\n * @class ApplicationInsights\r\n */\r\nvar ApplicationInsights = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ApplicationInsights.\r\n     * @param config\r\n     * @memberof ApplicationInsights\r\n     */\r\n    function ApplicationInsights(config) {\r\n        var core = new AppInsightsCore();\r\n        var _config;\r\n        // initialize the queue and config in case they are undefined\r\n        if (isNullOrUndefined(config) ||\r\n            (isNullOrUndefined(config[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */]) && isNullOrUndefined(config[_DYN_CONNECTION_STRING /* @min:%2econnectionString */]))) {\r\n            throwError(\"Invalid input configuration\");\r\n        }\r\n        dynamicProto(ApplicationInsights, this, function (_self) {\r\n            // Define _self.config\r\n            objDefine(_self, \"config\", {\r\n                g: function () { return _config; }\r\n            });\r\n            _initialize();\r\n            _self.initialize = _initialize;\r\n            _self.track = _track;\r\n            proxyFunctions(_self, core, [\r\n                \"flush\",\r\n                \"pollInternalLogs\",\r\n                \"stopPollingInternalLogs\",\r\n                \"unload\",\r\n                \"getPlugin\",\r\n                \"addPlugin\",\r\n                \"evtNamespace\",\r\n                \"addUnloadCb\",\r\n                \"onCfgChange\",\r\n                \"getTraceCtx\",\r\n                \"updateCfg\",\r\n                \"addTelemetryInitializer\"\r\n            ]);\r\n            function _initialize() {\r\n                var cfgHandler = createDynamicConfig(config || {}, defaultConfigValues);\r\n                _config = cfgHandler.cfg;\r\n                core.addUnloadHook(onConfigChange(cfgHandler, function () {\r\n                    var configCs = _config[_DYN_CONNECTION_STRING /* @min:%2econnectionString */];\r\n                    if (isPromiseLike(configCs)) {\r\n                        var ikeyPromise = createSyncPromise(function (resolve, reject) {\r\n                            doAwaitResponse(configCs, function (res) {\r\n                                var curCs = res.value;\r\n                                var ikey = _config[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */];\r\n                                if (!res.rejected && curCs) {\r\n                                    // replace cs with resolved values in case of circular promises\r\n                                    _config[_DYN_CONNECTION_STRING /* @min:%2econnectionString */] = curCs;\r\n                                    var resolvedCs = parseConnectionString(curCs);\r\n                                    ikey = resolvedCs[_DYN_INSTRUMENTATIONKEY0 /* @min:%2einstrumentationkey */] || ikey;\r\n                                }\r\n                                resolve(ikey);\r\n                            });\r\n                        });\r\n                        var urlPromise = createSyncPromise(function (resolve, reject) {\r\n                            doAwaitResponse(configCs, function (res) {\r\n                                var curCs = res.value;\r\n                                var url = _config[_DYN_ENDPOINT_URL /* @min:%2eendpointUrl */];\r\n                                if (!res.rejected && curCs) {\r\n                                    var resolvedCs = parseConnectionString(curCs);\r\n                                    var ingest = resolvedCs[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */];\r\n                                    url = ingest ? ingest + DEFAULT_BREEZE_PATH : url;\r\n                                }\r\n                                resolve(url);\r\n                            });\r\n                        });\r\n                        _config[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */] = ikeyPromise;\r\n                        _config[_DYN_ENDPOINT_URL /* @min:%2eendpointUrl */] = _config[_DYN_USER_OVERRIDE_ENDPOI1 /* @min:%2euserOverrideEndpointUrl */] || urlPromise;\r\n                    }\r\n                    if (isString(configCs)) {\r\n                        var cs = parseConnectionString(configCs);\r\n                        var ingest = cs[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */];\r\n                        _config[_DYN_ENDPOINT_URL /* @min:%2eendpointUrl */] = _config[_DYN_USER_OVERRIDE_ENDPOI1 /* @min:%2euserOverrideEndpointUrl */] ? _config[_DYN_USER_OVERRIDE_ENDPOI1 /* @min:%2euserOverrideEndpointUrl */] : (ingest + DEFAULT_BREEZE_PATH); // only add /v2/track when from connectionstring\r\n                        _config[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */] = cs[_DYN_INSTRUMENTATIONKEY0 /* @min:%2einstrumentationkey */] || _config[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */];\r\n                    }\r\n                    // userOverrideEndpointUrl have the highest priority\r\n                    _config[_DYN_ENDPOINT_URL /* @min:%2eendpointUrl */] = _config[_DYN_USER_OVERRIDE_ENDPOI1 /* @min:%2euserOverrideEndpointUrl */] ? _config[_DYN_USER_OVERRIDE_ENDPOI1 /* @min:%2euserOverrideEndpointUrl */] : _config[_DYN_ENDPOINT_URL /* @min:%2eendpointUrl */];\r\n                }));\r\n                // initialize core\r\n                core.initialize(_config, [new Sender()]);\r\n            }\r\n        });\r\n        function _track(item) {\r\n            if (item) {\r\n                // to pass sender.processTelemetry()\r\n                item.baseData = item.baseData || {};\r\n                item.baseType = item.baseType || \"EventData\";\r\n            }\r\n            core.track(item);\r\n        }\r\n    }\r\n// Removed Stub for ApplicationInsights.prototype.initialize.\r\n// Removed Stub for ApplicationInsights.prototype.track.\r\n// Removed Stub for ApplicationInsights.prototype.flush.\r\n// Removed Stub for ApplicationInsights.prototype.pollInternalLogs.\r\n// Removed Stub for ApplicationInsights.prototype.stopPollingInternalLogs.\r\n// Removed Stub for ApplicationInsights.prototype.unload.\r\n// Removed Stub for ApplicationInsights.prototype.getPlugin.\r\n// Removed Stub for ApplicationInsights.prototype.addPlugin.\r\n// Removed Stub for ApplicationInsights.prototype.evtNamespace.\r\n// Removed Stub for ApplicationInsights.prototype.addUnloadCb.\r\n// Removed Stub for ApplicationInsights.prototype.getTraceCtx.\r\n// Removed Stub for ApplicationInsights.prototype.addTelemetryInitializer.\r\n// Removed Stub for ApplicationInsights.prototype.updateCfg.\r\n// Removed Stub for ApplicationInsights.prototype.onCfgChange.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    ApplicationInsights.__ieDyn=1;\n\n    return ApplicationInsights;\r\n}());\r\nexport { ApplicationInsights };\r\nexport { AppInsightsCore, arrForEach, isNullOrUndefined, throwError, proxyFunctions } from \"@microsoft/applicationinsights-core-js\";\r\nexport { SeverityLevel } from \"@microsoft/applicationinsights-common\";\r\nexport { Sender } from \"@microsoft/applicationinsights-channel-js\";\r\n//# sourceMappingURL=index.js.map","/*\n * Application Insights JavaScript Web SDK - Basic, 3.3.3\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_INSTRUMENTATION_KEY = \"instrumentationKey\"; // Count: 6\r\nexport var _DYN_CONNECTION_STRING = \"connectionString\"; // Count: 4\r\nexport var _DYN_INSTRUMENTATIONKEY0 = \"instrumentationkey\"; // Count: 2\r\nexport var _DYN_ENDPOINT_URL = \"endpointUrl\"; // Count: 6\r\nexport var _DYN_INGESTIONENDPOINT = \"ingestionendpoint\"; // Count: 2\r\nexport var _DYN_USER_OVERRIDE_ENDPOI1 = \"userOverrideEndpointUrl\"; // Count: 5\r\n//# sourceMappingURL=__DynamicConstants.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar _a;\r\nimport { getGlobal, objCreate, objHasOwnProperty, throwTypeError } from \"@nevware21/ts-utils\";\r\n;\r\nvar UNDEFINED = \"undefined\";\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar Constructor = 'constructor';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar Prototype = 'prototype';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strFunction = 'function';\r\n/**\r\n * Used to define the name of the instance function lookup table\r\n * @ignore\r\n */\r\nvar DynInstFuncTable = '_dynInstFuncs';\r\n/**\r\n * Name used to tag the dynamic prototype function\r\n * @ignore\r\n */\r\nvar DynProxyTag = '_isDynProxy';\r\n/**\r\n * Name added to a prototype to define the dynamic prototype \"class\" name used to lookup the function table\r\n * @ignore\r\n */\r\nvar DynClassName = '_dynClass';\r\n/**\r\n * Prefix added to the classname to avoid any name clashes with other instance level properties\r\n * @ignore\r\n */\r\nvar DynClassNamePrefix = '_dynCls$';\r\n/**\r\n * A tag which is used to check if we have already to attempted to set the instance function if one is not present\r\n * @ignore\r\n */\r\nvar DynInstChkTag = '_dynInstChk';\r\n/**\r\n * A tag which is used to check if we are allows to try and set an instance function is one is not present. Using the same\r\n * tag name as the function level but a different const name for readability only.\r\n */\r\nvar DynAllowInstChkTag = DynInstChkTag;\r\n/**\r\n * The global (imported) instances where the global performance options are stored\r\n */\r\nvar DynProtoDefaultOptions = '_dfOpts';\r\n/**\r\n * Value used as the name of a class when it cannot be determined\r\n * @ignore\r\n */\r\nvar UnknownValue = '_unknown_';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar str__Proto = \"__proto__\";\r\n/**\r\n * The polyfill version of __proto__ so that it doesn't cause issues for anyone not expecting it to exist\r\n */\r\nvar DynProtoBaseProto = \"_dyn\" + str__Proto;\r\n/**\r\n * Runtime Global holder for dynamicProto settings\r\n */\r\nvar DynProtoGlobalSettings = \"__dynProto$Gbl\";\r\n/**\r\n * Track the current prototype for IE8 as you can't look back to get the prototype\r\n */\r\nvar DynProtoCurrent = \"_dynInstProto\";\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strUseBaseInst = 'useBaseInst';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strSetInstFuncs = 'setInstFuncs';\r\nvar Obj = Object;\r\n/**\r\n * Pre-lookup to check if we are running on a modern browser (i.e. not IE8)\r\n * @ignore\r\n */\r\nvar _objGetPrototypeOf = Obj[\"getPrototypeOf\"];\r\n/**\r\n * Pre-lookup to check for the existence of this function\r\n */\r\nvar _objGetOwnProps = Obj[\"getOwnPropertyNames\"];\r\n// Since 1.1.7 moving these to the runtime global to work around mixed version and module issues\r\n// See Issue https://github.com/microsoft/DynamicProto-JS/issues/57 for details\r\nvar _gbl = getGlobal();\r\nvar _gblInst = _gbl[DynProtoGlobalSettings] || (_gbl[DynProtoGlobalSettings] = {\r\n    o: (_a = {},\r\n        _a[strSetInstFuncs] = true,\r\n        _a[strUseBaseInst] = true,\r\n        _a),\r\n    n: 1000 // Start new global index @ 1000 so we \"fix\" some cases when mixed with 1.1.6 or earlier\r\n});\r\n/**\r\n * Helper used to check whether the target is an Object prototype or Array prototype\r\n * @ignore\r\n */\r\nfunction _isObjectOrArrayPrototype(target) {\r\n    return target && (target === Obj[Prototype] || target === Array[Prototype]);\r\n}\r\n/**\r\n * Helper used to check whether the target is an Object prototype, Array prototype or Function prototype\r\n * @ignore\r\n */\r\nfunction _isObjectArrayOrFunctionPrototype(target) {\r\n    return _isObjectOrArrayPrototype(target) || target === Function[Prototype];\r\n}\r\n/**\r\n * Helper used to get the prototype of the target object as getPrototypeOf is not available in an ES3 environment.\r\n * @ignore\r\n */\r\nfunction _getObjProto(target) {\r\n    var newProto;\r\n    if (target) {\r\n        // This method doesn't exist in older browsers (e.g. IE8)\r\n        if (_objGetPrototypeOf) {\r\n            return _objGetPrototypeOf(target);\r\n        }\r\n        var curProto = target[str__Proto] || target[Prototype] || (target[Constructor] ? target[Constructor][Prototype] : null);\r\n        // Using the pre-calculated value as IE8 doesn't support looking up the prototype of a prototype and thus fails for more than 1 base class\r\n        newProto = target[DynProtoBaseProto] || curProto;\r\n        if (!objHasOwnProperty(target, DynProtoBaseProto)) {\r\n            // As this prototype doesn't have this property then this is from an inherited class so newProto is the base to return so save it\r\n            // so we can look it up value (which for a multiple hierarchy dynamicProto will be the base class)\r\n            delete target[DynProtoCurrent]; // Delete any current value allocated to this instance so we pick up the value from prototype hierarchy\r\n            newProto = target[DynProtoBaseProto] = target[DynProtoCurrent] || target[DynProtoBaseProto];\r\n            target[DynProtoCurrent] = curProto;\r\n        }\r\n    }\r\n    return newProto;\r\n}\r\n/**\r\n * Helper to get the properties of an object, including none enumerable ones as functions on a prototype in ES6\r\n * are not enumerable.\r\n * @param target\r\n */\r\nfunction _forEachProp(target, func) {\r\n    var props = [];\r\n    if (_objGetOwnProps) {\r\n        props = _objGetOwnProps(target);\r\n    }\r\n    else {\r\n        for (var name_1 in target) {\r\n            if (typeof name_1 === \"string\" && objHasOwnProperty(target, name_1)) {\r\n                props.push(name_1);\r\n            }\r\n        }\r\n    }\r\n    if (props && props.length > 0) {\r\n        for (var lp = 0; lp < props.length; lp++) {\r\n            func(props[lp]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Helper function to check whether the provided function name is a potential candidate for dynamic\r\n * callback and prototype generation.\r\n * @param target The target object, may be a prototype or class object\r\n * @param funcName The function name\r\n * @param skipOwn Skips the check for own property\r\n * @ignore\r\n */\r\nfunction _isDynamicCandidate(target, funcName, skipOwn) {\r\n    return (funcName !== Constructor && typeof target[funcName] === strFunction && (skipOwn || objHasOwnProperty(target, funcName)) && funcName !== str__Proto && funcName !== Prototype);\r\n}\r\n/**\r\n * Helper to throw a TypeError exception\r\n * @param message the message\r\n * @ignore\r\n */\r\nfunction _throwTypeError(message) {\r\n    throwTypeError(\"DynamicProto: \" + message);\r\n}\r\n/**\r\n * Returns a collection of the instance functions that are defined directly on the thisTarget object, it does\r\n * not return any inherited functions\r\n * @param thisTarget The object to get the instance functions from\r\n * @ignore\r\n */\r\nfunction _getInstanceFuncs(thisTarget) {\r\n    // Get the base proto\r\n    var instFuncs = objCreate(null);\r\n    // Save any existing instance functions\r\n    _forEachProp(thisTarget, function (name) {\r\n        // Don't include any dynamic prototype instances - as we only want the real functions\r\n        if (!instFuncs[name] && _isDynamicCandidate(thisTarget, name, false)) {\r\n            // Create an instance callback for passing the base function to the caller\r\n            instFuncs[name] = thisTarget[name];\r\n        }\r\n    });\r\n    return instFuncs;\r\n}\r\n/**\r\n * Returns whether the value is included in the array\r\n * @param values The array of values\r\n * @param value  The value\r\n */\r\nfunction _hasVisited(values, value) {\r\n    for (var lp = values.length - 1; lp >= 0; lp--) {\r\n        if (values[lp] === value) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Returns an object that contains callback functions for all \"base/super\" functions, this is used to \"save\"\r\n * enabling calling super.xxx() functions without requiring that the base \"class\" has defined a prototype references\r\n * @param target The current instance\r\n * @ignore\r\n */\r\nfunction _getBaseFuncs(classProto, thisTarget, instFuncs, useBaseInst) {\r\n    function _instFuncProxy(target, funcHost, funcName) {\r\n        var theFunc = funcHost[funcName];\r\n        if (theFunc[DynProxyTag] && useBaseInst) {\r\n            // grab and reuse the hosted looking function (if available) otherwise the original passed function\r\n            var instFuncTable = target[DynInstFuncTable] || {};\r\n            if (instFuncTable[DynAllowInstChkTag] !== false) {\r\n                theFunc = (instFuncTable[funcHost[DynClassName]] || {})[funcName] || theFunc;\r\n            }\r\n        }\r\n        return function () {\r\n            // eslint-disable-next-line prefer-rest-params\r\n            return theFunc.apply(target, arguments);\r\n        };\r\n    }\r\n    // Start creating a new baseFuncs by creating proxies for the instance functions (as they may get replaced)\r\n    var baseFuncs = objCreate(null);\r\n    _forEachProp(instFuncs, function (name) {\r\n        // Create an instance callback for passing the base function to the caller\r\n        baseFuncs[name] = _instFuncProxy(thisTarget, instFuncs, name);\r\n    });\r\n    // Get the base prototype functions\r\n    var baseProto = _getObjProto(classProto);\r\n    var visited = [];\r\n    // Don't include base object functions for Object, Array or Function\r\n    while (baseProto && !_isObjectArrayOrFunctionPrototype(baseProto) && !_hasVisited(visited, baseProto)) {\r\n        // look for prototype functions\r\n        _forEachProp(baseProto, function (name) {\r\n            // Don't include any dynamic prototype instances - as we only want the real functions\r\n            // For IE 7/8 the prototype lookup doesn't provide the full chain so we need to bypass the \r\n            // hasOwnProperty check we get all of the methods, main difference is that IE7/8 doesn't return\r\n            // the Object prototype methods while bypassing the check\r\n            if (!baseFuncs[name] && _isDynamicCandidate(baseProto, name, !_objGetPrototypeOf)) {\r\n                // Create an instance callback for passing the base function to the caller\r\n                baseFuncs[name] = _instFuncProxy(thisTarget, baseProto, name);\r\n            }\r\n        });\r\n        // We need to find all possible functions that might be overloaded by walking the entire prototype chain\r\n        // This avoids the caller from needing to check whether it's direct base class implements the function or not\r\n        // by walking the entire chain it simplifies the usage and issues from upgrading any of the base classes.\r\n        visited.push(baseProto);\r\n        baseProto = _getObjProto(baseProto);\r\n    }\r\n    return baseFuncs;\r\n}\r\nfunction _getInstFunc(target, funcName, proto, currentDynProtoProxy) {\r\n    var instFunc = null;\r\n    // We need to check whether the class name is defined directly on this prototype otherwise\r\n    // it will walk the proto chain and return any parent proto classname.\r\n    if (target && objHasOwnProperty(proto, DynClassName)) {\r\n        var instFuncTable = target[DynInstFuncTable] || objCreate(null);\r\n        instFunc = (instFuncTable[proto[DynClassName]] || objCreate(null))[funcName];\r\n        if (!instFunc) {\r\n            // Avoid stack overflow from recursive calling the same function\r\n            _throwTypeError(\"Missing [\" + funcName + \"] \" + strFunction);\r\n        }\r\n        // We have the instance function, lets check it we can speed up further calls\r\n        // by adding the instance function back directly on the instance (avoiding the dynamic func lookup)\r\n        if (!instFunc[DynInstChkTag] && instFuncTable[DynAllowInstChkTag] !== false) {\r\n            // If the instance already has an instance function we can't replace it\r\n            var canAddInst = !objHasOwnProperty(target, funcName);\r\n            // Get current prototype\r\n            var objProto = _getObjProto(target);\r\n            var visited = [];\r\n            // Lookup the function starting at the top (instance level prototype) and traverse down, if the first matching function\r\n            // if nothing is found or if the first hit is a dynamic proto instance then we can safely add an instance shortcut\r\n            while (canAddInst && objProto && !_isObjectArrayOrFunctionPrototype(objProto) && !_hasVisited(visited, objProto)) {\r\n                var protoFunc = objProto[funcName];\r\n                if (protoFunc) {\r\n                    canAddInst = (protoFunc === currentDynProtoProxy);\r\n                    break;\r\n                }\r\n                // We need to find all possible initial functions to ensure that we don't bypass a valid override function\r\n                visited.push(objProto);\r\n                objProto = _getObjProto(objProto);\r\n            }\r\n            try {\r\n                if (canAddInst) {\r\n                    // This instance doesn't have an instance func and the class hierarchy does have a higher level prototype version\r\n                    // so it's safe to directly assign for any subsequent calls (for better performance)\r\n                    target[funcName] = instFunc;\r\n                }\r\n                // Block further attempts to set the instance function for any\r\n                instFunc[DynInstChkTag] = 1;\r\n            }\r\n            catch (e) {\r\n                // Don't crash if the object is readonly or the runtime doesn't allow changing this\r\n                // And set a flag so we don't try again for any function\r\n                instFuncTable[DynAllowInstChkTag] = false;\r\n            }\r\n        }\r\n    }\r\n    return instFunc;\r\n}\r\nfunction _getProtoFunc(funcName, proto, currentDynProtoProxy) {\r\n    var protoFunc = proto[funcName];\r\n    // Check that the prototype function is not a self reference -- try to avoid stack overflow!\r\n    if (protoFunc === currentDynProtoProxy) {\r\n        // It is so lookup the base prototype\r\n        protoFunc = _getObjProto(proto)[funcName];\r\n    }\r\n    if (typeof protoFunc !== strFunction) {\r\n        _throwTypeError(\"[\" + funcName + \"] is not a \" + strFunction);\r\n    }\r\n    return protoFunc;\r\n}\r\n/**\r\n * Add the required dynamic prototype methods to the the class prototype\r\n * @param proto - The class prototype\r\n * @param className - The instance classname\r\n * @param target - The target instance\r\n * @param baseInstFuncs - The base instance functions\r\n * @param setInstanceFunc - Flag to allow prototype function to reset the instance function if one does not exist\r\n * @ignore\r\n */\r\nfunction _populatePrototype(proto, className, target, baseInstFuncs, setInstanceFunc) {\r\n    function _createDynamicPrototype(proto, funcName) {\r\n        var dynProtoProxy = function () {\r\n            // Use the instance or prototype function\r\n            var instFunc = _getInstFunc(this, funcName, proto, dynProtoProxy) || _getProtoFunc(funcName, proto, dynProtoProxy);\r\n            // eslint-disable-next-line prefer-rest-params\r\n            return instFunc.apply(this, arguments);\r\n        };\r\n        // Tag this function as a proxy to support replacing dynamic proxy elements (primary use case is for unit testing\r\n        // via which can dynamically replace the prototype function reference)\r\n        dynProtoProxy[DynProxyTag] = 1;\r\n        return dynProtoProxy;\r\n    }\r\n    if (!_isObjectOrArrayPrototype(proto)) {\r\n        var instFuncTable = target[DynInstFuncTable] = target[DynInstFuncTable] || objCreate(null);\r\n        if (!_isObjectOrArrayPrototype(instFuncTable)) {\r\n            var instFuncs_1 = instFuncTable[className] = (instFuncTable[className] || objCreate(null)); // fetch and assign if as it may not exist yet\r\n            // Set whether we are allow to lookup instances, if someone has set to false then do not re-enable\r\n            if (instFuncTable[DynAllowInstChkTag] !== false) {\r\n                instFuncTable[DynAllowInstChkTag] = !!setInstanceFunc;\r\n            }\r\n            if (!_isObjectOrArrayPrototype(instFuncs_1)) {\r\n                _forEachProp(target, function (name) {\r\n                    // Only add overridden functions\r\n                    if (_isDynamicCandidate(target, name, false) && target[name] !== baseInstFuncs[name]) {\r\n                        // Save the instance Function to the lookup table and remove it from the instance as it's not a dynamic proto function\r\n                        instFuncs_1[name] = target[name];\r\n                        delete target[name];\r\n                        // Add a dynamic proto if one doesn't exist or if a prototype function exists and it's not a dynamic one\r\n                        if (!objHasOwnProperty(proto, name) || (proto[name] && !proto[name][DynProxyTag])) {\r\n                            proto[name] = _createDynamicPrototype(proto, name);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Checks whether the passed prototype object appears to be correct by walking the prototype hierarchy of the instance\r\n * @param classProto The class prototype instance\r\n * @param thisTarget The current instance that will be checked whether the passed prototype instance is in the hierarchy\r\n * @ignore\r\n */\r\nfunction _checkPrototype(classProto, thisTarget) {\r\n    // This method doesn't existing in older browsers (e.g. IE8)\r\n    if (_objGetPrototypeOf) {\r\n        // As this is primarily a coding time check, don't bother checking if running in IE8 or lower\r\n        var visited = [];\r\n        var thisProto = _getObjProto(thisTarget);\r\n        while (thisProto && !_isObjectArrayOrFunctionPrototype(thisProto) && !_hasVisited(visited, thisProto)) {\r\n            if (thisProto === classProto) {\r\n                return true;\r\n            }\r\n            // This avoids the caller from needing to check whether it's direct base class implements the function or not\r\n            // by walking the entire chain it simplifies the usage and issues from upgrading any of the base classes.\r\n            visited.push(thisProto);\r\n            thisProto = _getObjProto(thisProto);\r\n        }\r\n        return false;\r\n    }\r\n    // If objGetPrototypeOf doesn't exist then just assume everything is ok.\r\n    return true;\r\n}\r\n/**\r\n * Gets the current prototype name using the ES6 name if available otherwise falling back to a use unknown as the name.\r\n * It's not critical for this to return a name, it's used to decorate the generated unique name for easier debugging only.\r\n * @param target\r\n * @param unknownValue\r\n * @ignore\r\n */\r\nfunction _getObjName(target, unknownValue) {\r\n    if (objHasOwnProperty(target, Prototype)) {\r\n        // Look like a prototype\r\n        return target.name || unknownValue || UnknownValue;\r\n    }\r\n    return (((target || {})[Constructor]) || {}).name || unknownValue || UnknownValue;\r\n}\r\n/**\r\n * Helper function when creating dynamic (inline) functions for classes, this helper performs the following tasks :-\r\n * - Saves references to all defined base class functions\r\n * - Calls the delegateFunc with the current target (this) and a base object reference that can be used to call all \"super\" functions.\r\n * - Will populate the class prototype for all overridden functions to support class extension that call the prototype instance.\r\n * Callers should use this helper when declaring all function within the constructor of a class, as mentioned above the delegateFunc is\r\n * passed both the target \"this\" and an object that can be used to call any base (super) functions, using this based object in place of\r\n * super.XXX() (which gets expanded to _super.prototype.XXX()) provides a better minification outcome and also ensures the correct \"this\"\r\n * context is maintained as TypeScript creates incorrect references using super.XXXX() for dynamically defined functions i.e. Functions\r\n * defined in the constructor or some other function (rather than declared as complete typescript functions).\r\n * ### Usage\r\n * ```typescript\r\n * import dynamicProto from \"@microsoft/dynamicproto-js\";\r\n * class ExampleClass extends BaseClass {\r\n *     constructor() {\r\n *         dynamicProto(ExampleClass, this, (_self, base) => {\r\n *             // This will define a function that will be converted to a prototype function\r\n *             _self.newFunc = () => {\r\n *                 // Access any \"this\" instance property\r\n *                 if (_self.someProperty) {\r\n *                     ...\r\n *                 }\r\n *             }\r\n *             // This will define a function that will be converted to a prototype function\r\n *             _self.myFunction = () => {\r\n *                 // Access any \"this\" instance property\r\n *                 if (_self.someProperty) {\r\n *                     // Call the base version of the function that we are overriding\r\n *                     base.myFunction();\r\n *                 }\r\n *                 ...\r\n *             }\r\n *             _self.initialize = () => {\r\n *                 ...\r\n *             }\r\n *             // Warnings: While the following will work as _self is simply a reference to\r\n *             // this, if anyone overrides myFunction() the overridden will be called first\r\n *             // as the normal JavaScript method resolution will occur and the defined\r\n *             // _self.initialize() function is actually gets removed from the instance and\r\n *             // a proxy prototype version is created to reference the created method.\r\n *             _self.initialize();\r\n *         });\r\n *     }\r\n * }\r\n * ```\r\n * @typeparam DPType This is the generic type of the class, used to keep intellisense valid\r\n * @typeparam DPCls The type that contains the prototype of the current class\r\n * @param theClass - This is the current class instance which contains the prototype for the current class\r\n * @param target - The current \"this\" (target) reference, when the class has been extended this.prototype will not be the 'theClass' value.\r\n * @param delegateFunc - The callback function (closure) that will create the dynamic function\r\n * @param options - Additional options to configure how the dynamic prototype operates\r\n */\r\nexport default function dynamicProto(theClass, target, delegateFunc, options) {\r\n    // Make sure that the passed theClass argument looks correct\r\n    if (!objHasOwnProperty(theClass, Prototype)) {\r\n        _throwTypeError(\"theClass is an invalid class definition.\");\r\n    }\r\n    // Quick check to make sure that the passed theClass argument looks correct (this is a common copy/paste error)\r\n    var classProto = theClass[Prototype];\r\n    if (!_checkPrototype(classProto, target)) {\r\n        _throwTypeError(\"[\" + _getObjName(theClass) + \"] not in hierarchy of [\" + _getObjName(target) + \"]\");\r\n    }\r\n    var className = null;\r\n    if (objHasOwnProperty(classProto, DynClassName)) {\r\n        // Only grab the class name if it's defined on this prototype (i.e. don't walk the prototype chain)\r\n        className = classProto[DynClassName];\r\n    }\r\n    else {\r\n        // As not all browser support name on the prototype creating a unique dynamic one if we have not already\r\n        // assigned one, so we can use a simple string as the lookup rather than an object for the dynamic instance\r\n        // function table lookup.\r\n        className = DynClassNamePrefix + _getObjName(theClass, \"_\") + \"$\" + _gblInst.n;\r\n        _gblInst.n++;\r\n        classProto[DynClassName] = className;\r\n    }\r\n    var perfOptions = dynamicProto[DynProtoDefaultOptions];\r\n    var useBaseInst = !!perfOptions[strUseBaseInst];\r\n    if (useBaseInst && options && options[strUseBaseInst] !== undefined) {\r\n        useBaseInst = !!options[strUseBaseInst];\r\n    }\r\n    // Get the current instance functions\r\n    var instFuncs = _getInstanceFuncs(target);\r\n    // Get all of the functions for any base instance (before they are potentially overridden)\r\n    var baseFuncs = _getBaseFuncs(classProto, target, instFuncs, useBaseInst);\r\n    // Execute the delegate passing in both the current target \"this\" and \"base\" function references\r\n    // Note casting the same type as we don't actually have the base class here and this will provide some intellisense support\r\n    delegateFunc(target, baseFuncs);\r\n    // Don't allow setting instance functions for older IE instances\r\n    var setInstanceFunc = !!_objGetPrototypeOf && !!perfOptions[strSetInstFuncs];\r\n    if (setInstanceFunc && options) {\r\n        setInstanceFunc = !!options[strSetInstFuncs];\r\n    }\r\n    // Populate the Prototype for any overridden instance functions\r\n    _populatePrototype(classProto, className, target, instFuncs, setInstanceFunc !== false);\r\n}\r\n/**\r\n * Exposes the default global options to allow global configuration, if the global values are disabled these will override\r\n * any passed values. This is primarily exposed to support unit-testing without the need for individual classes to expose\r\n * their internal usage of dynamic proto.\r\n */\r\ndynamicProto[DynProtoDefaultOptions] = _gblInst.o;\r\n//# sourceMappingURL=DynamicProto.js.map","/*!\n * NevWare21 Solutions LLC - ts-async, 0.5.2\n * https://github.com/nevware21/ts-async\n * Copyright (c) NevWare21 Solutions LLC and contributors. All rights reserved.\n * Licensed under the MIT license.\n */\nimport { isPromiseLike, objDefineProperties, getDocument, createCachedValue, safe, getInst, dumpObj, arrSlice, objDefineProp, hasSymbol, getKnownSymbol, isFunction, throwTypeError, iterForOf, scheduleTimeout, isNode, getWindow, getGlobal, objDefine, objToString, isUndefined, isArray, arrForEach, isIterable, createCustomError, isNumber, scheduleIdleCallback, utcNow, getLength, isIterator, fnCall, arrIndexOf } from '@nevware21/ts-utils';\n\nvar STR_PROMISE = \"Promise\";\nvar DONE = \"done\";\nvar VALUE = \"value\";\nvar RETURN = \"return\";\nvar REJECTED = \"rejected\";\n\nfunction doAwaitResponse(value, cb) {\n    return doAwait(value, function (value) {\n        return cb ? cb({\n            status: \"fulfilled\",\n            rejected: false,\n            value: value\n        }) : value;\n    }, function (reason) {\n        return cb ? cb({\n            status: REJECTED,\n            rejected: true,\n            reason: reason\n        }) : reason;\n    });\n}\nfunction doAwait(value, resolveFn, rejectFn, finallyFn) {\n    var result = value;\n    try {\n        if (isPromiseLike(value)) {\n            if (resolveFn || rejectFn) {\n                result = value.then(resolveFn, rejectFn);\n            }\n        }\n        else {\n            try {\n                if (resolveFn) {\n                    result = resolveFn(value);\n                }\n            }\n            catch (err) {\n                if (rejectFn) {\n                    result = rejectFn(err);\n                }\n                else {\n                    throw err;\n                }\n            }\n        }\n    }\n    finally {\n        if (finallyFn) {\n            doFinally(result, finallyFn);\n        }\n    }\n    return result;\n}\nfunction doFinally(value, finallyFn) {\n    var result = value;\n    if (finallyFn) {\n        if (isPromiseLike(value)) {\n            if (value.finally) {\n                result = value.finally(finallyFn);\n            }\n            else {\n                result = value.then(function (value) {\n                    finallyFn();\n                    return value;\n                }, function (reason) {\n                    finallyFn();\n                    throw reason;\n                });\n            }\n        }\n        else {\n            finallyFn();\n        }\n    }\n    return result;\n}\n\nvar _debugState;\nvar _debugResult;\nvar _debugHandled;\nvar _promiseDebugEnabled = false;\nfunction _addDebugState$1(thePromise, stateFn, resultFn, handledFn) {\n    _debugState = _debugState || { toString: function () { return \"[[PromiseState]]\"; } };\n    _debugResult = _debugResult || { toString: function () { return \"[[PromiseResult]]\"; } };\n    _debugHandled = _debugHandled || { toString: function () { return \"[[PromiseIsHandled]]\"; } };\n    var props = {};\n    props[_debugState] = { get: stateFn };\n    props[_debugResult] = { get: resultFn };\n    props[_debugHandled] = { get: handledFn };\n    objDefineProperties(thePromise, props);\n}\nfunction setPromiseDebugState(enabled, logger) {\n    _promiseDebugEnabled = enabled;\n}\n\nvar STRING_STATES =  [\n    \"pending\", \"resolving\", \"resolved\", REJECTED\n];\n\nvar DISPATCH_EVENT = \"dispatchEvent\";\nvar _hasInitEvent;\nfunction _hasInitEventFn(doc) {\n    var evt;\n    if (doc && doc.createEvent) {\n        evt = doc.createEvent(\"Event\");\n    }\n    return (!!evt && evt.initEvent);\n}\nfunction emitEvent(target, evtName, populateEvent, useNewEvent) {\n    var doc = getDocument();\n    !_hasInitEvent && (_hasInitEvent = createCachedValue(!!safe(_hasInitEventFn, [doc]).v));\n    var theEvt = _hasInitEvent.v ? doc.createEvent(\"Event\") : (useNewEvent ? new Event(evtName) : {});\n    populateEvent && populateEvent(theEvt);\n    if (_hasInitEvent.v) {\n        theEvt.initEvent(evtName, false, true);\n    }\n    if (theEvt && target[DISPATCH_EVENT]) {\n        target[DISPATCH_EVENT](theEvt);\n    }\n    else {\n        var handler = target[\"on\" + evtName];\n        if (handler) {\n            handler(theEvt);\n        }\n        else {\n            var theConsole = getInst(\"console\");\n            theConsole && (theConsole[\"error\"] || theConsole[\"log\"])(evtName, dumpObj(theEvt));\n        }\n    }\n}\n\nvar NODE_UNHANDLED_REJECTION = \"unhandledRejection\";\nvar UNHANDLED_REJECTION = NODE_UNHANDLED_REJECTION.toLowerCase();\nvar _currentPromiseId = [];\nvar _uniquePromiseId = 0;\nvar _unhandledRejectionTimeout = 10;\nvar _aggregationError;\nvar _hasPromiseRejectionEvent;\nfunction dumpFnObj(value) {\n    if (isFunction(value)) {\n        return value.toString();\n    }\n    return dumpObj(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createAggregationError(values) {\n    !_aggregationError && (_aggregationError = createCachedValue(safe(getInst, [\"AggregationError\"]).v || createCustomError(\"AggregationError\", function (self, args) {\n        self.errors = args[0];\n    })));\n    return new _aggregationError.v(values);\n}\nfunction _createPromise(newPromise, processor, executor) {\n    var additionalArgs = arrSlice(arguments, 3);\n    var _state = 0 ;\n    var _hasResolved = false;\n    var _settledValue;\n    var _queue = [];\n    var _id = _uniquePromiseId++;\n    var _parentId = _currentPromiseId.length > 0 ? _currentPromiseId[_currentPromiseId.length - 1] : undefined;\n    var _handled = false;\n    var _unHandledRejectionHandler = null;\n    var _thePromise;\n    function _then(onResolved, onRejected) {\n        try {\n            _currentPromiseId.push(_id);\n            _handled = true;\n            _unHandledRejectionHandler && _unHandledRejectionHandler.cancel();\n            _unHandledRejectionHandler = null;\n            var thenPromise = newPromise(function (resolve, reject) {\n                _queue.push(function () {\n                    try {\n                        var handler = _state === 2  ? onResolved : onRejected;\n                        var value = isUndefined(handler) ? _settledValue : (isFunction(handler) ? handler(_settledValue) : handler);\n                        if (isPromiseLike(value)) {\n                            value.then(resolve, reject);\n                        }\n                        else if (handler) {\n                            resolve(value);\n                        }\n                        else if (_state === 3 ) {\n                            reject(value);\n                        }\n                        else {\n                            resolve(value);\n                        }\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                });\n                if (_hasResolved) {\n                    _processQueue();\n                }\n            }, additionalArgs);\n            return thenPromise;\n        }\n        finally {\n            _currentPromiseId.pop();\n        }\n    }\n    function _catch(onRejected) {\n        return _then(undefined, onRejected);\n    }\n    function _finally(onFinally) {\n        var thenFinally = onFinally;\n        var catchFinally = onFinally;\n        if (isFunction(onFinally)) {\n            thenFinally = function (value) {\n                onFinally && onFinally();\n                return value;\n            };\n            catchFinally = function (reason) {\n                onFinally && onFinally();\n                throw reason;\n            };\n        }\n        return _then(thenFinally, catchFinally);\n    }\n    function _strState() {\n        return STRING_STATES[_state];\n    }\n    function _processQueue() {\n        if (_queue.length > 0) {\n            var pending = _queue.slice();\n            _queue = [];\n            _handled = true;\n            _unHandledRejectionHandler && _unHandledRejectionHandler.cancel();\n            _unHandledRejectionHandler = null;\n            processor(pending);\n        }\n    }\n    function _createSettleIfFn(newState, allowState) {\n        return function (theValue) {\n            if (_state === allowState) {\n                if (newState === 2  && isPromiseLike(theValue)) {\n                    _state = 1 ;\n                    theValue.then(_createSettleIfFn(2 , 1 ), _createSettleIfFn(3 , 1 ));\n                    return;\n                }\n                _state = newState;\n                _hasResolved = true;\n                _settledValue = theValue;\n                _processQueue();\n                if (!_handled && newState === 3  && !_unHandledRejectionHandler) {\n                    _unHandledRejectionHandler = scheduleTimeout(_notifyUnhandledRejection, _unhandledRejectionTimeout);\n                }\n            }\n        };\n    }\n    function _notifyUnhandledRejection() {\n        if (!_handled) {\n            _handled = true;\n            if (isNode()) {\n                process.emit(NODE_UNHANDLED_REJECTION, _settledValue, _thePromise);\n            }\n            else {\n                var gbl = getWindow() || getGlobal();\n                !_hasPromiseRejectionEvent && (_hasPromiseRejectionEvent = createCachedValue(safe((getInst), [STR_PROMISE + \"RejectionEvent\"]).v));\n                emitEvent(gbl, UNHANDLED_REJECTION, function (theEvt) {\n                    objDefine(theEvt, \"promise\", { g: function () { return _thePromise; } });\n                    theEvt.reason = _settledValue;\n                    return theEvt;\n                }, !!_hasPromiseRejectionEvent.v);\n            }\n        }\n    }\n    _thePromise = {\n        then: _then,\n        \"catch\": _catch,\n        finally: _finally\n    };\n    objDefineProp(_thePromise, \"state\", {\n        get: _strState\n    });\n    if (_promiseDebugEnabled) {\n        _addDebugState$1(_thePromise, _strState, function () { return objToString(_settledValue); }, function () { return _handled; });\n    }\n    if (hasSymbol()) {\n        _thePromise[getKnownSymbol(11 )] = \"IPromise\";\n    }\n    function _toString() {\n        return \"IPromise\" + (_promiseDebugEnabled ? \"[\" + _id + (!isUndefined(_parentId) ? (\":\" + _parentId) : \"\") + \"]\" : \"\") + \" \" + _strState() + (_hasResolved ? (\" - \" + dumpFnObj(_settledValue)) : \"\") + (\"\");\n    }\n    _thePromise.toString = _toString;\n    (function _initialize() {\n        if (!isFunction(executor)) {\n            throwTypeError(STR_PROMISE + \": executor is not a function - \" + dumpFnObj(executor));\n        }\n        var _rejectFn = _createSettleIfFn(3 , 0 );\n        try {\n            executor.call(_thePromise, _createSettleIfFn(2 , 0 ), _rejectFn);\n        }\n        catch (e) {\n            _rejectFn(e);\n        }\n    })();\n    return _thePromise;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createAllPromise(newPromise) {\n    return function (input) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (resolve, reject) {\n            try {\n                var values_1 = [];\n                var pending_1 = 1;\n                iterForOf(input, function (item, idx) {\n                    if (item) {\n                        pending_1++;\n                        doAwait(item, function (value) {\n                            values_1[idx] = value;\n                            if (--pending_1 === 0) {\n                                resolve(values_1);\n                            }\n                        }, reject);\n                    }\n                });\n                pending_1--;\n                if (pending_1 === 0) {\n                    resolve(values_1);\n                }\n            }\n            catch (e) {\n                reject(e);\n            }\n        }, additionalArgs);\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createResolvedPromise(newPromise) {\n    return function (value) {\n        var additionalArgs = arrSlice(arguments, 1);\n        if (isPromiseLike(value)) {\n            return value;\n        }\n        return newPromise(function (resolve) {\n            resolve(value);\n        }, additionalArgs);\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createRejectedPromise(newPromise) {\n    return function (reason) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (_resolve, reject) {\n            reject(reason);\n        }, additionalArgs);\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createAllSettledPromise(newPromise) {\n    return createCachedValue(function (input) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (resolve, reject) {\n            var values = [];\n            var pending = 1;\n            function processItem(item, idx) {\n                pending++;\n                doAwaitResponse(item, function (value) {\n                    if (value.rejected) {\n                        values[idx] = {\n                            status: REJECTED,\n                            reason: value.reason\n                        };\n                    }\n                    else {\n                        values[idx] = {\n                            status: \"fulfilled\",\n                            value: value.value\n                        };\n                    }\n                    if (--pending === 0) {\n                        resolve(values);\n                    }\n                });\n            }\n            try {\n                if (isArray(input)) {\n                    arrForEach(input, processItem);\n                }\n                else if (isIterable(input)) {\n                    iterForOf(input, processItem);\n                }\n                else {\n                    throwTypeError(\"Input is not an iterable\");\n                }\n                pending--;\n                if (pending === 0) {\n                    resolve(values);\n                }\n            }\n            catch (e) {\n                reject(e);\n            }\n        }, additionalArgs);\n    });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createRacePromise(newPromise) {\n    return createCachedValue(function (input) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (resolve, reject) {\n            var isDone = false;\n            function processItem(item) {\n                doAwaitResponse(item, function (value) {\n                    if (!isDone) {\n                        isDone = true;\n                        if (value.rejected) {\n                            reject(value.reason);\n                        }\n                        else {\n                            resolve(value.value);\n                        }\n                    }\n                });\n            }\n            try {\n                if (isArray(input)) {\n                    arrForEach(input, processItem);\n                }\n                else if (isIterable(input)) {\n                    iterForOf(input, processItem);\n                }\n                else {\n                    throwTypeError(\"Input is not an iterable\");\n                }\n            }\n            catch (e) {\n                reject(e);\n            }\n        }, additionalArgs);\n    });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createAnyPromise(newPromise) {\n    return createCachedValue(function (input) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (resolve, reject) {\n            var theErros = [];\n            var pending = 1;\n            var isDone = false;\n            function processItem(item, idx) {\n                pending++;\n                doAwaitResponse(item, function (value) {\n                    if (!value.rejected) {\n                        isDone = true;\n                        resolve(value.value);\n                        return;\n                    }\n                    else {\n                        theErros[idx] = value.reason;\n                    }\n                    if (--pending === 0 && !isDone) {\n                        reject(_createAggregationError(theErros));\n                    }\n                });\n            }\n            try {\n                if (isArray(input)) {\n                    arrForEach(input, processItem);\n                }\n                else if (isIterable(input)) {\n                    iterForOf(input, processItem);\n                }\n                else {\n                    throwTypeError(\"Input is not an iterable\");\n                }\n                pending--;\n                if (pending === 0 && !isDone) {\n                    reject(_createAggregationError(theErros));\n                }\n            }\n            catch (e) {\n                reject(e);\n            }\n        }, additionalArgs);\n    });\n}\n\nfunction syncItemProcessor(pending) {\n    arrForEach(pending, function (fn) {\n        try {\n            fn();\n        }\n        catch (e) {\n        }\n    });\n}\nfunction timeoutItemProcessor(timeout) {\n    var callbackTimeout = isNumber(timeout) ? timeout : 0;\n    return function (pending) {\n        scheduleTimeout(function () {\n            syncItemProcessor(pending);\n        }, callbackTimeout);\n    };\n}\nfunction idleItemProcessor(timeout) {\n    var options;\n    if (timeout >= 0) {\n        options = {\n            timeout: +timeout\n        };\n    }\n    return function (pending) {\n        scheduleIdleCallback(function (deadline) {\n            syncItemProcessor(pending);\n        }, options);\n    };\n}\n\nvar _allAsyncSettledCreator;\nvar _raceAsyncCreator;\nvar _anyAsyncCreator;\nfunction createAsyncPromise(executor, timeout) {\n    return _createPromise(createAsyncPromise, timeoutItemProcessor(timeout), executor, timeout);\n}\nvar createAsyncAllPromise = /*#__PURE__*/ _createAllPromise(createAsyncPromise);\nvar createAsyncResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createAsyncPromise);\nvar createAsyncRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createAsyncPromise);\nfunction createAsyncAllSettledPromise(input, timeout) {\n    !_allAsyncSettledCreator && (_allAsyncSettledCreator = _createAllSettledPromise(createAsyncPromise));\n    return _allAsyncSettledCreator.v(input, timeout);\n}\nfunction createAsyncRacePromise(values, timeout) {\n    !_raceAsyncCreator && (_raceAsyncCreator = _createRacePromise(createAsyncPromise));\n    return _raceAsyncCreator.v(values, timeout);\n}\nfunction createAsyncAnyPromise(values, timeout) {\n    !_anyAsyncCreator && (_anyAsyncCreator = _createAnyPromise(createAsyncPromise));\n    return _anyAsyncCreator.v(values, timeout);\n}\n\nvar _promiseCls;\nvar _allCreator;\nvar _allNativeSettledCreator;\nvar _raceNativeCreator;\nvar _anyNativeCreator;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createNativePromiseHelper(name, func) {\n    !_promiseCls && (_promiseCls = createCachedValue((safe(getInst, [STR_PROMISE]).v) || null));\n    if (_promiseCls.v && _promiseCls.v[name]) {\n        return createCachedValue(function (input, timeout) {\n            return createNativePromise(function (resolve, reject) {\n                _promiseCls.v[name](input).then(resolve, reject);\n            });\n        });\n    }\n    return func();\n}\nfunction createNativePromise(executor, timeout) {\n    !_promiseCls && (_promiseCls = createCachedValue((safe(getInst, [STR_PROMISE]).v) || null));\n    var PrmCls = _promiseCls.v;\n    if (!PrmCls) {\n        return createAsyncPromise(executor);\n    }\n    if (!isFunction(executor)) {\n        throwTypeError(STR_PROMISE + \": executor is not a function - \" + dumpObj(executor));\n    }\n    var _state = 0 ;\n    function _strState() {\n        return STRING_STATES[_state];\n    }\n    var thePromise = new PrmCls(function (resolve, reject) {\n        function _resolve(value) {\n            _state = 2 ;\n            resolve(value);\n        }\n        function _reject(reason) {\n            _state = 3 ;\n            reject(reason);\n        }\n        executor(_resolve, _reject);\n    });\n    objDefineProp(thePromise, \"state\", {\n        get: _strState\n    });\n    return thePromise;\n}\nfunction createNativeAllPromise(input, timeout) {\n    !_allCreator && (_allCreator = _createNativePromiseHelper(\"all\", function () { return createCachedValue(_createAllPromise(createNativePromise)); }));\n    return _allCreator.v(input, timeout);\n}\nvar createNativeResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createNativePromise);\nvar createNativeRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createNativePromise);\nfunction createNativeAllSettledPromise(input, timeout) {\n    !_allNativeSettledCreator && (_allNativeSettledCreator = _createNativePromiseHelper(\"allSettled\", function () { return _createAllSettledPromise(createNativePromise); }));\n    return _allNativeSettledCreator.v(input, timeout);\n}\nfunction createNativeRacePromise(values, timeout) {\n    !_raceNativeCreator && (_raceNativeCreator = _createNativePromiseHelper(\"race\", function () { return _createRacePromise(createNativePromise); }));\n    return _raceNativeCreator.v(values, timeout);\n}\nfunction createNativeAnyPromise(values, timeout) {\n    !_anyNativeCreator && (_anyNativeCreator = _createNativePromiseHelper(\"any\", function () { return _createAnyPromise(createNativePromise); }));\n    return _anyNativeCreator.v(values, timeout);\n}\n\nvar _allSyncSettledCreator;\nvar _raceSyncCreator;\nvar _anySyncCreator;\nfunction createSyncPromise(executor) {\n    return _createPromise(createSyncPromise, syncItemProcessor, executor);\n}\nvar createSyncAllPromise = /*#__PURE__*/ _createAllPromise(createSyncPromise);\nvar createSyncResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createSyncPromise);\nvar createSyncRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createSyncPromise);\nfunction createSyncAllSettledPromise(input, timeout) {\n    !_allSyncSettledCreator && (_allSyncSettledCreator = _createAllSettledPromise(createSyncPromise));\n    return _allSyncSettledCreator.v(input, timeout);\n}\nfunction createSyncRacePromise(values, timeout) {\n    !_raceSyncCreator && (_raceSyncCreator = _createRacePromise(createSyncPromise));\n    return _raceSyncCreator.v(values, timeout);\n}\nfunction createSyncAnyPromise(values, timeout) {\n    !_anySyncCreator && (_anySyncCreator = _createAnyPromise(createSyncPromise));\n    return _anySyncCreator.v(values, timeout);\n}\n\nvar _defaultIdleTimeout;\nvar _allIdleSettledCreator;\nvar _raceIdleCreator;\nvar _anyIdleCreator;\nfunction setDefaultIdlePromiseTimeout(idleDeadline) {\n    _defaultIdleTimeout = idleDeadline;\n}\nvar setDefaultIdleTimeout = ( setDefaultIdlePromiseTimeout);\nfunction createIdlePromise(executor, timeout) {\n    var theTimeout = isUndefined(timeout) ? _defaultIdleTimeout : timeout;\n    return _createPromise(createIdlePromise, idleItemProcessor(theTimeout), executor, theTimeout);\n}\nvar createIdleAllPromise = /*#__PURE__*/ _createAllPromise(createIdlePromise);\nvar createIdleResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createIdlePromise);\nvar createIdleRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createIdlePromise);\nfunction createIdleAllSettledPromise(input, timeout) {\n    !_allIdleSettledCreator && (_allIdleSettledCreator = _createAllSettledPromise(createIdlePromise));\n    return _allIdleSettledCreator.v(input, timeout);\n}\nfunction createIdleRacePromise(values, timeout) {\n    !_raceIdleCreator && (_raceIdleCreator = _createRacePromise(createIdlePromise));\n    return _raceIdleCreator.v(values, timeout);\n}\nfunction createIdleAnyPromise(values, timeout) {\n    !_anyIdleCreator && (_anyIdleCreator = _createAnyPromise(createIdlePromise));\n    return _anyIdleCreator.v(values, timeout);\n}\n\nvar _promiseCreator;\nvar _allSettledCreator;\nvar _raceCreator;\nvar _anyCreator;\nfunction setCreatePromiseImpl(creator) {\n    _promiseCreator = creator ? createCachedValue(creator) : null;\n}\nfunction createPromise(executor, timeout) {\n    !_promiseCreator && (_promiseCreator = createCachedValue(createNativePromise));\n    return _promiseCreator.v.call(this, executor, timeout);\n}\nvar createAllPromise = /*#__PURE__*/ _createAllPromise(createPromise);\nvar createResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createPromise);\nvar createRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createPromise);\nfunction createAllSettledPromise(input, timeout) {\n    !_allSettledCreator && (_allSettledCreator = _createAllSettledPromise(createPromise));\n    return _allSettledCreator.v(input, timeout);\n}\nfunction createRacePromise(values, timeout) {\n    !_raceCreator && (_raceCreator = _createRacePromise(createPromise));\n    return _raceCreator.v(values, timeout);\n}\nfunction createAnyPromise(values, timeout) {\n    !_anyCreator && (_anyCreator = _createAnyPromise(createPromise));\n    return _anyCreator.v(values, timeout);\n}\n\nfunction createTimeoutPromise(timeout, resolveReject, message) {\n    return createPromise(function (resolve, reject) {\n        scheduleTimeout(function () {\n            (resolveReject ? resolve : reject)(!isUndefined(message) ? message : \"Timeout of \" + timeout + \"ms exceeded\");\n        }, timeout);\n    });\n}\n\nfunction _doneChk(isDone, state, value, thisArg) {\n    var result = isDone;\n    state.res = value;\n    if (!result) {\n        if (state.isDone && isFunction(state.isDone)) {\n            return doAwait(state.isDone.call(thisArg, state), function (done) {\n                state.iter++;\n                return !!done;\n            });\n        }\n        else {\n            result = !!state.isDone;\n        }\n    }\n    state.iter++;\n    return result;\n}\nfunction doWhileAsync(callbackFn, isDoneFn, thisArg) {\n    var promise;\n    var resolve;\n    var reject = function (reason) {\n        isDone = true;\n        throw reason;\n    };\n    var isDone = false;\n    var state = {\n        st: utcNow(),\n        iter: 0,\n        isDone: isDoneFn || false\n    };\n    if (callbackFn) {\n        var _createPromise_1 = function () {\n            return createPromise(function (res, rej) {\n                resolve = res;\n                reject = rej;\n            });\n        };\n        var _handleAsyncDone_1 = function (done) {\n            isDone = !!done;\n            if (!isDone) {\n                _processNext_1();\n            }\n            else {\n                resolve(state.res);\n            }\n        };\n        var _processNext_1 = function () {\n            while (!isDone) {\n                try {\n                    var cbResult = callbackFn.call(thisArg, state);\n                    if (isPromiseLike(cbResult)) {\n                        promise = promise || _createPromise_1();\n                        doAwait(cbResult, function (res) {\n                            try {\n                                doAwait(_doneChk(isDone, state, res, thisArg), _handleAsyncDone_1, reject);\n                            }\n                            catch (e) {\n                                reject(e);\n                            }\n                        }, reject);\n                        return promise;\n                    }\n                    else {\n                        var dnRes = _doneChk(isDone, state, cbResult, thisArg);\n                        if (isPromiseLike(dnRes)) {\n                            promise = promise || _createPromise_1();\n                            doAwait(dnRes, _handleAsyncDone_1, reject);\n                            return promise;\n                        }\n                        else {\n                            isDone = !!dnRes;\n                        }\n                    }\n                }\n                catch (e) {\n                    reject(e);\n                    return promise;\n                }\n            }\n            if (isDone && resolve) {\n                resolve(state.res);\n            }\n            return promise || state.res;\n        };\n        return _processNext_1();\n    }\n}\n\nfunction arrForEachAsync(theArray, callbackFn, thisArg) {\n    if (theArray) {\n        var len_1 = getLength(theArray);\n        if (len_1) {\n            var isDone = function (state) {\n                if (state.iter >= len_1 || state.res === -1) {\n                    return true;\n                }\n            };\n            return doWhileAsync(function (state) {\n                var idx = state.iter;\n                if (idx in theArray) {\n                    return callbackFn.call(thisArg || theArray, theArray[idx], idx, theArray);\n                }\n            }, isDone);\n        }\n    }\n}\n\nvar _iterSymbol;\nvar _iterAsyncSymbol;\nfunction iterForOfAsync(iter, callbackFn, thisArg) {\n    var err;\n    var iterResult;\n    var theIter = iter;\n    function onFailed(failed) {\n        err = { e: failed };\n        if (theIter.throw) {\n            iterResult = null;\n            theIter.throw(err);\n        }\n        throw failed;\n    }\n    function onFinally() {\n        try {\n            if (iterResult && !iterResult[DONE]) {\n                theIter[RETURN] && theIter[RETURN](iterResult);\n            }\n        }\n        finally {\n            if (err) {\n                throw err.e;\n            }\n        }\n    }\n    if (iter) {\n        if (!isIterator(iter)) {\n            !_iterAsyncSymbol && (_iterAsyncSymbol = createCachedValue(getKnownSymbol(0 )));\n            theIter = iter[_iterAsyncSymbol.v] ? iter[_iterAsyncSymbol.v]() : null;\n            if (!theIter) {\n                !_iterSymbol && (_iterSymbol = createCachedValue(getKnownSymbol(3 )));\n                theIter = iter[_iterSymbol.v] ? iter[_iterSymbol.v]() : null;\n            }\n        }\n        if (theIter && isIterator(theIter)) {\n            var result = void 0;\n            try {\n                result = doWhileAsync(function (state) {\n                    return doAwait(theIter.next(), function (res) {\n                        iterResult = res;\n                        if (!res[DONE]) {\n                            return fnCall(callbackFn, thisArg || theIter, iterResult[VALUE], state.iter, theIter);\n                        }\n                    }, function (reason) {\n                        state.isDone = true;\n                        onFailed(reason);\n                    });\n                }, function (state) {\n                    if (!iterResult || iterResult[DONE] || state.res === -1) {\n                        onFinally();\n                        return true;\n                    }\n                }, thisArg || theIter);\n                if (isPromiseLike(result)) {\n                    result = doFinally(result.catch(onFailed), onFinally);\n                }\n                return result;\n            }\n            catch (failed) {\n                onFailed(failed);\n            }\n            finally {\n                if (result && !isPromiseLike(result)) {\n                    onFinally();\n                }\n            }\n        }\n    }\n}\n\nvar REJECT = \"reject\";\nvar REJECTED_ERROR = \"Rejected\";\nvar _schedulerId = 0;\nvar _debugName;\nvar _debugIntState;\nvar _customErrors = {};\nfunction _rejectDone() {\n}\nfunction _createError(type, evt, message) {\n    !_customErrors[type] && (_customErrors[type] = createCustomError(type));\n    var now = utcNow();\n    return new (_customErrors[type])(\"Task [\".concat(evt.id, \"] \").concat(message || \"\", \"- \").concat((evt.st ? \"Running\" : \"Waiting\"), \": \").concat(_calcTime(now, evt.st || evt.cr)));\n}\nfunction _calcTime(now, start) {\n    return ((now - start) || \"0\") + \" ms\";\n}\nfunction _abortStaleTasks(taskQueue, staleTimeoutPeriod) {\n    var now = utcNow();\n    var expired = now - staleTimeoutPeriod;\n    arrForEach(taskQueue, function (evt) {\n        if (evt && !evt.rj && (evt.st && evt.st < expired) || (!evt.st && evt.cr && evt.cr < expired)) {\n            evt && evt[REJECT](evt.rj || _createError(\"Aborted\", evt, \"Stale \"));\n        }\n    });\n}\nfunction _removeTask(queue, taskDetail) {\n    var idx = arrIndexOf(queue, taskDetail);\n    if (idx !== -1) {\n        queue.splice(idx, 1);\n    }\n}\nfunction _addDebugState(theScheduler, nameFn, stateFn) {\n    _debugName = _debugName || { toString: function () { return \"[[SchedulerName]]\"; } };\n    _debugIntState = _debugIntState || { toString: function () { return \"[[SchedulerState]]\"; } };\n    objDefineProp(theScheduler, _debugName, { get: nameFn });\n    objDefineProp(theScheduler, _debugIntState, { get: stateFn });\n}\nfunction createTaskScheduler(newPromise, name) {\n    var _theTask;\n    var _running = [];\n    var _waiting = [];\n    var _staleTimeoutPeriod = 600000;\n    var _staleTimeoutCheckPeriod = _staleTimeoutPeriod / 10;\n    var _taskCount = 0;\n    var _schedulerName = (name ? (name + \".\") : \"\") + _schedulerId++;\n    var _blockedTimer;\n    newPromise = newPromise || createPromise;\n    var _startBlockedTimer = function () {\n        var hasTasks = (getLength(_running) + getLength(_waiting)) > 0;\n        if (_staleTimeoutPeriod > 0) {\n            if (!_blockedTimer) {\n                _blockedTimer = scheduleTimeout(function () {\n                    _abortStaleTasks(_running, _staleTimeoutPeriod);\n                    _abortStaleTasks(_waiting, _staleTimeoutPeriod);\n                    _blockedTimer && (_blockedTimer.enabled = ((getLength(_running) + getLength(_waiting)) > 0));\n                }, _staleTimeoutCheckPeriod);\n                _blockedTimer.unref();\n            }\n            _blockedTimer && (_blockedTimer.enabled = hasTasks);\n        }\n    };\n    var _queueTask = function (startAction, taskName, timeout) {\n        var _a;\n        var taskId = _schedulerName + \".\" + _taskCount++;\n        if (taskName) {\n            taskId += \"-(\" + taskName + \")\";\n        }\n        var newTask = (_a = {\n                id: taskId,\n                cr: utcNow(),\n                to: timeout\n            },\n            _a[REJECT] = function (reason) {\n                newTask.rj = reason || _createError(REJECTED_ERROR, newTask);\n                newTask[REJECT] = _rejectDone;\n            },\n            _a);\n        if (!_theTask) {\n            newTask.p = newPromise(_runTask(newTask, startAction));\n        }\n        else {\n            newTask.p = _waitForPreviousTask(newTask, _theTask, startAction);\n        }\n        _theTask = newTask;\n        return newTask.p;\n    };\n    var _runTask = function (taskDetail, startAction) {\n        taskDetail.st = utcNow();\n        _running.push(taskDetail);\n        _startBlockedTimer();\n        return function (onTaskResolve, onTaskReject) {\n            var _promiseReject = function (reason) {\n                taskDetail.rj = taskDetail.rj || reason || _createError(REJECTED_ERROR, taskDetail);\n                taskDetail[REJECT] = _rejectDone;\n                _doCleanup(taskDetail);\n                onTaskResolve = null;\n                onTaskReject && onTaskReject(reason);\n                onTaskReject = null;\n            };\n            var taskId = taskDetail.id;\n            if (taskDetail.rj) {\n                _promiseReject(taskDetail.rj);\n            }\n            else {\n                taskDetail[REJECT] = _promiseReject;\n                try {\n                    var startResult = startAction(taskId);\n                    if (taskDetail.to && isPromiseLike(startResult)) {\n                        taskDetail.t = scheduleTimeout(function () {\n                            _promiseReject(_createError(\"Timeout\", taskDetail));\n                        }, taskDetail.to);\n                    }\n                    doAwait(startResult, function (theResult) {\n                        _doCleanup(taskDetail);\n                        try {\n                            onTaskResolve && onTaskResolve(theResult);\n                        }\n                        catch (e) {\n                            onTaskReject && onTaskReject(e);\n                        }\n                        onTaskReject = null;\n                        onTaskResolve = null;\n                    }, _promiseReject);\n                }\n                catch (e) {\n                    _promiseReject(e);\n                }\n            }\n        };\n    };\n    var _waitForPreviousTask = function (taskDetail, prevTask, startAction) {\n        _waiting.push(taskDetail);\n        _startBlockedTimer();\n        return newPromise(function (onWaitResolve, onWaitReject) {\n            doAwaitResponse(prevTask.p, function () {\n                _removeTask(_waiting, taskDetail);\n                _runTask(taskDetail, startAction)(onWaitResolve, onWaitReject);\n            });\n        });\n    };\n    var _doCleanup = function (taskDetail) {\n        _removeTask(_running, taskDetail);\n        taskDetail.t && taskDetail.t.cancel();\n        taskDetail.t = null;\n        if (_theTask && _theTask === taskDetail) {\n            _theTask = null;\n            if (getLength(_running) + getLength(_waiting) === 0) {\n                _blockedTimer && _blockedTimer.cancel();\n                _blockedTimer = null;\n            }\n        }\n    };\n    var theScheduler = {\n        idle: true,\n        queue: _queueTask,\n        setStaleTimeout: function (staleTimeout, staleCheckPeriod) {\n            _blockedTimer && _blockedTimer.cancel();\n            _blockedTimer = null;\n            _staleTimeoutPeriod = staleTimeout;\n            _staleTimeoutCheckPeriod = staleCheckPeriod || staleTimeout / 10;\n            _startBlockedTimer();\n        }\n    };\n    objDefine(theScheduler, \"idle\", {\n        g: function () {\n            return getLength(_running) + getLength(_waiting) === 0;\n        }\n    });\n    _addDebugState(theScheduler, function () { return _schedulerName; }, function () {\n        return {\n            l: _theTask,\n            r: _running,\n            w: _waiting\n        };\n    });\n    return theScheduler;\n}\n\nvar toStringTagSymbol = getKnownSymbol(11 );\nvar PolyPromise = /*#__PURE__*/ (function () {\n    function PolyPromiseImpl(executor) {\n        this._$ = createAsyncPromise(executor);\n        if (toStringTagSymbol) {\n            this[toStringTagSymbol] = \"Promise\";\n        }\n        objDefineProp(this, \"state\", {\n            get: function () {\n                return this._$.state;\n            }\n        });\n    }\n    PolyPromiseImpl.all = createAsyncAllPromise;\n    PolyPromiseImpl.race = createAsyncRacePromise;\n    PolyPromiseImpl.any = createAsyncAnyPromise;\n    PolyPromiseImpl.reject = createAsyncRejectedPromise;\n    PolyPromiseImpl.resolve = createAsyncResolvedPromise;\n    PolyPromiseImpl.allSettled = createAsyncAllSettledPromise;\n    var theProto = PolyPromiseImpl.prototype;\n    theProto.then = function (onResolved, onRejected) {\n        return this._$.then(onResolved, onRejected);\n    };\n    theProto.catch = function (onRejected) {\n        return this._$.catch(onRejected);\n    };\n    theProto.finally = function (onfinally) {\n        return this._$.finally(onfinally);\n    };\n    return PolyPromiseImpl;\n}());\n\nexport { PolyPromise, arrForEachAsync, createAllPromise, createAllSettledPromise, createAnyPromise, createAsyncAllPromise, createAsyncAllSettledPromise, createAsyncAnyPromise, createAsyncPromise, createAsyncRacePromise, createAsyncRejectedPromise, createAsyncResolvedPromise, createIdleAllPromise, createIdleAllSettledPromise, createIdleAnyPromise, createIdlePromise, createIdleRacePromise, createIdleRejectedPromise, createIdleResolvedPromise, createNativeAllPromise, createNativeAllSettledPromise, createNativeAnyPromise, createNativePromise, createNativeRacePromise, createNativeRejectedPromise, createNativeResolvedPromise, createPromise, createRacePromise, createRejectedPromise, createResolvedPromise, createSyncAllPromise, createSyncAllSettledPromise, createSyncAnyPromise, createSyncPromise, createSyncRacePromise, createSyncRejectedPromise, createSyncResolvedPromise, createTaskScheduler, createTimeoutPromise, doAwait, doAwaitResponse, doFinally, doWhileAsync, iterForOfAsync, setCreatePromiseImpl, setDefaultIdlePromiseTimeout, setDefaultIdleTimeout, setPromiseDebugState };\n//# sourceMappingURL=ts-async.js.map\n","/*! https://github.com/nevware21/ts-utils v0.11.4 */\n/*\n * Copyright (c) NevWare21 Solutions LLC and contributors. All rights reserved.\n * Licensed under the MIT license.\n */\n/*#__NO_SIDE_EFFECTS__*/\nfunction _pureAssign(func1, func2) {\n    return func1 || func2;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _pureRef(value, name) {\n    return value[name];\n}\n\nvar UNDEF_VALUE = undefined;\nvar NULL_VALUE = null;\nvar EMPTY = \"\";\nvar FUNCTION = \"function\";\nvar OBJECT = \"object\";\nvar PROTOTYPE = \"prototype\";\nvar __PROTO__ = \"__proto__\";\nvar UNDEFINED = \"undefined\";\nvar CONSTRUCTOR = \"constructor\";\nvar SYMBOL = \"Symbol\";\nvar POLYFILL_TAG = \"_polyfill\";\nvar LENGTH = \"length\";\nvar NAME = \"name\";\nvar CALL = \"call\";\nvar TO_STRING = \"toString\";\nvar ObjClass = ( /*#__PURE__*/_pureAssign(Object));\nvar ObjProto = ( /*#__PURE__*/_pureRef(ObjClass, PROTOTYPE));\nvar StrCls = ( /*#__PURE__*/_pureAssign(String));\nvar StrProto = ( /*#__PURE__*/_pureRef(StrCls, PROTOTYPE));\nvar MathCls = ( /*#__PURE__*/_pureAssign(Math));\nvar ArrCls = ( /*#__PURE__*/_pureAssign(Array));\nvar ArrProto = ( /*#__PURE__*/_pureRef(ArrCls, PROTOTYPE));\nvar ArrSlice = ( /*#__PURE__*/_pureRef(ArrProto, \"slice\"));\n\nfunction safe(func, argArray) {\n    try {\n        return {\n            v: func.apply(this, argArray)\n        };\n    }\n    catch (e) {\n        return { e: e };\n    }\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction safeGet(cb, defValue) {\n    var result = safe(cb);\n    return result.e ? defValue : result.v;\n}\n\nvar _primitiveTypes;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createIs(theType) {\n    return function (value) {\n        return typeof value === theType;\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createObjIs(theName) {\n    var theType = \"[object \" + theName + \"]\";\n    return function (value) {\n        return !!(value && objToString(value) === theType);\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction objToString(value) {\n    return ObjProto[TO_STRING].call(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isTypeof(value, theType) {\n    return typeof value === theType;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isUndefined(value) {\n    return typeof value === UNDEFINED || value === UNDEFINED;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isStrictUndefined(arg) {\n    return !isDefined(arg);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isNullOrUndefined(value) {\n    return value === NULL_VALUE || isUndefined(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isStrictNullOrUndefined(value) {\n    return value === NULL_VALUE || !isDefined(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isDefined(arg) {\n    return !!arg || arg !== UNDEF_VALUE;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPrimitive(value) {\n    return value === NULL_VALUE || isPrimitiveType(typeof value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPrimitiveType(theType) {\n    !_primitiveTypes && (_primitiveTypes = [\"string\", \"number\", \"boolean\", UNDEFINED, \"symbol\", \"bigint\"]);\n    return !!(theType !== OBJECT && _primitiveTypes.indexOf(theType) !== -1);\n}\nvar isString = ( /*#__PURE__*/_createIs(\"string\"));\nvar isFunction = ( /*#__PURE__*/_createIs(FUNCTION));\n/*#__NO_SIDE_EFFECTS__*/\nfunction isObject(value) {\n    if (!value && isNullOrUndefined(value)) {\n        return false;\n    }\n    return !!value && typeof value === OBJECT;\n}\nvar isArray = ( /* #__PURE__*/_pureRef(ArrCls, \"isArray\"));\nvar isDate = ( /*#__PURE__*/_createObjIs(\"Date\"));\nvar isNumber = ( /*#__PURE__*/_createIs(\"number\"));\nvar isBoolean = ( /*#__PURE__*/_createIs(\"boolean\"));\nvar isRegExp = ( /*#__PURE__*/_createObjIs(\"RegExp\"));\nvar isFile = ( /*#__PURE__*/_createObjIs(\"File\"));\nvar isFormData = ( /*#__PURE__*/_createObjIs(\"FormData\"));\nvar isBlob = ( /*#__PURE__*/_createObjIs(\"Blob\"));\nvar isArrayBuffer = ( /*#__PURE__*/_createObjIs(\"ArrayBuffer\"));\nvar isError = ( /*#__PURE__*/_createObjIs(\"Error\"));\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPromiseLike(value) {\n    return !!(value && value.then && isFunction(value.then));\n}\nvar isThenable = isPromiseLike;\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPromise(value) {\n    return !!(value && value.then && value.catch && isFunction(value.then) && isFunction(value.catch));\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isNotTruthy(value) {\n    return !value || !isTruthy(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isTruthy(value) {\n    return !(!value || safeGet(function () { return !(value && (0 + value)); }, !value));\n}\n\nvar objGetOwnPropertyDescriptor = ( /* #__PURE__ */_pureRef(ObjClass, \"getOwnPropertyDescriptor\"));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction objHasOwnProperty(obj, prop) {\n    return !!obj && ObjProto.hasOwnProperty[CALL](obj, prop);\n}\n\nvar objHasOwn = ( /*#__PURE__*/_pureAssign(( /* #__PURE__ */_pureRef(ObjClass, \"hasOwn\")), polyObjHasOwn));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjHasOwn(obj, prop) {\n    return objHasOwnProperty(obj, prop) || !!objGetOwnPropertyDescriptor(obj, prop);\n}\n\nfunction objForEachKey(theObject, callbackfn, thisArg) {\n    if (theObject && isObject(theObject)) {\n        for (var prop in theObject) {\n            if (objHasOwn(theObject, prop)) {\n                if (callbackfn[CALL](thisArg || theObject, prop, theObject[prop]) === -1) {\n                    break;\n                }\n            }\n        }\n    }\n}\n\nvar propMap = {\n    e: \"enumerable\",\n    c: \"configurable\",\n    v: \"value\",\n    w: \"writable\",\n    g: \"get\",\n    s: \"set\"\n};\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createProp(value) {\n    var prop = {};\n    prop[propMap[\"c\"]] = true;\n    prop[propMap[\"e\"]] = true;\n    if (value.l) {\n        prop.get = function () { return value.l.v; };\n        var desc = objGetOwnPropertyDescriptor(value.l, \"v\");\n        if (desc && desc.set) {\n            prop.set = function (newValue) {\n                value.l.v = newValue;\n            };\n        }\n    }\n    objForEachKey(value, function (key, value) {\n        prop[propMap[key]] = isStrictUndefined(value) ? prop[propMap[key]] : value;\n    });\n    return prop;\n}\nvar objDefineProp = ( /*#__PURE__*/_pureRef(ObjClass, \"defineProperty\"));\nvar objDefineProperties = ( /*#__PURE__*/_pureRef(ObjClass, \"defineProperties\"));\nfunction objDefineGet(target, key, value, configurable, enumerable) {\n    var _a;\n    return objDefineProp(target, key, _createProp((_a = {\n            e: enumerable,\n            c: configurable\n        },\n        _a[isFunction(value) ? \"g\" : \"v\"] = value,\n        _a)));\n}\nfunction objDefineAccessors(target, prop, getProp, setProp, configurable, enumerable) {\n    var desc = {\n        e: enumerable,\n        c: configurable\n    };\n    if (getProp) {\n        desc.g = getProp;\n    }\n    if (setProp) {\n        desc.s = setProp;\n    }\n    return objDefineProp(target, prop, _createProp(desc));\n}\nfunction objDefine(target, key, propDesc) {\n    return objDefineProp(target, key, _createProp(propDesc));\n}\nfunction objDefineProps(target, propDescMap) {\n    var props = {};\n    objForEachKey(propDescMap, function (key, value) {\n        props[key] = _createProp(value);\n    });\n    return objDefineProperties(target, props);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createKeyValueMap(values, keyType, valueType, completeFn, writable) {\n    var theMap = {};\n    objForEachKey(values, function (key, value) {\n        _assignMapValue(theMap, key, keyType ? value : key, writable);\n        _assignMapValue(theMap, value, valueType ? value : key, writable);\n    });\n    return completeFn ? completeFn(theMap) : theMap;\n}\nfunction _assignMapValue(theMap, key, value, writable) {\n    objDefineProp(theMap, key, {\n        value: value,\n        enumerable: true,\n        writable: !!writable\n    });\n}\n\nvar asString = ( /* #__PURE__ */_pureAssign(StrCls));\n\nvar ERROR_TYPE = \"[object Error]\";\n/*#__NO_SIDE_EFFECTS__*/\nfunction dumpObj(object, format) {\n    var propertyValueDump = EMPTY;\n    var objType = ObjProto[TO_STRING][CALL](object);\n    if (objType === ERROR_TYPE) {\n        object = { stack: asString(object.stack), message: asString(object.message), name: asString(object.name) };\n    }\n    try {\n        propertyValueDump = JSON.stringify(object, NULL_VALUE, format ? ((typeof format === \"number\") ? format : 4) : UNDEF_VALUE);\n        propertyValueDump = (propertyValueDump ? propertyValueDump.replace(/\"(\\w+)\"\\s*:\\s{0,1}/g, \"$1: \") : NULL_VALUE) || asString(object);\n    }\n    catch (e) {\n        propertyValueDump = \" - \" + dumpObj(e, format);\n    }\n    return objType + \": \" + propertyValueDump;\n}\n\nfunction throwError(message) {\n    throw new Error(message);\n}\nfunction throwTypeError(message) {\n    throw new TypeError(message);\n}\nfunction throwRangeError(message) {\n    throw new RangeError(message);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjKeys(obj) {\n    if (!isObject(obj) || obj === NULL_VALUE) {\n        throwTypeError(\"non-object \" + dumpObj(obj));\n    }\n    var result = [];\n    for (var prop in obj) {\n        if (objHasOwn(obj, prop)) {\n            result.push(prop);\n        }\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjEntries(value) {\n    var result = [];\n    objForEachKey(value, function (key, value) {\n        result.push([key, value]);\n    });\n    return result;\n}\n\nvar _objFreeze = ( /* #__PURE__ */_pureRef(ObjClass, \"freeze\"));\nfunction _doNothing(value) {\n    return value;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getProto(value) {\n    return value[__PROTO__] || NULL_VALUE;\n}\nvar objAssign = ( /*#__PURE__*/_pureRef(ObjClass, \"assign\"));\nvar objKeys = ( /*#__PURE__*/_pureRef(ObjClass, \"keys\"));\nfunction objDeepFreeze(value) {\n    if (_objFreeze) {\n        objForEachKey(value, function (key, value) {\n            if (isArray(value) || isObject(value)) {\n                objDeepFreeze(value);\n            }\n        });\n    }\n    return objFreeze(value);\n}\nvar objFreeze = ( /* #__PURE__*/_pureAssign(_objFreeze, _doNothing));\nvar objSeal = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"seal\")), _doNothing));\nvar objGetPrototypeOf = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"getPrototypeOf\")), _getProto));\nvar objEntries = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"entries\")), polyObjEntries));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createEnum(values) {\n    return _createKeyValueMap(values, 1 , 0 , objFreeze);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createEnumKeyMap(values) {\n    return _createKeyValueMap(values, 0 , 0 , objFreeze);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createEnumValueMap(values) {\n    return _createKeyValueMap(values, 1 , 1 , objFreeze);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createSimpleMap(values) {\n    var mapClass = {};\n    objForEachKey(values, function (key, value) {\n        _assignMapValue(mapClass, key, value[1]);\n        _assignMapValue(mapClass, value[0], value[1]);\n    });\n    return objFreeze(mapClass);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createTypeMap(values) {\n    return createSimpleMap(values);\n}\n\nvar _wellKnownSymbolMap = /*#__PURE__*/ createEnumKeyMap({\n    asyncIterator: 0 ,\n    hasInstance: 1 ,\n    isConcatSpreadable: 2 ,\n    iterator: 3 ,\n    match: 4 ,\n    matchAll: 5 ,\n    replace: 6 ,\n    search: 7 ,\n    species: 8 ,\n    split: 9 ,\n    toPrimitive: 10 ,\n    toStringTag: 11 ,\n    unscopables: 12\n});\n\nvar GLOBAL_CONFIG_KEY = \"__tsUtils$gblCfg\";\nvar _globalCfg;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getGlobalValue() {\n    var result;\n    if (typeof globalThis !== UNDEFINED) {\n        result = globalThis;\n    }\n    if (!result && typeof self !== UNDEFINED) {\n        result = self;\n    }\n    if (!result && typeof window !== UNDEFINED) {\n        result = window;\n    }\n    if (!result && typeof global !== UNDEFINED) {\n        result = global;\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getGlobalConfig() {\n    if (!_globalCfg) {\n        var gbl = safe(_getGlobalValue).v || {};\n        _globalCfg = gbl[GLOBAL_CONFIG_KEY] = gbl[GLOBAL_CONFIG_KEY] || {};\n    }\n    return _globalCfg;\n}\n\nvar _unwrapFunction = ( _unwrapFunctionWithPoly);\n/*#__NO_SIDE_EFFECTS__*/\nfunction _unwrapFunctionWithPoly(funcName, clsProto, polyFunc) {\n    var clsFn = clsProto ? clsProto[funcName] : NULL_VALUE;\n    return function (thisArg) {\n        var theFunc = (thisArg ? thisArg[funcName] : NULL_VALUE) || clsFn;\n        if (theFunc || polyFunc) {\n            var theArgs = arguments;\n            return (theFunc || polyFunc).apply(thisArg, theFunc ? ArrSlice[CALL](theArgs, 1) : theArgs);\n        }\n        throwTypeError(\"\\\"\" + asString(funcName) + \"\\\" not defined for \" + dumpObj(thisArg));\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _unwrapProp(propName) {\n    return function (thisArg) {\n        return thisArg[propName];\n    };\n}\n\nvar mathMin = ( /*#__PURE__*/_pureRef(MathCls, \"min\"));\nvar mathMax = ( /*#__PURE__*/_pureRef(MathCls, \"max\"));\n\nvar strSlice = ( /*#__PURE__*/_unwrapFunction(\"slice\", StrProto));\n\nvar strSubstring = ( /*#__PURE__*/_unwrapFunction(\"substring\", StrProto));\nvar strSubstr = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"substr\", StrProto, polyStrSubstr));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrSubstr(value, start, length) {\n    if (isNullOrUndefined(value)) {\n        throwTypeError(\"Invalid \" + dumpObj(value));\n    }\n    if (length < 0) {\n        return EMPTY;\n    }\n    start = start || 0;\n    if (start < 0) {\n        start = mathMax(start + value[LENGTH], 0);\n    }\n    if (isUndefined(length)) {\n        return strSlice(value, start);\n    }\n    return strSlice(value, start, start + length);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strLeft(value, count) {\n    return strSubstring(value, 0, count);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strRight(value, count) {\n    return count <= 0 ? EMPTY : (value[LENGTH] > count ? strSlice(value, -count) : value);\n}\n\nvar UNIQUE_REGISTRY_ID = \"_urid\";\nvar _polySymbols;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _globalSymbolRegistry() {\n    if (!_polySymbols) {\n        var gblCfg = _getGlobalConfig();\n        _polySymbols = gblCfg.gblSym = gblCfg.gblSym || { k: {}, s: {} };\n    }\n    return _polySymbols;\n}\nvar _wellKnownSymbolCache;\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyNewSymbol(description) {\n    var theSymbol = {\n        description: asString(description),\n        toString: function () { return SYMBOL + \"(\" + description + \")\"; }\n    };\n    theSymbol[POLYFILL_TAG] = true;\n    return theSymbol;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polySymbolFor(key) {\n    var registry = _globalSymbolRegistry();\n    if (!objHasOwn(registry.k, key)) {\n        var newSymbol_1 = polyNewSymbol(key);\n        var regId_1 = objKeys(registry.s).length;\n        newSymbol_1[UNIQUE_REGISTRY_ID] = function () { return regId_1 + \"_\" + newSymbol_1[TO_STRING](); };\n        registry.k[key] = newSymbol_1;\n        registry.s[newSymbol_1[UNIQUE_REGISTRY_ID]()] = asString(key);\n    }\n    return registry.k[key];\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polySymbolKeyFor(sym) {\n    if (!sym || !sym[TO_STRING] || strSubstring(sym[TO_STRING](), 0, 6) != SYMBOL) {\n        throwTypeError(sym + \" is not a symbol\");\n    }\n    var regId = sym[POLYFILL_TAG] && sym[UNIQUE_REGISTRY_ID] && sym[UNIQUE_REGISTRY_ID]();\n    return regId ? _globalSymbolRegistry().s[regId] : undefined;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyGetKnownSymbol(name) {\n    !_wellKnownSymbolCache && (_wellKnownSymbolCache = {});\n    var result;\n    var knownName = _wellKnownSymbolMap[name];\n    if (knownName) {\n        result = _wellKnownSymbolCache[knownName] = _wellKnownSymbolCache[knownName] || polyNewSymbol(SYMBOL + \".\" + knownName);\n    }\n    return result;\n}\n\nvar _globalLazyTestHooks;\nfunction _initTestHooks() {\n    _globalLazyTestHooks = _getGlobalConfig();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getLazy(cb) {\n    var lazyValue = {};\n    !_globalLazyTestHooks && _initTestHooks();\n    lazyValue.b = _globalLazyTestHooks.lzy;\n    objDefineProp(lazyValue, \"v\", {\n        configurable: true,\n        get: function () {\n            var result = cb();\n            if (!_globalLazyTestHooks.lzy) {\n                objDefineProp(lazyValue, \"v\", {\n                    value: result\n                });\n            }\n            lazyValue.b = _globalLazyTestHooks.lzy;\n            return result;\n        }\n    });\n    return lazyValue;\n}\nfunction setBypassLazyCache(newValue) {\n    !_globalLazyTestHooks && _initTestHooks();\n    _globalLazyTestHooks.lzy = newValue;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createCachedValue(value) {\n    return objDefineProp({\n        toJSON: function () { return value; }\n    }, \"v\", { value: value });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createDeferredCachedValue(cb) {\n    var theValue = {\n        toJSON: function () { return theValue.v; }\n    };\n    return objDefineProp(theValue, \"v\", {\n        get: function () {\n            var result = cb();\n            cb = NULL_VALUE;\n            objDefineProp(theValue, \"v\", { value: result });\n            return result;\n        },\n        configurable: true\n    });\n}\n\nvar WINDOW = \"window\";\nvar _cachedGlobal;\nfunction _getGlobalInstFn(getFn, theArgs) {\n    var cachedValue;\n    return function () {\n        !_globalLazyTestHooks && _initTestHooks();\n        if (!cachedValue || _globalLazyTestHooks.lzy) {\n            cachedValue = createCachedValue(safe(getFn, theArgs).v);\n        }\n        return cachedValue.v;\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction lazySafeGetInst(name) {\n    return getLazy(function () { return safe((getInst), [name]).v || UNDEF_VALUE; });\n}\nfunction getGlobal(useCached) {\n    !_globalLazyTestHooks && _initTestHooks();\n    if (!_cachedGlobal || useCached === false || _globalLazyTestHooks.lzy) {\n        _cachedGlobal = createCachedValue(safe(_getGlobalValue).v || NULL_VALUE);\n    }\n    return _cachedGlobal.v;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getInst(name, useCached) {\n    var gbl;\n    if (!_cachedGlobal || useCached === false) {\n        gbl = getGlobal(useCached);\n    }\n    else {\n        gbl = _cachedGlobal.v;\n    }\n    if (gbl && gbl[name]) {\n        return gbl[name];\n    }\n    if (name === WINDOW) {\n        try {\n            return window;\n        }\n        catch (e) {\n        }\n    }\n    return NULL_VALUE;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasDocument() {\n    return !!( /*#__PURE__*/getDocument());\n}\nvar getDocument = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"document\"]));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasWindow() {\n    return !!( /*#__PURE__*/getWindow());\n}\nvar getWindow = ( /*#__PURE__*/_getGlobalInstFn(getInst, [WINDOW]));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasNavigator() {\n    return !!( /*#__PURE__*/getNavigator());\n}\nvar getNavigator = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"navigator\"]));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasHistory() {\n    return !!( /*#__PURE__*/getHistory());\n}\nvar getHistory = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"history\"]));\nvar isNode = ( /*#__PURE__*/_getGlobalInstFn(function () {\n    return !!( /*#__PURE__*/safe(function () { return (process && (process.versions || {}).node); }).v);\n}));\nvar isWebWorker = ( /*#__PURE__*/_getGlobalInstFn(function () {\n    return !!( /*#__PURE__*/safe(function () { return self && self instanceof WorkerGlobalScope; }).v);\n}));\n\nvar _symbol;\nvar _symbolFor;\nvar _symbolKeyFor;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _initSymbol() {\n    _symbol = ( /*#__PURE__*/createCachedValue(safe((getInst), [SYMBOL]).v));\n    return _symbol;\n}\nfunction _getSymbolKey(key) {\n    var gblSym = ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol());\n    return (gblSym.v ? gblSym.v[key] : UNDEF_VALUE);\n}\nvar isSymbol = ( /*#__PURE__*/_createIs(\"symbol\"));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasSymbol() {\n    return !!( /*#__PURE__*/getSymbol());\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getSymbol() {\n    !_globalLazyTestHooks && _initTestHooks();\n    return ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol()).v;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getKnownSymbol(name, noPoly) {\n    var knownName = _wellKnownSymbolMap[name];\n    !_globalLazyTestHooks && _initTestHooks();\n    var sym = ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol());\n    return sym.v ? sym.v[knownName || name] : (!noPoly ? polyGetKnownSymbol(name) : UNDEF_VALUE);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction newSymbol(description, noPoly) {\n    !_globalLazyTestHooks && _initTestHooks();\n    var sym = ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol());\n    return sym.v ? sym.v(description) : (!noPoly ? polyNewSymbol(description) : NULL_VALUE);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction symbolFor(key) {\n    !_globalLazyTestHooks && _initTestHooks();\n    _symbolFor = ((!_globalLazyTestHooks.lzy ? _symbolFor : 0) || ( /*#__PURE__*/createCachedValue(safe((_getSymbolKey), [\"for\"]).v)));\n    return (_symbolFor.v || polySymbolFor)(key);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction symbolKeyFor(sym) {\n    !_globalLazyTestHooks && _initTestHooks();\n    _symbolKeyFor = ((!_globalLazyTestHooks.lzy ? _symbolKeyFor : 0) || ( /*#__PURE__*/createCachedValue(safe((_getSymbolKey), [\"keyFor\"]).v)));\n    return (_symbolKeyFor.v || polySymbolKeyFor)(sym);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction isIterator(value) {\n    return !!value && isFunction(value.next);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isIterable(value) {\n    return !isStrictNullOrUndefined(value) && isFunction(value[getKnownSymbol(3 )]);\n}\n\nvar _iterSymbol$1;\nfunction iterForOf(iter, callbackfn, thisArg) {\n    if (iter) {\n        if (!isIterator(iter)) {\n            !_iterSymbol$1 && (_iterSymbol$1 = createCachedValue(getKnownSymbol(3 )));\n            iter = iter[_iterSymbol$1.v] ? iter[_iterSymbol$1.v]() : NULL_VALUE;\n        }\n        if (isIterator(iter)) {\n            var err = UNDEF_VALUE;\n            var iterResult = UNDEF_VALUE;\n            try {\n                var count = 0;\n                while (!(iterResult = iter.next()).done) {\n                    if (callbackfn[CALL](thisArg || iter, iterResult.value, count, iter) === -1) {\n                        break;\n                    }\n                    count++;\n                }\n            }\n            catch (failed) {\n                err = { e: failed };\n                if (iter.throw) {\n                    iterResult = NULL_VALUE;\n                    iter.throw(err);\n                }\n            }\n            finally {\n                try {\n                    if (iterResult && !iterResult.done) {\n                        iter.return && iter.return(iterResult);\n                    }\n                }\n                finally {\n                    if (err) {\n                        // eslint-disable-next-line no-unsafe-finally\n                        throw err.e;\n                    }\n                }\n            }\n        }\n    }\n}\n\nfunction fnApply(fn, thisArg, argArray) {\n    return fn.apply(thisArg, argArray);\n}\nfunction fnCall(fn, thisArg) {\n    return fn.apply(thisArg, ArrSlice[CALL](arguments, 2));\n}\nfunction fnBind(fn, thisArg) {\n    return fn.bind.apply(fn, ArrSlice[CALL](arguments, 1));\n}\n\nfunction arrAppend(target, elms) {\n    if (!isUndefined(elms) && target) {\n        if (isArray(elms)) {\n            fnApply(target.push, target, elms);\n        }\n        else if (isIterator(elms) || isIterable(elms)) {\n            iterForOf(elms, function (elm) {\n                target.push(elm);\n            });\n        }\n        else {\n            target.push(elms);\n        }\n    }\n    return target;\n}\n\nvar arrEvery = /*#__PURE__*/ _unwrapFunction(\"every\", ArrProto);\nvar arrFilter = /*#__PURE__*/ _unwrapFunction(\"filter\", ArrProto);\n\nfunction arrForEach(theArray, callbackfn, thisArg) {\n    if (theArray) {\n        var len = theArray[LENGTH] >>> 0;\n        for (var idx = 0; idx < len; idx++) {\n            if (idx in theArray) {\n                if (callbackfn[CALL](thisArg || theArray, theArray[idx], idx, theArray) === -1) {\n                    break;\n                }\n            }\n        }\n    }\n}\n\nvar arrIndexOf = ( /*#__PURE__*/_unwrapFunction(\"indexOf\", ArrProto));\nvar arrLastIndexOf = ( /*#__PURE__*/_unwrapFunction(\"lastIndexOf\", ArrProto));\n\nvar arrMap = ( /*#__PURE__*/_unwrapFunction(\"map\", ArrProto));\n\nfunction arrSlice(theArray, start, end) {\n    return ((theArray ? theArray[\"slice\"] : NULL_VALUE) || ArrSlice).apply(theArray, ArrSlice[CALL](arguments, 1));\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyIsArray(value) {\n    if (isNullOrUndefined(value)) {\n        return false;\n    }\n    return objToString(value) === \"[object Array]\";\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyArrIncludes(theArray, searchElement, fromIndex) {\n    return arrIndexOf(theArray, searchElement, fromIndex) !== -1;\n}\nfunction polyArrFind(theArray, callbackFn, thisArg) {\n    var result;\n    var idx = polyArrFindIndex(theArray, callbackFn, thisArg);\n    return idx !== -1 ? theArray[idx] : result;\n}\nfunction polyArrFindIndex(theArray, callbackFn, thisArg) {\n    var result = -1;\n    arrForEach(theArray, function (value, index) {\n        if (callbackFn[CALL](thisArg | theArray, value, index, theArray)) {\n            result = index;\n            return -1;\n        }\n    });\n    return result;\n}\nfunction polyArrFindLast(theArray, callbackFn, thisArg) {\n    var result;\n    var idx = polyArrFindLastIndex(theArray, callbackFn, thisArg);\n    return idx !== -1 ? theArray[idx] : result;\n}\nfunction polyArrFindLastIndex(theArray, callbackFn, thisArg) {\n    var result = -1;\n    var len = theArray[LENGTH] >>> 0;\n    for (var idx = len - 1; idx >= 0; idx--) {\n        if (idx in theArray && callbackFn[CALL](thisArg | theArray, theArray[idx], idx, theArray)) {\n            result = idx;\n            break;\n        }\n    }\n    return result;\n}\nfunction polyArrFrom(theValue, mapFn, thisArg) {\n    if (isArray(theValue)) {\n        var result_1 = arrSlice(theValue);\n        return mapFn ? arrMap(result_1, mapFn, thisArg) : result_1;\n    }\n    var result = [];\n    iterForOf(theValue, function (value, cnt) {\n        return result.push(mapFn ? mapFn[CALL](thisArg, value, cnt) : value);\n    });\n    return result;\n}\n\nvar arrFind = /*#__PURE__*/ _unwrapFunctionWithPoly(\"find\", ArrProto, polyArrFind);\nvar arrFindIndex = /*#__PURE__*/ _unwrapFunctionWithPoly(\"findIndex\", ArrProto, polyArrFindIndex);\nvar arrFindLast = /*#__PURE__*/ _unwrapFunctionWithPoly(\"findLast\", ArrProto, polyArrFindLast);\nvar arrFindLastIndex = /*#__PURE__*/ _unwrapFunctionWithPoly(\"findLastIndex\", ArrProto, polyArrFindLastIndex);\n\nvar arrFrom = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ArrCls, \"from\")), polyArrFrom));\n\nvar arrIncludes = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"includes\", ArrProto, polyArrIncludes));\nvar arrContains = arrIncludes;\n\nvar arrReduce = ( /*#__PURE__*/_unwrapFunction(\"reduce\", ArrProto));\n\nvar arrSome = ( /*#__PURE__*/_unwrapFunction(\"some\", ArrProto));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createFnDeferredProxy(hostFn, funcName) {\n    return function () {\n        var theArgs = ArrSlice[CALL](arguments);\n        var theHost = hostFn();\n        return fnApply(theHost[funcName], theHost, theArgs);\n    };\n}\nfunction createProxyFuncs(target, host, funcDefs) {\n    if (target && host && isArray(funcDefs)) {\n        var isDeferred_1 = isFunction(host);\n        arrForEach(funcDefs, function (funcDef) {\n            var targetName = (funcDef.as || funcDef.n);\n            if (funcDef.rp === false && target[targetName]) {\n                return;\n            }\n            target[targetName] = isDeferred_1 ?\n                createFnDeferredProxy(host, funcDef.n) :\n                fnBind(host[funcDef.n], host);\n        });\n    }\n    return target;\n}\n\nvar _iterSymbol;\n/*#__NO_SIDE_EFFECTS__*/\nfunction readArgs(theArgs, start, end) {\n    if (!objHasOwn(theArgs, LENGTH)) {\n        !_iterSymbol && (_iterSymbol = createCachedValue(hasSymbol() && getKnownSymbol(3 )));\n        var iterFn = void 0;\n        if (_iterSymbol.v) {\n            iterFn = theArgs[_iterSymbol.v];\n        }\n        if (iterFn) {\n            var values_1 = [];\n            var from_1 = (start === UNDEF_VALUE || start < 0) ? 0 : start;\n            var to_1 = end < 0 || start < 0 ? UNDEF_VALUE : end;\n            iterForOf(iterFn[CALL](theArgs), function (value, cnt) {\n                if (to_1 !== UNDEF_VALUE && cnt >= to_1) {\n                    return -1;\n                }\n                if (cnt >= from_1) {\n                    values_1.push(value);\n                }\n            });\n            if ((start === UNDEF_VALUE || start >= 0) && (end === UNDEF_VALUE || end >= 0)) {\n                return values_1;\n            }\n            theArgs = values_1;\n        }\n    }\n    return arrSlice(theArgs, start, end);\n}\n\nvar objCreate = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"create\")), polyObjCreate));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjCreate(obj) {\n    if (!obj) {\n        return {};\n    }\n    var type = typeof obj;\n    if (type !== OBJECT && type !== FUNCTION) {\n        throwTypeError(\"Prototype must be an Object or function: \" + dumpObj(obj));\n    }\n    function tempFunc() { }\n    tempFunc[PROTOTYPE] = obj;\n    return new tempFunc();\n}\n\nvar _isProtoArray;\nfunction objSetPrototypeOf(obj, proto) {\n    var fn = ObjClass[\"setPrototypeOf\"] ||\n        function (d, b) {\n            var _a;\n            !_isProtoArray && (_isProtoArray = createCachedValue((_a = {}, _a[__PROTO__] = [], _a) instanceof Array));\n            _isProtoArray.v ? d[__PROTO__] = b : objForEachKey(b, function (key, value) { return d[key] = value; });\n        };\n    return fn(obj, proto);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createCustomError(name, d, b) {\n    safe(objDefine, [d, NAME, { v: name, c: true, e: false }]);\n    d = objSetPrototypeOf(d, b);\n    function __() {\n        this[CONSTRUCTOR] = d;\n        safe(objDefine, [this, NAME, { v: name, c: true, e: false }]);\n    }\n    d[PROTOTYPE] = b === NULL_VALUE ? objCreate(b) : (__[PROTOTYPE] = b[PROTOTYPE], new __());\n    return d;\n}\nfunction _setName(baseClass, name) {\n    name && (baseClass[NAME] = name);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createCustomError(name, constructCb, errorBase) {\n    var theBaseClass = errorBase || Error;\n    var orgName = theBaseClass[PROTOTYPE][NAME];\n    var captureFn = Error.captureStackTrace;\n    return _createCustomError(name, function () {\n        var _this = this;\n        var theArgs = arguments;\n        try {\n            safe(_setName, [theBaseClass, name]);\n            var _self = fnApply(theBaseClass, _this, ArrSlice[CALL](theArgs)) || _this;\n            if (_self !== _this) {\n                var orgProto = objGetPrototypeOf(_this);\n                if (orgProto !== objGetPrototypeOf(_self)) {\n                    objSetPrototypeOf(_self, orgProto);\n                }\n            }\n            captureFn && captureFn(_self, _this[CONSTRUCTOR]);\n            constructCb && constructCb(_self, theArgs);\n            return _self;\n        }\n        finally {\n            safe(_setName, [theBaseClass, orgName]);\n        }\n    }, theBaseClass);\n}\nvar _unsupportedError;\nfunction throwUnsupported(message) {\n    if (!_unsupportedError) {\n        _unsupportedError = createCustomError(\"UnsupportedError\");\n    }\n    throw new _unsupportedError(message);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction utcNow() {\n    return (Date.now || polyUtcNow)();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyUtcNow() {\n    return new Date().getTime();\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createTrimFn(exp) {\n    return function _doTrim(value) {\n        if (isNullOrUndefined(value)) {\n            throwTypeError(\"strTrim called [\" + dumpObj(value) + \"]\");\n        }\n        if (value && value.replace) {\n            value = value.replace(exp, EMPTY);\n        }\n        return value;\n    };\n}\nvar polyStrTrim = ( /*#__PURE__*/_createTrimFn(/^\\s+|(?=\\s)\\s+$/g));\nvar polyStrTrimStart = ( /*#__PURE__*/_createTrimFn(/^\\s+/g));\nvar polyStrTrimEnd = ( /*#__PURE__*/_createTrimFn(/(?=\\s)\\s+$/g));\n\nvar strTrim = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"trim\", StrProto, polyStrTrim));\nvar strTrimStart = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"trimStart\", StrProto, polyStrTrimStart));\nvar strTrimLeft = ( /*#__PURE__*/_pureAssign(strTrimStart));\nvar strTrimEnd = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"trimEnd\", StrProto, polyStrTrimEnd));\nvar strTrimRight = ( /*#__PURE__*/_pureAssign(strTrimEnd));\n\nvar strUpper = ( /*#__PURE__*/_unwrapFunction(\"toUpperCase\", StrProto));\nvar strLower = ( /*#__PURE__*/_unwrapFunction(\"toLowerCase\", StrProto));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _convertCase(value, newPrefix, upperWord) {\n    return strTrim(asString(value)).replace(/((_|\\W)+(\\w){0,1}|([a-z])([A-Z]))/g, function (_match, _g1, _g2, wordStart, upperPrefix, upperLetter) {\n        var convertMatch = wordStart || upperLetter || EMPTY;\n        if (upperWord) {\n            convertMatch = strUpper(convertMatch);\n        }\n        return (upperPrefix || EMPTY) + newPrefix + convertMatch;\n    });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strLetterCase(value) {\n    return asString(value).replace(/(_|\\b)\\w/g, strUpper);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strCamelCase(value, upperFirst) {\n    var result = _convertCase(value, \"\", true);\n    return result.replace(/^\\w/, upperFirst ? strUpper : strLower);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strKebabCase(value, scream) {\n    var result = _convertCase(value, \"-\");\n    return (scream ? strUpper : strLower)(result);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strSnakeCase(value, scream) {\n    var result = _convertCase(value, \"_\");\n    return (scream ? strUpper : strLower)(result);\n}\n\nvar mathFloor = ( /*#__PURE__*/_pureRef(MathCls, \"floor\"));\nvar mathCeil = ( /*#__PURE__*/_pureRef(MathCls, \"ceil\"));\n\nvar mathTrunc = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(MathCls, \"trunc\")), polyMathTrunc));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyMathTrunc(value) {\n    var theValue = +value;\n    return (theValue > 0 ? mathFloor : mathCeil)(theValue);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction mathToInt(value, throwInfinity) {\n    var result = +value;\n    if (result == Infinity && throwInfinity) {\n        throwRangeError(\"invalid value [\" + dumpObj(value) + \"]\");\n    }\n    return result !== result || result === 0 ? 0 : mathTrunc(result);\n}\n\nvar strRepeat = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"repeat\", StrProto, polyStrRepeat));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrRepeat(value, count) {\n    if (isNullOrUndefined(value)) {\n        throwTypeError(\"can't convert [\" + dumpObj(value) + \"]\");\n    }\n    count = mathToInt(count, true);\n    if (count < 0) {\n        throwRangeError(\"invalid count must be >= 0 && < Infinity\");\n    }\n    var pad = isString(value) ? value : asString(value);\n    var result = EMPTY;\n    for (; count > 0; (count >>>= 1) && (pad += pad)) {\n        if (count & 1) {\n            result += pad;\n        }\n    }\n    return result;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _padValue(value, targetLength, padString) {\n    var result = EMPTY;\n    targetLength = mathToInt(targetLength, true);\n    targetLength >>= 0;\n    var len = value[LENGTH];\n    if (len < targetLength) {\n        result = isNullOrUndefined(padString) ? \" \" : asString(padString);\n        targetLength = targetLength - len;\n        if (targetLength > result[LENGTH]) {\n            result = strRepeat(result, mathCeil(targetLength / result[LENGTH]));\n        }\n        if (result[LENGTH] > targetLength) {\n            result = strSubstring(result, 0, targetLength);\n        }\n    }\n    return result;\n}\nvar strPadStart = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"padStart\", StrProto, polyStrPadStart));\nvar strPadEnd = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"padEnd\", StrProto, polyStrPadEnd));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrPadStart(value, targetLength, padString) {\n    return _padValue(value, targetLength, padString) + value;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrPadEnd(value, targetLength, padString) {\n    return value + _padValue(value, targetLength, padString);\n}\n\nvar DBL_QUOTE = \"\\\"\";\nvar INVALID_JS_NAME = /([^\\w\\d_$])/g;\nvar _htmlEntityCache;\n/*#__NO_SIDE_EFFECTS__*/\nfunction normalizeJsName(jsName, camelCase) {\n    var result = asString(jsName).replace(INVALID_JS_NAME, \"_\");\n    return !isUndefined(camelCase) ? strCamelCase(result, !camelCase) : result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction encodeAsJson(value, format) {\n    var result;\n    if (isString(value)) {\n        result = DBL_QUOTE + value.replace(/[^\\w .,\\-!@#$%\\^&*\\(\\)_+={}\\[\\]:;|<>?]/g, function (match) {\n            if (match === DBL_QUOTE || match === \"\\\\\") {\n                return \"\\\\\" + match;\n            }\n            var hex = match.charCodeAt(0)[TO_STRING](16);\n            return \"\\\\u\" + strPadStart(strUpper(hex), 4, \"0\");\n        }) + DBL_QUOTE;\n    }\n    else {\n        try {\n            result = JSON.stringify(value, NULL_VALUE, format ? (isNumber(format) ? format : 4) : UNDEF_VALUE);\n        }\n        catch (e) {\n            result = DBL_QUOTE + dumpObj(e) + DBL_QUOTE;\n        }\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction encodeAsHtml(value) {\n    !_htmlEntityCache && (_htmlEntityCache = {\n        \"&\": \"amp\",\n        \"<\": \"lt\",\n        \">\": \"gt\",\n        \"\\\"\": \"quot\",\n        \"'\": \"#39\"\n    });\n    return asString(value).replace(/[&<>\"']/g, function (match) { return \"&\" + _htmlEntityCache[match] + \";\"; });\n}\n\nvar _fnToString;\nvar _objCtrFnString;\nvar _gblWindow;\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPlainObject(value) {\n    if (!value || typeof value !== OBJECT) {\n        return false;\n    }\n    if (!_gblWindow) {\n        _gblWindow = hasWindow() ? getWindow() : true;\n    }\n    var result = false;\n    if (value !== _gblWindow) {\n        if (!_objCtrFnString) {\n            _fnToString = Function[PROTOTYPE][TO_STRING];\n            _objCtrFnString = _fnToString[CALL](ObjClass);\n        }\n        try {\n            var proto = objGetPrototypeOf(value);\n            result = !proto;\n            if (!result) {\n                if (objHasOwnProperty(proto, CONSTRUCTOR)) {\n                    proto = proto[CONSTRUCTOR];\n                }\n                result = !!(proto && typeof proto === FUNCTION && _fnToString[CALL](proto) === _objCtrFnString);\n            }\n        }\n        catch (ex) {\n        }\n    }\n    return result;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _defaultDeepCopyHandler(details) {\n    details.value && plainObjDeepCopyHandler(details);\n    return true;\n}\nvar defaultDeepCopyHandlers = [\n    arrayDeepCopyHandler,\n    plainObjDeepCopyHandler,\n    functionDeepCopyHandler,\n    dateDeepCopyHandler\n];\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getSetVisited(visitMap, source, newPath, cb) {\n    var theEntry;\n    arrForEach(visitMap, function (entry) {\n        if (entry.k === source) {\n            theEntry = entry;\n            return -1;\n        }\n    });\n    if (!theEntry) {\n        theEntry = { k: source, v: source };\n        visitMap.push(theEntry);\n        cb(theEntry);\n    }\n    return theEntry.v;\n}\nfunction _deepCopy(visitMap, value, ctx, key) {\n    var userHandler = ctx.handler;\n    var newPath = ctx.path ? (key ? ctx.path.concat(key) : ctx.path) : [];\n    var newCtx = {\n        handler: ctx.handler,\n        src: ctx.src,\n        path: newPath\n    };\n    var theType = typeof value;\n    var isPlain = false;\n    var isPrim = value === NULL_VALUE;\n    if (!isPrim) {\n        if (value && theType === OBJECT) {\n            isPlain = isPlainObject(value);\n        }\n        else {\n            isPrim = isPrimitiveType(theType);\n        }\n    }\n    var details = {\n        type: theType,\n        isPrim: isPrim,\n        isPlain: isPlain,\n        value: value,\n        result: value,\n        path: newPath,\n        origin: ctx.src,\n        copy: function (source, newKey) {\n            return _deepCopy(visitMap, source, newKey ? newCtx : ctx, newKey);\n        },\n        copyTo: function (target, source) {\n            return _copyProps(visitMap, target, source, newCtx);\n        }\n    };\n    if (!details.isPrim) {\n        return _getSetVisited(visitMap, value, newPath, function (newEntry) {\n            objDefine(details, \"result\", {\n                g: function () {\n                    return newEntry.v;\n                },\n                s: function (newValue) {\n                    newEntry.v = newValue;\n                }\n            });\n            var idx = 0;\n            var handler = userHandler;\n            while (!(handler || (idx < defaultDeepCopyHandlers.length ? defaultDeepCopyHandlers[idx++] : _defaultDeepCopyHandler))[CALL](ctx, details)) {\n                handler = NULL_VALUE;\n            }\n        });\n    }\n    if (userHandler && userHandler[CALL](ctx, details)) {\n        return details.result;\n    }\n    return value;\n}\nfunction _copyProps(visitMap, target, source, ctx) {\n    if (!isNullOrUndefined(source)) {\n        for (var key in source) {\n            target[key] = _deepCopy(visitMap, source[key], ctx, key);\n        }\n    }\n    return target;\n}\nfunction objCopyProps(target, source, handler) {\n    var ctx = {\n        handler: handler,\n        src: source,\n        path: []\n    };\n    return _copyProps([], target, source, ctx);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction objDeepCopy(source, handler) {\n    var ctx = {\n        handler: handler,\n        src: source\n    };\n    return _deepCopy([], source, ctx);\n}\nfunction arrayDeepCopyHandler(details) {\n    var value = details.value;\n    if (isArray(value)) {\n        var target = details.result = [];\n        target.length = value.length;\n        details.copyTo(target, value);\n        return true;\n    }\n    return false;\n}\nfunction dateDeepCopyHandler(details) {\n    var value = details.value;\n    if (isDate(value)) {\n        details.result = new Date(value.getTime());\n        return true;\n    }\n    return false;\n}\nfunction functionDeepCopyHandler(details) {\n    if (details.type === FUNCTION) {\n        return true;\n    }\n    return false;\n}\nfunction plainObjDeepCopyHandler(details) {\n    var value = details.value;\n    if (value && details.isPlain) {\n        var target = details.result = {};\n        details.copyTo(target, value);\n        return true;\n    }\n    return false;\n}\n\nfunction _doExtend(target, theArgs) {\n    arrForEach(theArgs, function (theArg) {\n        objCopyProps(target, theArg);\n    });\n    return target;\n}\nfunction deepExtend(target, obj1, obj2, obj3, obj4, obj5, obj6) {\n    return _doExtend(objDeepCopy(target) || {}, ArrSlice[CALL](arguments));\n}\nfunction objExtend(target, obj1, obj2, obj3, obj4, obj5, obj6) {\n    return _doExtend(target || {}, ArrSlice[CALL](arguments));\n}\n\nvar getLength = ( /*#__PURE__*/_unwrapProp(LENGTH));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction getIntValue(value, defValue) {\n    if (!isNullOrUndefined(value)) {\n        if (isNumber(value)) {\n            return value;\n        }\n        var theValue = parseInt(value, 10);\n        return isNaN(theValue) ? defValue : theValue;\n    }\n    return defValue;\n}\n\nvar _perf;\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasPerformance() {\n    return !!getPerformance();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getPerformance() {\n    !_globalLazyTestHooks && _initTestHooks();\n    if (!_perf || _globalLazyTestHooks.lzy) {\n        _perf = createCachedValue(safe((getInst), [\"performance\"]).v);\n    }\n    return _perf.v;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction perfNow() {\n    var perf = getPerformance();\n    if (perf && perf.now) {\n        return perf.now();\n    }\n    return utcNow();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction elapsedTime(startTime) {\n    return perfNow() - startTime;\n}\n\nvar MATCH_ANY = \"(.*)\";\nvar MATCH_SINGLE = \"(.)\";\nfunction _createRegExp(value, escapeRgx, replaceFn, ignoreCase, fullMatch) {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp((fullMatch ? \"^\" : EMPTY) + replaceFn(value.replace(escapeRgx, \"\\\\$1\")) + (fullMatch ? \"$\" : EMPTY), ignoreCase ? \"i\" : \"\");\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createWildcardRegex(value, ignoreCase, fullMatch) {\n    return _createRegExp(asString(value), /([-+|^$#.\\?{}()\\[\\]\\\\/\\\"\\'])/g, function (value) {\n        return value.replace(/\\*/g, MATCH_ANY);\n    }, !!ignoreCase, fullMatch);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createFilenameRegex(value, ignoreCase, fullMatch) {\n    return _createRegExp(asString(value), /([-+|^$#.{}()\\\\\\/\\[\\]\\\"\\'])/g, function (value) {\n        return value.replace(/(\\\\\\\\|\\\\\\/|\\*|\\?)/g, function (_all, g1) {\n            if (g1 == \"\\\\/\" || g1 == \"\\\\\\\\\") {\n                return \"[\\\\\\\\\\\\/]{1}\";\n            }\n            return g1 == \"*\" ? MATCH_ANY : MATCH_SINGLE;\n        });\n    }, !!ignoreCase, fullMatch);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction makeGlobRegex(value, ignoreCase, fullMatch) {\n    return _createRegExp(asString(value), /([-+|^$#.{}()\\\\\\/\\[\\]\\\"\\'])/g, function (value) {\n        return value.replace(/(\\*\\*\\\\[\\\\\\/]|\\\\\\\\|\\\\\\/|\\*\\*|\\*|\\?)/g, function (_all, g1) {\n            if (g1 == \"**\\\\/\" || g1 == \"**\\\\\\\\\") {\n                return \"(.*[\\\\\\\\\\\\/])*\";\n            }\n            if (g1 === \"\\\\/\" || g1 == \"\\\\\\\\\") {\n                return \"[\\\\\\\\\\\\/]{1}\";\n            }\n            if (g1 === \"**\") {\n                return MATCH_ANY;\n            }\n            return g1 === \"*\" ? \"([^\\\\\\\\\\\\/]*)\" : \"([^\\\\\\\\\\\\/]{1})\";\n        });\n    }, !!ignoreCase, fullMatch);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction safeGetLazy(cb, defValue) {\n    return getLazy(function () {\n        var result = safe(cb);\n        return result.e ? defValue : result.v;\n    });\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _checkLength(value, props) {\n    var result;\n    arrForEach(props, function (prop) {\n        if (prop in value) {\n            var propValue = value[prop];\n            result = (isFunction(propValue) ? propValue() : propValue) > 0;\n            return -1;\n        }\n    });\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _hasValue(value, depth) {\n    var result = value === false || value === 0;\n    if (!result && !isNullOrUndefined(value)) {\n        if (isArray(value)) {\n            result = value[LENGTH] > 0;\n        }\n        else if (isDate(value)) {\n            result = !isNaN(value.getTime());\n        }\n        else if (isBoolean(value)) {\n            return true;\n        }\n        else if (isObject(value)) {\n            try {\n                var chkValue = _checkLength(value, [LENGTH, \"byteLength\", \"size\", \"count\"]);\n                if (isBoolean(chkValue)) {\n                    return chkValue;\n                }\n                if (isFunction(value.valueOf) && depth < 5) {\n                    return _hasValue(value.valueOf(), ++depth);\n                }\n            }\n            catch (e) {\n            }\n            return !!objKeys(value)[LENGTH];\n        }\n        else {\n            result = isTruthy(value);\n        }\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasValue(value) {\n    return _hasValue(value, 0);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createIterable(ctx) {\n    return makeIterable({}, ctx);\n}\nfunction makeIterable(target, ctx) {\n    var itSymbol = getKnownSymbol(3 );\n    function _createIterator() {\n        return createIterator(ctx);\n    }\n    target[itSymbol] = _createIterator;\n    return target;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createIterator(ctx) {\n    var isDone = false;\n    function _value() {\n        return ctx.v;\n    }\n    function _next() {\n        if (!isDone) {\n            isDone = (ctx.n ? ctx.n(arguments) : true);\n        }\n        var result = {\n            done: isDone\n        };\n        if (!isDone) {\n            objDefine(result, \"value\", { g: _value });\n        }\n        return result;\n    }\n    function _return(value) {\n        isDone = true;\n        return {\n            done: true,\n            value: ctx.r && ctx.r(value)\n        };\n    }\n    function _throw(e) {\n        isDone = true;\n        return {\n            done: true,\n            value: ctx.t && ctx.t(e)\n        };\n    }\n    var theIterator = {\n        next: _next\n    };\n    if (ctx.r) {\n        theIterator.return = _return;\n    }\n    if (ctx.t) {\n        theIterator.throw = _throw;\n    }\n    return theIterator;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createArrayIterator(values) {\n    var idx = -1;\n    var theValues = values ? values.slice() : [];\n    var len = theValues[LENGTH];\n    function _value() {\n        if (idx >= 0 && idx < len) {\n            return theValues[idx];\n        }\n    }\n    function _getNext() {\n        idx++;\n        return idx >= len;\n    }\n    var ctx = {\n        n: _getNext\n    };\n    objDefine(ctx, \"v\", { g: _value });\n    return createIterator(ctx);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createRangeIterator(start, end, step) {\n    var nextValue = start;\n    var theValue = UNDEF_VALUE;\n    if (isNullOrUndefined(end)) {\n        end = start;\n    }\n    var theStep = step;\n    if (!theStep) {\n        theStep = (start <= end) ? 1 : -1;\n    }\n    function _value() {\n        return theValue;\n    }\n    function _getNext() {\n        var isDone = (theStep > 0) ? (nextValue > end) : (nextValue < end);\n        if (!isDone) {\n            theValue = nextValue;\n            nextValue += theStep;\n        }\n        return isDone;\n    }\n    return createIterator(objDefine({\n        n: _getNext\n    }, \"v\", { g: _value }));\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrSymSplit(value, splitter, limit) {\n    var splitFn = splitter ? splitter[getKnownSymbol(9 )] : UNDEF_VALUE;\n    return splitFn ? splitFn(value, limit) : [value];\n}\n\nvar strSplit = ( /*#__PURE__*/_unwrapFunction(\"split\", StrProto));\nvar strSymSplit = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"split\", StrProto, !hasSymbol() ? polyStrSymSplit : NULL_VALUE));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction getValueByKey(target, path, defValue) {\n    if (!path || !target) {\n        return defValue;\n    }\n    var parts = strSplit(path, \".\");\n    var cnt = parts.length;\n    for (var lp = 0; lp < cnt && !isNullOrUndefined(target); lp++) {\n        target = target[parts[lp]];\n    }\n    return (!isNullOrUndefined(target) ? target : defValue);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getValueByIter(target, iter, defValue) {\n    if (!iter || !target) {\n        return defValue;\n    }\n    iterForOf(iter, function (value) {\n        if (isNullOrUndefined(target)) {\n            return -1;\n        }\n        target = target[value];\n    });\n    return (!isNullOrUndefined(target) ? target : defValue);\n}\nfunction setValueByKey(target, path, value) {\n    if (target && path) {\n        var parts = strSplit(path, \".\");\n        var lastKey = parts.pop();\n        arrForEach(parts, function (key) {\n            if (isNullOrUndefined(target[key])) {\n                target[key] = {};\n            }\n            target = target[key];\n        });\n        target[lastKey] = value;\n    }\n}\nfunction setValueByIter(target, iter, value) {\n    if (target && iter) {\n        var lastKey_1;\n        iterForOf(iter, function (key) {\n            if (lastKey_1) {\n                if (isNullOrUndefined(target[lastKey_1])) {\n                    target[lastKey_1] = {};\n                }\n                target = target[lastKey_1];\n            }\n            lastKey_1 = key;\n        });\n        target[lastKey_1] = value;\n    }\n}\n\nvar strEndsWith = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"endsWith\", StrProto, polyStrEndsWith));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrEndsWith(value, searchString, length) {\n    if (!isString(value)) {\n        throwTypeError(\"'\" + dumpObj(value) + \"' is not a string\");\n    }\n    var searchValue = isString(searchString) ? searchString : asString(searchString);\n    var end = (!isUndefined(length) && length < value[LENGTH]) ? length : value[LENGTH];\n    return strSubstring(value, end - searchValue[LENGTH], end) === searchValue;\n}\n\nvar strIndexOf = ( /*#__PURE__*/_unwrapFunction(\"indexOf\", StrProto));\nvar strLastIndexOf = ( /*#__PURE__*/_unwrapFunction(\"lastIndexOf\", StrProto));\n\nvar strIncludes = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"includes\", StrProto, polyStrIncludes));\nvar strContains = ( /*#__PURE__*/_pureAssign(strIncludes));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrIncludes(value, searchString, position) {\n    if (isRegExp(searchString)) {\n        throwTypeError(\"'searchString' must not be a regular expression\" + dumpObj(searchString));\n    }\n    return strIndexOf(value, asString(searchString), position) !== -1;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction strIsNullOrWhiteSpace(value) {\n    if (isString(value)) {\n        return value.replace(/[\\s\\t\\r\\n\\f]+/g, EMPTY) === EMPTY;\n    }\n    return isNullOrUndefined(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strIsNullOrEmpty(value) {\n    if (isString(value)) {\n        return value === EMPTY;\n    }\n    return isNullOrUndefined(value);\n}\n\nvar strStartsWith = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"startsWith\", StrProto, polyStrStartsWith));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrStartsWith(value, searchString, position) {\n    if (!isString(value)) {\n        throwTypeError(\"'\" + dumpObj(value) + \"' is not a string\");\n    }\n    var searchValue = isString(searchString) ? searchString : asString(searchString);\n    var pos = position > 0 ? position : 0;\n    return strSubstring(value, pos, pos + searchValue[LENGTH]) === searchValue;\n}\n\nvar REF = \"ref\";\nvar UNREF = \"unref\";\nvar HAS_REF = \"hasRef\";\nvar ENABLED = \"enabled\";\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createTimerHandler(startTimer, refreshFn, cancelFn) {\n    var ref = true;\n    var timerId = startTimer ? refreshFn(NULL_VALUE) : NULL_VALUE;\n    var theTimerHandler;\n    function _unref() {\n        ref = false;\n        timerId && timerId[UNREF] && timerId[UNREF]();\n        return theTimerHandler;\n    }\n    function _cancel() {\n        timerId && cancelFn(timerId);\n        timerId = NULL_VALUE;\n    }\n    function _refresh() {\n        timerId = refreshFn(timerId);\n        if (!ref) {\n            _unref();\n        }\n        return theTimerHandler;\n    }\n    function _setEnabled(value) {\n        !value && timerId && _cancel();\n        value && !timerId && _refresh();\n    }\n    theTimerHandler = {\n        cancel: _cancel,\n        refresh: _refresh\n    };\n    theTimerHandler[HAS_REF] = function () {\n        if (timerId && timerId[HAS_REF]) {\n            return timerId[HAS_REF]();\n        }\n        return ref;\n    };\n    theTimerHandler[REF] = function () {\n        ref = true;\n        timerId && timerId[REF] && timerId[REF]();\n        return theTimerHandler;\n    };\n    theTimerHandler[UNREF] = _unref;\n    theTimerHandler = objDefineProp(theTimerHandler, ENABLED, {\n        get: function () { return !!timerId; },\n        set: _setEnabled\n    });\n    return {\n        h: theTimerHandler,\n        dn: function () {\n            timerId = NULL_VALUE;\n        }\n    };\n}\n\nfunction _createTimeoutWith(startTimer, overrideFn, theArgs) {\n    var isArr = isArray(overrideFn);\n    var len = isArr ? overrideFn.length : 0;\n    var setFn = (len > 0 ? overrideFn[0] : (!isArr ? overrideFn : UNDEF_VALUE)) || setTimeout;\n    var clearFn = (len > 1 ? overrideFn[1] : UNDEF_VALUE) || clearTimeout;\n    var timerFn = theArgs[0];\n    theArgs[0] = function () {\n        handler.dn();\n        fnApply(timerFn, UNDEF_VALUE, ArrSlice[CALL](arguments));\n    };\n    var handler = _createTimerHandler(startTimer, function (timerId) {\n        if (timerId) {\n            if (timerId.refresh) {\n                timerId.refresh();\n                return timerId;\n            }\n            fnApply(clearFn, UNDEF_VALUE, [timerId]);\n        }\n        return fnApply(setFn, UNDEF_VALUE, theArgs);\n    }, function (timerId) {\n        fnApply(clearFn, UNDEF_VALUE, [timerId]);\n    });\n    return handler.h;\n}\nfunction scheduleTimeout(callback, timeout) {\n    return _createTimeoutWith(true, UNDEF_VALUE, ArrSlice[CALL](arguments));\n}\nfunction scheduleTimeoutWith(overrideFn, callback, timeout) {\n    return _createTimeoutWith(true, overrideFn, ArrSlice[CALL](arguments, 1));\n}\nfunction createTimeout(callback, timeout) {\n    return _createTimeoutWith(false, UNDEF_VALUE, ArrSlice[CALL](arguments));\n}\nfunction createTimeoutWith(overrideFn, callback, timeout) {\n    return _createTimeoutWith(false, overrideFn, ArrSlice[CALL](arguments, 1));\n}\n\nvar _defaultIdleTimeout = 100;\nvar _maxExecutionTime = 50;\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasIdleCallback() {\n    return !!( /*#__PURE__*/getIdleCallback());\n}\nvar getIdleCallback = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"requestIdleCallback\"]));\nvar getCancelIdleCallback = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"cancelIdleCallback\"]));\nfunction setDefaultIdleTimeout(timeout) {\n    _defaultIdleTimeout = timeout;\n}\nfunction setDefaultMaxExecutionTime(maxTime) {\n    _maxExecutionTime = maxTime;\n}\nfunction scheduleIdleCallback(callback, options) {\n    function _createDeadline(timedOut) {\n        var startTime = perfNow();\n        return {\n            didTimeout: timedOut,\n            timeRemaining: function () {\n                return _maxExecutionTime - elapsedTime(startTime);\n            }\n        };\n    }\n    if (hasIdleCallback()) {\n        var handler_1 = _createTimerHandler(true, function (idleId) {\n            idleId && getCancelIdleCallback()(idleId);\n            return getIdleCallback()(function (deadline) {\n                handler_1.dn();\n                callback(deadline || _createDeadline(false));\n            }, options);\n        }, function (idleId) {\n            getCancelIdleCallback()(idleId);\n        });\n        return handler_1.h;\n    }\n    var timeout = (options || {}).timeout;\n    if (isUndefined(timeout)) {\n        timeout = _defaultIdleTimeout;\n    }\n    return scheduleTimeout(function () {\n        callback(_createDeadline(true));\n    }, timeout);\n}\n\nfunction scheduleInterval(callback, timeout) {\n    var theArguments = ArrSlice[CALL](arguments);\n    var handler = _createTimerHandler(true, function (intervalId) {\n        intervalId && clearInterval(intervalId);\n        return fnApply(setInterval, UNDEF_VALUE, theArguments);\n    }, function (intervalId) {\n        fnApply(clearInterval, UNDEF_VALUE, [intervalId]);\n    });\n    return handler.h;\n}\n\nexport { arrAppend, arrContains, arrEvery, arrFilter, arrFind, arrFindIndex, arrFindLast, arrFindLastIndex, arrForEach, arrFrom, arrIncludes, arrIndexOf, arrLastIndexOf, arrMap, arrReduce, arrSlice, arrSome, arrayDeepCopyHandler, asString, createArrayIterator, createCachedValue, createCustomError, createDeferredCachedValue, createEnum, createEnumKeyMap, createEnumValueMap, createFilenameRegex, createFnDeferredProxy, createIterable, createIterator, createProxyFuncs, createRangeIterator, createSimpleMap, createTimeout, createTimeoutWith, createTypeMap, createWildcardRegex, dateDeepCopyHandler, deepExtend, dumpObj, elapsedTime, encodeAsHtml, encodeAsJson, fnApply, fnBind, fnCall, functionDeepCopyHandler, getCancelIdleCallback, getDocument, getGlobal, getHistory, getIdleCallback, getInst, getIntValue, getKnownSymbol, getLazy, getLength, getNavigator, getPerformance, getSymbol, getValueByIter, getValueByKey, getWindow, hasDocument, hasHistory, hasIdleCallback, hasNavigator, hasPerformance, hasSymbol, hasValue, hasWindow, isArray, isArrayBuffer, isBlob, isBoolean, isDate, isDefined, isError, isFile, isFormData, isFunction, isIterable, isIterator, isNode, isNotTruthy, isNullOrUndefined, isNumber, isObject, isPlainObject, isPrimitive, isPrimitiveType, isPromise, isPromiseLike, isRegExp, isStrictNullOrUndefined, isStrictUndefined, isString, isSymbol, isThenable, isTruthy, isTypeof, isUndefined, isWebWorker, iterForOf, lazySafeGetInst, makeGlobRegex, makeIterable, mathCeil, mathFloor, mathMax, mathMin, mathToInt, mathTrunc, newSymbol, normalizeJsName, objAssign, objCopyProps, objCreate, objDeepCopy, objDeepFreeze, objDefine, objDefineAccessors, objDefineGet, objDefineProp, objDefineProperties, objDefineProps, objEntries, objExtend, objForEachKey, objFreeze, objGetOwnPropertyDescriptor, objGetPrototypeOf, objHasOwn, objHasOwnProperty, objKeys, objSeal, objSetPrototypeOf, objToString, perfNow, plainObjDeepCopyHandler, polyArrFind, polyArrFindIndex, polyArrFindLast, polyArrFindLastIndex, polyArrFrom, polyArrIncludes, polyGetKnownSymbol, polyIsArray, polyNewSymbol, polyObjEntries, polyObjHasOwn, polyObjKeys, polyStrIncludes, polyStrSubstr, polyStrSymSplit, polyStrTrim, polyStrTrimEnd, polyStrTrimStart, polySymbolFor, polySymbolKeyFor, polyUtcNow, readArgs, safe, safeGet, safeGetLazy, scheduleIdleCallback, scheduleInterval, scheduleTimeout, scheduleTimeoutWith, setBypassLazyCache, setDefaultIdleTimeout, setDefaultMaxExecutionTime, setValueByIter, setValueByKey, strCamelCase, strContains, strEndsWith, strIncludes, strIndexOf, strIsNullOrEmpty, strIsNullOrWhiteSpace, strKebabCase, strLastIndexOf, strLeft, strLetterCase, strLower, strPadEnd, strPadStart, strRepeat, strRight, strSlice, strSnakeCase, strSplit, strStartsWith, strSubstr, strSubstring, strSymSplit, strTrim, strTrimEnd, strTrimLeft, strTrimRight, strTrimStart, strUpper, symbolFor, symbolKeyFor, throwError, throwRangeError, throwTypeError, throwUnsupported, utcNow };\n//# sourceMappingURL=ts-utils.js.map\n","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.oneDataSystemClientFactory = void 0;\n/**\n * Configures 1DS properly and returns the core client object\n * @param key The ingestion key\n * @param xhrOverride An optional override to use for requests instead of the XHTMLRequest object. Useful for node environments\n * @returns The AI core object\n */\nconst getAICore = async (key, vscodeAPI, xhrOverride) => {\n    const oneDs = await Promise.resolve().then(() => __importStar(require(/* webpackMode: \"eager\" */ \"@microsoft/1ds-core-js\")));\n    const postPlugin = await Promise.resolve().then(() => __importStar(require(/* webpackMode: \"eager\" */ \"@microsoft/1ds-post-js\")));\n    const appInsightsCore = new oneDs.AppInsightsCore();\n    const collectorChannelPlugin = new postPlugin.PostChannel();\n    // Configure the app insights core to send to collector++ and disable logging of debug info\n    const coreConfig = {\n        instrumentationKey: key,\n        endpointUrl: \"https://mobile.events.data.microsoft.com/OneCollector/1.0\",\n        loggingLevelTelemetry: 0,\n        loggingLevelConsole: 0,\n        disableCookiesUsage: true,\n        disableDbgExt: true,\n        disableInstrumentationKeyValidation: true,\n        channels: [[\n                collectorChannelPlugin\n            ]]\n    };\n    if (xhrOverride) {\n        coreConfig.extensionConfig = {};\n        // Configure the channel to use a XHR Request override since it's not available in node\n        const channelConfig = {\n            alwaysUseXhrOverride: true,\n            httpXHROverride: xhrOverride\n        };\n        coreConfig.extensionConfig[collectorChannelPlugin.identifier] = channelConfig;\n    }\n    const config = vscodeAPI.workspace.getConfiguration(\"telemetry\");\n    const internalTesting = config.get(\"internalTesting\");\n    appInsightsCore.initialize(coreConfig, []);\n    appInsightsCore.addTelemetryInitializer((envelope) => {\n        envelope[\"ext\"] = envelope[\"ext\"] ?? {};\n        envelope[\"ext\"][\"web\"] = envelope[\"ext\"][\"web\"] ?? {};\n        envelope[\"ext\"][\"web\"][\"consentDetails\"] = \"{\\\"GPC_DataSharingOptIn\\\":false}\";\n        // Only add the remaining flags when `telemetry.internalTesting` is enabled\n        if (!internalTesting) {\n            return;\n        }\n        envelope[\"ext\"][\"utc\"] = envelope[\"ext\"][\"utc\"] ?? {};\n        // Sets it to be internal only based on Windows UTC flagging\n        envelope[\"ext\"][\"utc\"][\"flags\"] = 0x0000811ECD;\n    });\n    return appInsightsCore;\n};\n/**\n * Configures and creates a telemetry client using the 1DS sdk\n * @param key The ingestion key\n * @param xhrOverride An optional override to use for requests instead of the XHTMLRequest object. Useful for node environments\n */\nconst oneDataSystemClientFactory = async (key, vscodeAPI, xhrOverride) => {\n    let appInsightsCore = await getAICore(key, vscodeAPI, xhrOverride);\n    const flushOneDS = async () => {\n        try {\n            const flushPromise = new Promise((resolve, reject) => {\n                if (!appInsightsCore) {\n                    resolve();\n                    return;\n                }\n                appInsightsCore.flush(true, (completedFlush) => {\n                    if (!completedFlush) {\n                        reject(\"Failed to flush app 1DS!\");\n                        return;\n                    }\n                });\n            });\n            return flushPromise;\n        }\n        catch (e) {\n            throw new Error(\"Failed to flush 1DS!\\n\" + e.message);\n        }\n    };\n    // Shape the app insights core from 1DS into a standard format\n    const telemetryClient = {\n        logEvent: (eventName, data) => {\n            try {\n                appInsightsCore?.track({\n                    name: eventName,\n                    baseData: { name: eventName, properties: data?.properties, measurements: data?.measurements }\n                });\n            }\n            catch (e) {\n                throw new Error(\"Failed to log event to app insights!\\n\" + e.message);\n            }\n        },\n        flush: flushOneDS,\n        dispose: async () => {\n            const disposePromise = new Promise((resolve) => {\n                if (!appInsightsCore) {\n                    resolve();\n                    return;\n                }\n                appInsightsCore.unload(false, () => {\n                    resolve();\n                    appInsightsCore = undefined;\n                    return;\n                }, 1000);\n            });\n            return disposePromise;\n        }\n    };\n    return telemetryClient;\n};\nexports.oneDataSystemClientFactory = oneDataSystemClientFactory;\n//# sourceMappingURL=1dsClientFactory.js.map","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.appInsightsClientFactory = void 0;\nconst applicationinsights_common_1 = require(\"@microsoft/applicationinsights-common\");\nconst util_1 = require(\"./util\");\nconst appInsightsClientFactory = async (connectionString, machineId, xhrOverride, replacementOptions) => {\n    let appInsightsClient;\n    try {\n        const basicAISDK = await Promise.resolve().then(() => __importStar(require(\"@microsoft/applicationinsights-web-basic\")));\n        const extensionConfig = {};\n        if (xhrOverride) {\n            // Configure the channel to use a XHR Request override since it's not available in node\n            const channelConfig = {\n                alwaysUseXhrOverride: true,\n                httpXHROverride: xhrOverride\n            };\n            extensionConfig[applicationinsights_common_1.BreezeChannelIdentifier] = channelConfig;\n        }\n        appInsightsClient = new basicAISDK.ApplicationInsights({\n            connectionString: connectionString,\n            disableAjaxTracking: true,\n            disableExceptionTracking: true,\n            disableFetchTracking: true,\n            disableCorrelationHeaders: true,\n            disableCookiesUsage: true,\n            autoTrackPageVisitTime: false,\n            emitLineDelimitedJson: false,\n            disableInstrumentationKeyValidation: true,\n            extensionConfig,\n        });\n    }\n    catch (e) {\n        return Promise.reject(e);\n    }\n    // Sets the appinsights client into a standardized form\n    const telemetryClient = {\n        logEvent: (eventName, data) => {\n            const properties = { ...data?.properties, ...data?.measurements };\n            if (replacementOptions?.length) {\n                util_1.TelemetryUtil.applyReplacements(properties, replacementOptions);\n            }\n            appInsightsClient?.track({\n                name: eventName,\n                data: properties,\n                baseType: \"EventData\",\n                ext: { user: { id: machineId, authId: machineId } },\n                baseData: { name: eventName, properties: data?.properties, measurements: data?.measurements }\n            });\n        },\n        flush: async () => {\n            appInsightsClient?.flush(false);\n        },\n        dispose: async () => {\n            const unloadPromise = new Promise((resolve) => {\n                appInsightsClient?.unload(true, () => {\n                    resolve();\n                    appInsightsClient = undefined;\n                }, 1000);\n            });\n            return unloadPromise;\n        }\n    };\n    return telemetryClient;\n};\nexports.appInsightsClientFactory = appInsightsClientFactory;\n//# sourceMappingURL=appInsightsClientFactory.js.map","\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseTelemetryReporter = void 0;\nclass BaseTelemetryReporter {\n    constructor(telemetrySender, vscodeAPI, initializationOptions) {\n        this.telemetrySender = telemetrySender;\n        this.vscodeAPI = vscodeAPI;\n        this.userOptIn = false;\n        this.errorOptIn = false;\n        this.disposables = [];\n        this._onDidChangeTelemetryLevel = new this.vscodeAPI.EventEmitter();\n        this.onDidChangeTelemetryLevel = this._onDidChangeTelemetryLevel.event;\n        this.telemetryLogger = this.vscodeAPI.env.createTelemetryLogger(this.telemetrySender, initializationOptions);\n        // Keep track of the user's opt-in status\n        this.updateUserOptIn();\n        this.telemetryLogger.onDidChangeEnableStates(() => {\n            this.updateUserOptIn();\n        });\n    }\n    /**\n     * Updates the user's telemetry opt-in status\n     */\n    updateUserOptIn() {\n        this.errorOptIn = this.telemetryLogger.isErrorsEnabled;\n        this.userOptIn = this.telemetryLogger.isUsageEnabled;\n        // The sender is lazy loaded so if telemetry is off it's not loaded in\n        if (this.telemetryLogger.isErrorsEnabled || this.telemetryLogger.isUsageEnabled) {\n            this.telemetrySender.instantiateSender();\n        }\n        this._onDidChangeTelemetryLevel.fire(this.telemetryLevel);\n    }\n    get telemetryLevel() {\n        if (this.errorOptIn && this.userOptIn) {\n            return \"all\";\n        }\n        else if (this.errorOptIn) {\n            return \"error\";\n        }\n        else {\n            return \"off\";\n        }\n    }\n    /**\n     * Internal function which logs telemetry events and takes extra options.\n     * @param eventName The name of the event\n     * @param properties The properties of the event\n     * @param measurements The measurements (numeric values) to send with the event\n     * @param sanitize Whether or not to sanitize to the properties and measures\n     * @param dangerous Whether or not to ignore telemetry level\n     */\n    internalSendTelemetryEvent(eventName, properties, measurements, dangerous) {\n        // If it's dangerous we skip going through the logger as the logger checks opt-in status, etc.\n        if (dangerous) {\n            this.telemetrySender.sendEventData(eventName, { properties, measurements });\n        }\n        else {\n            this.telemetryLogger.logUsage(eventName, { properties, measurements });\n        }\n    }\n    /**\n     * Given an event name, some properties, and measurements sends a telemetry event.\n     * Properties are sanitized on best-effort basis to remove sensitive data prior to sending.\n     * @param eventName The name of the event\n     * @param properties The properties to send with the event\n     * @param measurements The measurements (numeric values) to send with the event\n     */\n    sendTelemetryEvent(eventName, properties, measurements) {\n        this.internalSendTelemetryEvent(eventName, properties, measurements, false);\n    }\n    /**\n     * Sends a raw (unsanitized) telemetry event with the given properties and measurements.\n     * NOTE: This will not be logged to the output channel due to API limitations.\n     * @param eventName The name of the event\n     * @param properties The set of properties to add to the event in the form of a string key value pair\n     * @param measurements The set of measurements to add to the event in the form of a string key  number value pair\n     */\n    sendRawTelemetryEvent(eventName, properties, measurements) {\n        const modifiedProperties = { ...properties };\n        for (const propertyKey of Object.keys(modifiedProperties ?? {})) {\n            const propertyValue = modifiedProperties[propertyKey];\n            if (typeof propertyKey === \"string\" && propertyValue !== undefined) {\n                // Trusted values are not sanitized, which is what we want for raw telemetry\n                modifiedProperties[propertyKey] = new this.vscodeAPI.TelemetryTrustedValue(typeof propertyValue === \"string\" ? propertyValue : propertyValue.value);\n            }\n        }\n        this.sendTelemetryEvent(eventName, modifiedProperties, measurements);\n    }\n    /**\n     * **DANGEROUS** Given an event name, some properties, and measurements sends a telemetry event without checking telemetry setting\n     * Do not use unless in a controlled environment i.e. sending telmetry from a CI pipeline or testing during development\n     * @param eventName The name of the event\n     * @param properties The properties to send with the event\n     * @param measurements The measurements (numeric values) to send with the event\n     * @param sanitize Whether or not to sanitize to the properties and measures, defaults to true\n     */\n    sendDangerousTelemetryEvent(eventName, properties, measurements) {\n        // Since telemetry is probably off when sending dangerously, we must start the sender\n        this.telemetrySender.instantiateSender();\n        this.internalSendTelemetryEvent(eventName, properties, measurements, true);\n    }\n    /**\n     * Internal function which logs telemetry error events and takes extra options.\n     * @param eventName The name of the event\n     * @param properties The properties of the event\n     * @param measurements The measurements (numeric values) to send with the event\n     * @param sanitize Whether or not to sanitize to the properties and measures\n     * @param dangerous Whether or not to ignore telemetry level\n     */\n    internalSendTelemetryErrorEvent(eventName, properties, measurements, dangerous) {\n        if (dangerous) {\n            this.telemetrySender.sendEventData(eventName, { properties, measurements });\n        }\n        else {\n            this.telemetryLogger.logError(eventName, { properties, measurements });\n        }\n    }\n    /**\n     * Given an event name, some properties, and measurements sends an error event\n     * @param eventName The name of the event\n     * @param properties The properties to send with the event\n     * @param measurements The measurements (numeric values) to send with the event\n     */\n    sendTelemetryErrorEvent(eventName, properties, measurements) {\n        this.internalSendTelemetryErrorEvent(eventName, properties, measurements, false);\n    }\n    /**\n     * **DANGEROUS** Given an event name, some properties, and measurements sends a telemetry error event without checking telemetry setting\n     * Do not use unless in a controlled environment i.e. sending telmetry from a CI pipeline or testing during development\n     * @param eventName The name of the event\n     * @param properties The properties to send with the event\n     * @param measurements The measurements (numeric values) to send with the event\n     * @param sanitize Whether or not to run the properties and measures through sanitiziation, defaults to true\n     */\n    sendDangerousTelemetryErrorEvent(eventName, properties, measurements) {\n        // Since telemetry is probably off when sending dangerously, we must start the sender\n        this.telemetrySender.instantiateSender();\n        this.internalSendTelemetryErrorEvent(eventName, properties, measurements, true);\n    }\n    /**\n     * Disposes of the telemetry reporter\n     */\n    async dispose() {\n        await this.telemetrySender.dispose();\n        this.telemetryLogger.dispose();\n        return Promise.all(this.disposables.map(d => d.dispose()));\n    }\n}\nexports.BaseTelemetryReporter = BaseTelemetryReporter;\n//# sourceMappingURL=baseTelemetryReporter.js.map","\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseTelemetrySender = void 0;\nvar InstantiationStatus;\n(function (InstantiationStatus) {\n    InstantiationStatus[InstantiationStatus[\"NOT_INSTANTIATED\"] = 0] = \"NOT_INSTANTIATED\";\n    InstantiationStatus[InstantiationStatus[\"INSTANTIATING\"] = 1] = \"INSTANTIATING\";\n    InstantiationStatus[InstantiationStatus[\"INSTANTIATED\"] = 2] = \"INSTANTIATED\";\n})(InstantiationStatus || (InstantiationStatus = {}));\nclass BaseTelemetrySender {\n    constructor(key, clientFactory) {\n        // Whether or not the client has been instantiated\n        this._instantiationStatus = InstantiationStatus.NOT_INSTANTIATED;\n        // Queues used to store events until the sender is ready\n        this._eventQueue = [];\n        this._exceptionQueue = [];\n        this._clientFactory = clientFactory;\n        this._key = key;\n    }\n    /**\n     * Sends the event to the passed in telemetry client\n     * The sender does no telemetry level checks as those are done by the reporter.\n     * @param eventName The name of the event to log\n     * @param data The data contanied in the event\n     */\n    sendEventData(eventName, data) {\n        if (!this._telemetryClient) {\n            if (this._instantiationStatus !== InstantiationStatus.INSTANTIATED) {\n                this._eventQueue.push({ eventName, data });\n            }\n            return;\n        }\n        this._telemetryClient.logEvent(eventName, data);\n    }\n    /**\n     * Sends an exception to the passed in telemetry client\n     * The sender does no telemetry level checks as those are done by the reporter.\n     * @param exception The exception to collect\n     * @param data Data associated with the exception\n     */\n    sendErrorData(exception, data) {\n        if (!this._telemetryClient) {\n            if (this._instantiationStatus !== InstantiationStatus.INSTANTIATED) {\n                this._exceptionQueue.push({ exception, data });\n            }\n            return;\n        }\n        const errorData = { stack: exception.stack, message: exception.message, name: exception.name };\n        if (data) {\n            const errorProperties = data.properties || data;\n            data.properties = { ...errorProperties, ...errorData };\n        }\n        else {\n            data = { properties: errorData };\n        }\n        this._telemetryClient.logEvent(\"unhandlederror\", data);\n    }\n    /**\n     * Flushes the buffered telemetry data\n     */\n    async flush() {\n        return this._telemetryClient?.flush();\n    }\n    async dispose() {\n        if (this._telemetryClient) {\n            await this._telemetryClient.dispose();\n            this._telemetryClient = undefined;\n        }\n        return;\n    }\n    /**\n     * Flushes the queued events that existed before the client was instantiated\n     */\n    _flushQueues() {\n        this._eventQueue.forEach(({ eventName, data }) => this.sendEventData(eventName, data));\n        this._eventQueue = [];\n        this._exceptionQueue.forEach(({ exception, data }) => this.sendErrorData(exception, data));\n        this._exceptionQueue = [];\n    }\n    /**\n     * Instantiates the telemetry client to make the sender \"active\"\n     */\n    instantiateSender() {\n        if (this._instantiationStatus !== InstantiationStatus.NOT_INSTANTIATED) {\n            return;\n        }\n        this._instantiationStatus = InstantiationStatus.INSTANTIATING;\n        // Call the client factory to get the client and then let it know it's instatntiated\n        this._clientFactory(this._key).then(client => {\n            this._telemetryClient = client;\n            this._instantiationStatus = InstantiationStatus.INSTANTIATED;\n            this._flushQueues();\n        }).catch(err => {\n            console.error(err);\n            // If it failed to instntiate, then we don't want to try again.\n            // So we mark it as instantiated. See #94\n            this._instantiationStatus = InstantiationStatus.INSTANTIATED;\n        });\n    }\n}\nexports.BaseTelemetrySender = BaseTelemetrySender;\n//# sourceMappingURL=baseTelemetrySender.js.map","\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TelemetryUtil = void 0;\nclass TelemetryUtil {\n    static applyReplacements(data, replacementOptions) {\n        for (const key of Object.keys(data)) {\n            for (const option of replacementOptions) {\n                if (option.lookup.test(key)) {\n                    if (option.replacementString !== undefined) {\n                        data[key] = option.replacementString;\n                    }\n                    else {\n                        delete data[key];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Given a key / connection string checks if it is a valid 1DS key\n     * @param key The key to check if it's a valid 1DS key\n     */\n    static shouldUseOneDataSystemSDK(key) {\n        // Simple to check to ensure the key is the right length and the dashes are in the right spot\n        return (key.length === 74 &&\n            key[32] === \"-\" &&\n            key[41] === \"-\" &&\n            key[46] === \"-\" &&\n            key[51] === \"-\" &&\n            key[56] === \"-\" &&\n            key[69] === \"-\");\n    }\n    // This also includes the common properties which core mixes in\n    // __GDPR__COMMON__ \"common.os\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.nodeArch\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.platformversion\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.extname\" : { \"classification\": \"PublicNonPersonalData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.extversion\" : { \"classification\": \"PublicNonPersonalData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.vscodemachineid\" : { \"endPoint\": \"MacAddressHash\", \"classification\": \"EndUserPseudonymizedInformation\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.vscodesessionid\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.vscodeversion\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.uikind\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.remotename\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.isnewappinstall\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.product\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.telemetryclientversion\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    static getAdditionalCommonProperties(osShim) {\n        return {\n            \"common.os\": osShim.platform,\n            \"common.nodeArch\": osShim.architecture,\n            \"common.platformversion\": (osShim.release || \"\").replace(/^(\\d+)(\\.\\d+)?(\\.\\d+)?(.*)/, \"$1$2$3\"),\n            // Do not change this string as it gets found and replaced upon packaging\n            \"common.telemetryclientversion\": \"0.9.7\"\n        };\n    }\n    // Get singleton instance of TelemetryUtil\n    static getInstance() {\n        if (!TelemetryUtil._instance) {\n            TelemetryUtil._instance = new TelemetryUtil();\n        }\n        return TelemetryUtil._instance;\n    }\n}\nexports.TelemetryUtil = TelemetryUtil;\n//# sourceMappingURL=util.js.map","\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst https = __importStar(require(\"https\"));\nconst os = __importStar(require(\"os\"));\nconst vscode = __importStar(require(\"vscode\"));\nconst _1dsClientFactory_1 = require(\"../common/1dsClientFactory\");\nconst appInsightsClientFactory_1 = require(\"../common/appInsightsClientFactory\");\nconst baseTelemetryReporter_1 = require(\"../common/baseTelemetryReporter\");\nconst baseTelemetrySender_1 = require(\"../common/baseTelemetrySender\");\nconst util_1 = require(\"../common/util\");\n/**\n * Create a replacement for the XHTMLRequest object utilizing nodes HTTP module.\n * @returns A XHR override object used to override the XHTMLRequest object in the 1DS SDK\n */\nfunction getXHROverride() {\n    // Override the way events get sent since node doesn't have XHTMLRequest\n    const customHttpXHROverride = {\n        sendPOST: (payload, oncomplete) => {\n            const options = {\n                method: \"POST\",\n                headers: {\n                    ...payload.headers,\n                    \"Content-Type\": \"application/json\",\n                    \"Content-Length\": Buffer.byteLength(payload.data)\n                }\n            };\n            try {\n                const req = https.request(payload.urlString, options, res => {\n                    res.on(\"data\", function (responseData) {\n                        oncomplete(res.statusCode ?? 200, res.headers, responseData.toString());\n                    });\n                    // On response with error send status of 0 and a blank response to oncomplete so we can retry events\n                    res.on(\"error\", function () {\n                        oncomplete(0, {});\n                    });\n                });\n                req.write(payload.data, (err) => {\n                    if (err) {\n                        oncomplete(0, {});\n                    }\n                });\n                req.end();\n            }\n            catch {\n                // If it errors out, send status of 0 and a blank response to oncomplete so we can retry events\n                oncomplete(0, {});\n            }\n        }\n    };\n    return customHttpXHROverride;\n}\nclass TelemetryReporter extends baseTelemetryReporter_1.BaseTelemetryReporter {\n    constructor(connectionString, replacementOptions) {\n        let clientFactory = (connectionString) => (0, appInsightsClientFactory_1.appInsightsClientFactory)(connectionString, vscode.env.machineId, getXHROverride(), replacementOptions);\n        // If connection string is usable by 1DS use the 1DS SDk\n        if (util_1.TelemetryUtil.shouldUseOneDataSystemSDK(connectionString)) {\n            clientFactory = (key) => (0, _1dsClientFactory_1.oneDataSystemClientFactory)(key, vscode, getXHROverride());\n        }\n        const osShim = {\n            release: os.release(),\n            platform: os.platform(),\n            architecture: os.arch(),\n        };\n        const sender = new baseTelemetrySender_1.BaseTelemetrySender(connectionString, clientFactory);\n        if (connectionString && connectionString.indexOf(\"AIF-\") === 0) {\n            throw new Error(\"AIF keys are no longer supported. Please switch to 1DS keys for 1st party extensions\");\n        }\n        super(sender, vscode, { additionalCommonProperties: util_1.TelemetryUtil.getAdditionalCommonProperties(osShim) });\n    }\n}\nexports.default = TelemetryReporter;\n//# sourceMappingURL=telemetryReporter.js.map","\r\nimport * as vscode from \"vscode\";\r\nimport * as path from \"path\";\r\nimport * as utils from \"./modules/utils\";\r\nimport {DebugProtocol} from '@vscode/debugprotocol';\r\nimport {jsx, fragment, codicons} from \"./modules/jsx\";\r\nimport {reporter} from \"./extension\";\r\n\r\n//-----------------------------------------------------------------------------\r\n//\tModuleViewProvider\r\n//-----------------------------------------------------------------------------\r\n\r\ntype Module = DebugProtocol.Module & {\r\n\t[key: string]: any;\r\n};\r\n\r\ninterface ColumnDescriptor {\r\n\tlabel:\t\tstring;\r\n\ttype?:\t\t'string' | 'number' | 'boolean' | 'time' | 'path';\r\n\thtml?: \t\t(m: Module)=>string;\r\n}\r\n\r\nfunction descriptorBoolean(label: string, id: string) : ColumnDescriptor {\r\n\treturn {label, type: 'boolean', html: m => <td>{m[id] == undefined ? '?' : m[id] ? 'Yes' : 'No'}</td>};\r\n}\r\nfunction descriptorAddress(label: string, id: string) : ColumnDescriptor {\r\n\treturn {label, type: 'number', html: m => <td id={m.id+'-start'}>{m[id] ?? 'N/A'}</td>};\r\n}\r\nfunction descriptorPath(label: string, id: string) : ColumnDescriptor {\r\n\treturn {label, type: 'path', html: m => {\r\n\t\tconst filename = m[id] ?? '';\r\n\t\treturn <td class=\"path\" title={filename}>\r\n\t\t\t<span>{path.dirname(filename)}</span>\r\n\t\t\t<span>{path.sep + path.basename(filename)}</span>\r\n\t\t</td>;\r\n\t}};\r\n}\r\n\r\n\r\nconst column_descriptors: Record<string, ColumnDescriptor> = {\r\n//\tid: \t\t\t{label:\t'ID', \t\ttype: 'number'},\r\n\tvsLoadOrder:\t{label: 'Order',\t\ttype: 'number'},\r\n\tname: \t\t\t{label: 'Name',\t\t\t\t\t\t\t\thtml: m => <td>{path.basename(m.name)}</td>},\r\n\taddressRange:  \tdescriptorAddress('Address', 'addressRange'),\r\n\tvsLoadAddress: \tdescriptorAddress(\"Address\", 'vsLoadAddress'),\r\n\tvsModuleSize: \t{label: \"Size\",\t\t\ttype: 'number'},\r\n\tpath:   \t\tdescriptorPath('Path', 'path'),\r\n\tvsIs64Bit: \t\tdescriptorBoolean(\"64 Bit\", 'vsIs64Bit'),\r\n\tisOptimized:   \tdescriptorBoolean('Optimized', 'isOptimized'),\r\n\tisUserCode: \tdescriptorBoolean('User Code', 'isUserCode'),\r\n\tversion:    \t{label: 'Version'},\r\n\tsymbolFilePath:\t{label: 'Symbols',\t\t\t\t\t\t\thtml: m => <td>{m.symbolFilePath ?? m.symbolStatus}</td>},\r\n\tdateTimeStamp: \t{label: 'Time Stamp',\ttype: 'time'},\r\n\tvsTimestampUTC: {label: 'Time Stamp',\ttype: 'time',\t\thtml: m => <td>{new Date(m.vsTimestampUTC * 1000).toUTCString()}</td>},\r\n\t//\tvsPreferredLoadAddress: \"4324950016\",\r\n};\r\n\r\nfunction getModuleAddress(session: vscode.DebugSession, frameId: number, m: Module, func: string) {\r\n\treturn session.customRequest('evaluate', { \r\n\t\texpression: `((void*(*)(const char*))(${func}))(\"${m.name}\")`,\r\n\t\tframeId,\r\n\t\tcontext: \t'repl'\r\n\t}).then(\r\n\t\tresp => resp.memoryReference,\r\n\t\terror => (console.log(error), undefined)\r\n\t);\r\n}\r\n\r\n\r\nasync function getModuleAddressFunction(session: vscode.DebugSession, frameId: number) : Promise<string> {\r\n\tlet resp = await session.customRequest('evaluate', { \r\n\t\texpression: 'GetModuleHandleA',\r\n\t\tframeId,\r\n\t\tcontext: \t'repl'\r\n\t});\r\n\tif (resp.memoryReference)\r\n\t\treturn resp.memoryReference;\r\n\t\r\n\tresp = await session.customRequest('evaluate', { \r\n\t\texpression: 'kernel32!GetModuleHandleA',\r\n\t\tframeId,\r\n\t\tcontext: \t'repl'\r\n\t});\r\n\tif (resp.memoryReference)\r\n\t\treturn resp.memoryReference;\r\n\r\n\treturn '';\r\n}\r\n\r\nconst DEBUG_MEMORY_SCHEME = 'vscode-debug-memory';\r\nconst getUriForDebugMemory = (\r\n\tsessionId: string,\r\n\tmemoryReference: string,\r\n\trange?: { fromOffset: number; toOffset: number },\r\n\tdisplayName = 'memory'\r\n) => {\r\n\treturn vscode.Uri.from({\r\n\t\tscheme: DEBUG_MEMORY_SCHEME,\r\n\t\tauthority: sessionId,\r\n\t\tpath: '/' + encodeURIComponent(memoryReference) + `/${encodeURIComponent(displayName)}.bin`,\r\n\t\tquery: range ? `?range=${range.fromOffset}:${range.toOffset}` : undefined,\r\n\t});\r\n};\r\n\r\nconst DEBUG_SOURCE_SCHEME = 'vscode-debug-source';\r\nconst getUriForDebugSource = (\r\n\tsessionId: string,\r\n\tsourceReference: number,\r\n\tdisplayName: string\r\n) => {\r\n\treturn vscode.Uri.from({\r\n\t\tscheme: DEBUG_SOURCE_SCHEME,\r\n\t\tauthority: sessionId,\r\n\t\tpath: '/' + sourceReference.toString() + '/' + displayName,\r\n\t});\r\n};\r\n\r\nclass DebugSourceTextProvider implements vscode.TextDocumentContentProvider {\r\n\tasync provideTextDocumentContent(uri: vscode.Uri) {\r\n\t\tconst sessionId = uri.authority;\r\n\t\tconst parts = uri.path.split('/');\r\n\t\tconst sourceReference = +parts[1];\r\n\t\tif (vscode.debug.activeDebugSession?.id === sessionId) {\r\n\t\t\tconst resp = await vscode.debug.activeDebugSession.customRequest('source', {sourceReference});\r\n\t\t\treturn resp.content;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nasync function openPreview(uri: vscode.Uri) {\r\n\tconst document = await vscode.workspace.openTextDocument(uri);\r\n\tawait vscode.window.showTextDocument(document, {\r\n\t\tpreview: true,\r\n\t\tviewColumn: vscode.ViewColumn.Active\r\n\t});\r\n}\r\n\r\n\r\nfunction by_id(id: string | number) {\r\n\tif (typeof id === 'number')\r\n\t\treturn `[id=\"${id}\"]`;\r\n\r\n\tid = id.replace(/[!\"#$%&'()*+,./:;<=>?@[\\\\\\]^`{|}~]/g, \"\\\\$&\");\r\n\treturn id[0] >= '0' && id[0] <= '9' ? `[id=\"${id}\"]` : `#${id}`;\r\n}\r\n\r\nexport class ModuleWebViewProvider implements vscode.WebviewViewProvider, vscode.DebugAdapterTracker {\r\n\tprivate view?: vscode.WebviewView;\r\n\tprivate receive?: vscode.Disposable;\r\n\tprivate update\t= new utils.CallCombiner(async () => {\r\n\t\tif (this.view)\r\n\t\t\tthis.view.webview.html = this.updateView();\r\n\t}, 100);\r\n\r\n\tmodules: Record<string, Module> = {};\r\n\taddress_function\t= '';\r\n\taddress_requested\t= new Set<Module>();\r\n\tnextOrder\t\t\t= 0;\r\n\tselected_id?: string;\r\n\r\n\tconstructor(private context: vscode.ExtensionContext) {\r\n\t\tconst me = this;\r\n\t\tvscode.debug.registerDebugAdapterTrackerFactory('*', {\r\n            createDebugAdapterTracker(session: vscode.DebugSession) {\r\n                return me;\r\n            }\r\n        });\r\n\t\tvscode.workspace.registerTextDocumentContentProvider(DEBUG_SOURCE_SCHEME, new DebugSourceTextProvider);\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tthis.receive?.dispose();\r\n\t}\r\n\t\t\r\n\tprivate setText(id: string, value:any) {\r\n\t\tthis.view?.webview.postMessage({command: 'set_text', id, value});\r\n\t}\r\n\tprivate addClass(selector: string, clss: string, enable:boolean) {\r\n\t\tthis.view?.webview.postMessage({command: 'add_class', selector, class: clss, enable});\r\n\t}\r\n\r\n\tprivate async fixModuleAddresses(session: vscode.DebugSession) {\r\n\t\tconst filtered = Object.values(this.modules).filter(m => !m.addressRange && !m.vsLoadAddress && !this.address_requested.has(m));\r\n\t\tif (filtered.length) {\r\n\t\t\tif (!this.address_function)\r\n\t\t\t\tthis.address_function = await getModuleAddressFunction(session, 1000);\r\n\r\n\t\t\tutils.asyncMap(filtered, async m => {\r\n\t\t\t\tthis.address_requested.add(m);\r\n\t\t\t\tm.addressRange = await getModuleAddress(session, 1000, m, this.address_function);\r\n\t\t\t\tif (m.addressRange)\r\n\t\t\t\t\tthis.setText(m.id+'-start', m.addressRange);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tasync resolveWebviewView(webviewView: vscode.WebviewView, context: vscode.WebviewViewResolveContext, token: vscode.CancellationToken): Promise<void> {\r\n\t\tthis.view = webviewView;\r\n\r\n\t\twebviewView.webview.options = {\r\n\t\t\tenableScripts: true,\r\n\t\t\tlocalResourceRoots: [vscode.Uri.joinPath(this.context.extensionUri, 'assets')]\r\n\t\t};\r\n\r\n\t\tthis.receive = webviewView.webview.onDidReceiveMessage(async message => {\r\n\t\t\tswitch (message.command) {\r\n\t\t\t\tcase 'select': {\r\n\t\t\t\t\tconst m = this.modules[message.id];\r\n\t\t\t\t\tif (message.id !== this.selected_id) {\r\n\t\t\t\t\t\tif (this.selected_id)\r\n\t\t\t\t\t\t\tthis.addClass(by_id(this.selected_id), 'selected', false);\r\n\t\t\t\t\t\tthis.selected_id = message.id;\r\n\t\t\t\t\t\tthis.addClass(by_id(message.id), 'selected', true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tcase 'click': {\r\n\t\t\t\t\tconst m = this.modules[message.id];\r\n\t\t\t\t\tconst session = vscode.debug.activeDebugSession;\r\n\t\t\t\t\tif (session && m.addressRange) {\r\n\t\t\t\t\t\t//vscode.commands.executeCommand('workbench.debug.viewlet.action.viewMemory', m.addressRange);\r\n\t\t\t\t\t\tconst uri = getUriForDebugMemory(session.id, m.addressRange, undefined, m.name);\r\n\t\t\t\t\t\tawait vscode.commands.executeCommand('vscode.openWith', uri, 'hexEditor.hexedit');\r\n\t\t\t\t\t} else if (session && m.sourceReference) {\r\n\t\t\t\t\t\topenPreview(getUriForDebugSource(session.id, m.sourceReference, path.extname(m.name) ? m.name : m.name + '.js'));\r\n\t\t\t\t\t} else if (m.path) {\r\n\t\t\t\t\t\topenPreview(vscode.Uri.file(m.path));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.update.trigger();\r\n\t}\r\n\r\n\tonWillStopSession(): void {\r\n\t\tthis.nextOrder\t\t\t= 0;\r\n\t\tthis.selected_id\t\t= undefined;\r\n\t\tthis.address_requested.clear();\r\n\t\tthis.address_function\t= '';\r\n\t\tthis.modules\t\t\t= {};\r\n\t\tthis.update.trigger();\r\n\t}\r\n\r\n\tonDidSendMessage(message: any): void {\r\n\t\tif (message.type === 'response') {\r\n\t\t\tswitch (message.command) {\r\n\t\t\t\tcase 'modules':\r\n\t\t\t\t\tthis.modules = message.body.modules;\r\n\t\t\t\t\tthis.update.trigger();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'stackTrace':\r\n\t\t\t\t\t//cppvsdbg doesn't return module addresses, so we do it by evaluating GetModuleHandleA\r\n\t\t\t\t\t//other debuggers might need their own hacks\r\n\t\t\t\t\tif (vscode.debug.activeDebugSession?.type === 'cppvsdbg')\r\n\t\t\t\t\t\tthis.fixModuleAddresses(vscode.debug.activeDebugSession);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (message.type === 'event') {\r\n\t\t\tswitch (message.event) {\r\n\t\t\t\tcase 'module': {\r\n\t\t\t\t\tconst module = message.body.module;\r\n\t\t\t\t\tswitch (message.body.reason) {\r\n\t\t\t\t\t\tcase 'new':\r\n\t\t\t\t\t\t\tthis.modules[module.id] = {vsLoadOrder: this.nextOrder++, ...module};\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'changed':\r\n\t\t\t\t\t\t\tthis.modules[module.id] = {vsLoadOrder: this.modules[module.id], ...module};\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'removed':\r\n\t\t\t\t\t\t\tdelete this.modules[module.id];\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.update.trigger();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tcase 'loadedSource': {\r\n\t\t\t\t\tconst source = message.body.source;\r\n\t\t\t\t\tconst id = source.sourceReference || source.path;\r\n\t\t\t\t\tswitch (message.body.reason) {\r\n\t\t\t\t\t\tcase 'new':\r\n\t\t\t\t\t\t\tthis.modules[id] = {vsLoadOrder: this.nextOrder++, ...source};\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'changed':\r\n\t\t\t\t\t\t\tthis.modules[id] = {vsLoadOrder: this.modules[id].vsLoadOrder, ...source};\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'removed':\r\n\t\t\t\t\t\t\tdelete this.modules[id];\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.update.trigger();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetUri(name: string) {\r\n\t\treturn  this.view!.webview.asWebviewUri(vscode.Uri.joinPath(this.context.extensionUri, 'assets', name));\r\n\t}\r\n\r\n\tupdateView() : string {\r\n\t\tconst\tmodules = Object.values(this.modules);\r\n\t\tif (modules.length == 0)\r\n\t\t\treturn `<!DOCTYPE html>`+\r\n\t\t\t<html lang=\"en\">\r\n\t\t\t\t<body>\r\n\t\t\t\t\tNo Modules\r\n\t\t\t\t</body>\r\n\t\t\t</html>;\r\n\r\n\t\tconst has_col\t= modules.reduce((cols, m) => (Object.keys(m).forEach(k => cols.add(k)), cols), new Set<string>());\r\n\r\n\t\treporter.sendTelemetryEvent('view.update', {type: vscode.debug.activeDebugSession?.type || 'unknown', cols: Array.from(has_col.keys()).join(',')}, {rows: modules.length});\r\n\r\n\t\tif (has_col.has('vsLoadAddress')) {\r\n\t\t\thas_col.delete('vsLoadAddress');\r\n\t\t\tObject.values(modules).forEach(m => {\r\n\t\t\t\tconst address = parseInt(m.vsLoadAddress ?? '');\r\n\t\t\t\tif (!isNaN(address)) {\r\n\t\t\t\t\tm.addressRange = '0x' + address.toString(16);\r\n\t\t\t\t\tdelete m.vsLoadAddress;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (!has_col.has('addressRange'))\r\n\t\t\thas_col.add('addressRange');\r\n\r\n\t\tconst cols\t\t= Object.keys(column_descriptors).filter(k => has_col.has(k));\r\n\r\n\t\treturn `<!DOCTYPE html>`+\r\n\t\t\t<html lang=\"en\">\r\n\t\t\t\t<head>\r\n\t\t\t\t\t<meta charset=\"UTF-8\"/>\r\n\t\t\t\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\r\n\t\t\t\t\t<link rel=\"stylesheet\" type=\"text/css\" href={this.getUri('modules.css')}/>\r\n\t\t\t\t\t<title>Modules</title>\r\n\t\t\t\t</head>\r\n\t\t\t\t<body>\r\n\t\t\t\t<table>\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t{cols.map(i => \r\n\t\t\t\t\t\t\t\t<th data-type={column_descriptors[i].type}>{column_descriptors[i].label}</th>\r\n\t\t\t\t\t\t\t).join('')}\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{Object.entries(this.modules).map(([id, m]) =>\r\n\t\t\t\t\t\t\t<tr id={id}>{cols.map(i => column_descriptors[i].html ? column_descriptors[i].html(m) : <td>{m[i]}</td>)}</tr>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t\t<script src={this.getUri(\"modules.js\")}></script>\r\n\t\t\t</body></html>;\r\n\t}\r\n}\r\n","import * as vscode from 'vscode';\r\nimport * as https from 'https';\r\nimport {ModuleWebViewProvider} from \"./ModulesView\";\r\nimport TelemetryReporter from '@vscode/extension-telemetry';\r\n\r\nconst connectionString = 'InstrumentationKey=a5c3fd08-7ea0-4e3e-880b-6ad15f12e218;IngestionEndpoint=https://eastus-8.in.applicationinsights.azure.com/;LiveEndpoint=https://eastus.livediagnostics.monitor.azure.com/;ApplicationId=1b2b09f8-a9d1-47ff-a545-db7b32df8510';\r\nexport let reporter: TelemetryReporter;\r\n\r\n//-----------------------------------------------------------------------------\r\n//\tDAP test\r\n//-----------------------------------------------------------------------------\r\n\r\nasync function sendDAPRequest() {\r\n\tinterface DAPRequest {\r\n\t\tcommand: string;\r\n\t\targs?: any;\r\n\t}\r\n\t\r\n\tfunction isDAPRequest(x: unknown): x is DAPRequest {\r\n\t\tif (!x || typeof x !== 'object')\r\n\t\t\treturn false;\r\n\t\tconst num_keys = Object.keys(x).length;\r\n\t\treturn 'command' in x && typeof x.command === 'string' && (num_keys === 1 || num_keys === 2 && 'args' in x);\r\n\t}\r\n\t\r\n\ttry {\r\n\t\tconst session = vscode.debug.activeDebugSession;\r\n\t\tif (!session)\r\n\t\t\tthrow \"There's no active debug session.\";\r\n\r\n\t\tconst editor = vscode.window.activeTextEditor;\r\n\t\tif (!editor)\r\n\t\t\tthrow \"Need an editor.\";\r\n\r\n\t\tconst bodyJSON\t= editor.document.getText(editor.selection.isEmpty ? undefined : editor.selection);\r\n\t\tconst body \t\t= JSON.parse(bodyJSON);\r\n\r\n\t\tif (!isDAPRequest(body))\r\n\t\t\tthrow `Invalid DAP request. It should be of type: { command: string; args?: any }`;\r\n\r\n\t\tconst resp = await session.customRequest(body.command, body.args);\r\n\t\tvscode.debug.activeDebugConsole.appendLine('sendDAPRequest:\\n' + JSON.stringify(resp, undefined, 2));\r\n\r\n\t} catch (error: any) {\r\n\t\tvscode.window.showErrorMessage(error.toString());\r\n\t}\r\n}\r\n\r\n//-----------------------------------------------------------------------------\r\n//\tTelemetry\r\n//-----------------------------------------------------------------------------\r\n\r\nfunction sendTelemetry() {\r\n\tconst iKey = connectionString.split('InstrumentationKey=')[1].split(';')[0];\r\n\tconst ingestionEndpoint = connectionString.split('IngestionEndpoint=')[1].split(';')[0];\r\n\r\n\tconst data = JSON.stringify({\r\n\t\tname: 'Microsoft.ApplicationInsights.Event',\r\n\t\ttime: new Date().toISOString(),\r\n\t\tiKey: iKey,\r\n\t\ttags: {'ai.cloud.roleInstance': 'test-instance'},\r\n\t\tdata: {'baseType': 'EventData', 'baseData': {'ver': 2, 'name': 'test event', 'properties': {'TestProperty': 'TestValue'}}}\r\n\t});\r\n\r\n\tconst options = {\r\n\t\thostname: new URL(ingestionEndpoint).hostname,\r\n\t\tpath: '/v2/track',\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Content-Length': Buffer.byteLength(data)\r\n\t\t}\r\n\t};\r\n\r\n\tconst req = https.request(options, res => {\r\n\t\tconsole.log('Status Code:', res.statusCode);\r\n\t\tres.on('data', chunk => console.log('Response body:', chunk.toString()));\r\n\t});\r\n\r\n\treq.on('error', (error) => { console.error('Error:', error); });\r\n\r\n\treq.write(data);\r\n\treq.end();\r\n}\r\n\r\n//-----------------------------------------------------------------------------\r\n//\tmain entry\r\n//-----------------------------------------------------------------------------\r\n\r\n\r\nexport function activate(context: vscode.ExtensionContext) {\r\n\treporter = new TelemetryReporter(connectionString);\r\n\tcontext.subscriptions.push(reporter);\r\n\treporter.sendTelemetryEvent('extension.activate');\r\n\r\n\tcontext.subscriptions.push(vscode.window.registerWebviewViewProvider('modules-view', new ModuleWebViewProvider(context)));\r\n\tcontext.subscriptions.push(vscode.commands.registerCommand('modules.sendDAPRequest', sendDAPRequest));\r\n}\r\n\r\nexport function deactivate() {\r\n\tconsole.log('deactivate');\r\n}\r\n","function jsx_props(props: any): string {\r\n\treturn Object.entries(props || {}).map(([k, v]) =>\r\n\t\ttypeof(v) === 'boolean'\r\n\t\t\t? (v ? k : '')\r\n\t\t\t: `${k}=\"${v}\"`\r\n\t).join(' ');\r\n}\r\n\r\nfunction jsx_children(...children: any[]): string {\r\n\treturn children.flat().map(child =>\r\n\t\t\ttypeof child === 'object'\r\n\t\t?\tjsx(child.type, child.props, ...child.children ?? [])\r\n\t\t:\tchild?.toString() ?? ''\r\n\t).join('');\r\n}\r\n\r\nexport function jsx(type: any, props: any, ...children: any[]): string {\r\n\ttry {\r\n\t\tif (typeof type === 'function')\r\n\t\t\treturn type(props, ...children);\r\n\r\n\t\treturn `<${type} ${jsx_props(props)}>${jsx_children(...children)}</${type}>`;\r\n\r\n\t\treturn children.length\r\n\t\t\t? `<${type} ${jsx_props(props)}>${jsx_children(...children)}</${type}>`\r\n\t\t\t: `<${type} ${jsx_props(props)}/>`;\r\n\t} catch (e) {\r\n\t\tconsole.log(e);\r\n\t\tthrow e;\r\n\t}\r\n}\r\n\r\nexport function fragment(props: any, ...children: any[]): string {\r\n\treturn jsx_children(...children);\r\n}\r\n\r\n//export type Element = ReturnType<typeof jsx>;\r\n\r\n\r\nexport const codicons = {\r\n\tadd:\t    \t\t\t\t\t\t\t 0xea60,\r\n\tlightbulb:\t    \t\t\t\t\t\t 0xea61,\r\n\trepo:\t    \t\t\t\t\t\t\t 0xea62,\r\n\tfork:\t    \t\t\t\t\t\t\t 0xea63,\r\n\tpullRequest:\t    \t\t\t\t\t 0xea64,\r\n\tkeyboard:\t    \t\t\t\t\t\t 0xea65,\r\n\ttag:\t    \t\t\t\t\t\t\t 0xea66,\r\n\tperson:\t    \t\t\t\t\t\t\t 0xea67,\r\n\tbranch:\t    \t\t\t\t\t\t\t 0xea68,\r\n\tmirror:\t    \t\t\t\t\t\t\t 0xea69,\r\n\tstar:\t    \t\t\t\t\t\t\t 0xea6a,\r\n\tcomment:\t    \t\t\t\t\t\t 0xea6b,\r\n\talert:\t    \t\t\t\t\t\t\t 0xea6c,\r\n\tsearch:\t    \t\t\t\t\t\t\t 0xea6d,\r\n\tlogOut:\t    \t\t\t\t\t\t\t 0xea6e,\r\n\tlogIn:\t    \t\t\t\t\t\t\t 0xea6f,\r\n\teye:\t    \t\t\t\t\t\t\t 0xea70,\r\n\tcircleFilled:\t    \t\t\t\t\t 0xea71,\r\n\tprimitiveSquare:\t    \t\t\t\t 0xea72,\r\n\tpencil:\t    \t\t\t\t\t\t\t 0xea73,\r\n\tinfo:\t    \t\t\t\t\t\t\t 0xea74,\r\n\tprivate:\t    \t\t\t\t\t\t 0xea75,\r\n\tclose:\t    \t\t\t\t\t\t\t 0xea76,\r\n\tsync:\t    \t\t\t\t\t\t\t 0xea77,\r\n\tclone:\t    \t\t\t\t\t\t\t 0xea78,\r\n\tbeaker:\t    \t\t\t\t\t\t\t 0xea79,\r\n\tdesktop:\t    \t\t\t\t\t\t 0xea7a,\r\n\tfile:\t    \t\t\t\t\t\t\t 0xea7b,\r\n\tellipsis:\t    \t\t\t\t\t\t 0xea7c,\r\n\treply:\t    \t\t\t\t\t\t\t 0xea7d,\r\n\torganization:\t    \t\t\t\t\t 0xea7e,\r\n\tnewFile:\t    \t\t\t\t\t\t 0xea7f,\r\n\tnewFolder:\t    \t\t\t\t\t\t 0xea80,\r\n\ttrash:\t    \t\t\t\t\t\t\t 0xea81,\r\n\tclock:\t    \t\t\t\t\t\t\t 0xea82,\r\n\tfolder:\t    \t\t\t\t\t\t\t 0xea83,\r\n\tgithub:\t    \t\t\t\t\t\t\t 0xea84,\r\n\tterminal:\t    \t\t\t\t\t\t 0xea85,\r\n\tsymbolEvent:\t    \t\t\t\t\t 0xea86,\r\n\terror:\t    \t\t\t\t\t\t\t 0xea87,\r\n\tvariable:\t    \t\t\t\t\t\t 0xea88,\r\n\tarray:\t    \t\t\t\t\t\t\t 0xea8a,\r\n\tsymbolModule:\t    \t\t\t\t\t 0xea8b,\r\n\tsymbolFunction:\t    \t\t\t\t\t 0xea8c,\r\n\tsymbolBoolean:\t    \t\t\t\t\t 0xea8f,\r\n\tsymbolNumber:\t    \t\t\t\t\t 0xea90,\r\n\tsymbolStruct:\t    \t\t\t\t\t 0xea91,\r\n\tsymbolParameter:\t    \t\t\t\t 0xea92,\r\n\tsymbolKey:\t    \t\t\t\t\t\t 0xea93,\r\n\tsymbolReference:\t    \t\t\t\t 0xea94,\r\n\tsymbolValue:\t    \t\t\t\t\t 0xea95,\r\n\tsymbolUnit:\t    \t\t\t\t\t\t 0xea96,\r\n\tactivateBreakpoints:\t    \t\t\t 0xea97,\r\n\tarchive:\t    \t\t\t\t\t\t 0xea98,\r\n\tarrowBoth:\t    \t\t\t\t\t\t 0xea99,\r\n\tarrowDown:\t    \t\t\t\t\t\t 0xea9a,\r\n\tarrowLeft:\t    \t\t\t\t\t\t 0xea9b,\r\n\tarrowRight:\t    \t\t\t\t\t\t 0xea9c,\r\n\tarrowSmallDown:\t    \t\t\t\t\t 0xea9d,\r\n\tarrowSmallLeft:\t    \t\t\t\t\t 0xea9e,\r\n\tarrowSmallRight:\t    \t\t\t\t 0xea9f,\r\n\tarrowSmallUp:\t    \t\t\t\t\t 0xeaa0,\r\n\tarrowUp:\t    \t\t\t\t\t\t 0xeaa1,\r\n\tbell:\t    \t\t\t\t\t\t\t 0xeaa2,\r\n\tbold:\t    \t\t\t\t\t\t\t 0xeaa3,\r\n\tbook:\t    \t\t\t\t\t\t\t 0xeaa4,\r\n\tbookmark:\t    \t\t\t\t\t\t 0xeaa5,\r\n\tdebugBreakpointConditionalUnverified:\t 0xeaa6,\r\n\tdebugBreakpointConditional:\t    \t\t 0xeaa7,\r\n\tdebugBreakpointDataUnverified:\t    \t 0xeaa8,\r\n\tdebugBreakpointData:\t    \t\t\t 0xeaa9,\r\n\tdebugBreakpointLogUnverified:\t    \t 0xeaaa,\r\n\tdebugBreakpointLog:\t    \t\t\t\t 0xeaab,\r\n\tbriefcase:\t    \t\t\t\t\t\t 0xeaac,\r\n\tbroadcast:\t    \t\t\t\t\t\t 0xeaad,\r\n\tbrowser:\t    \t\t\t\t\t\t 0xeaae,\r\n\tbug:\t    \t\t\t\t\t\t\t 0xeaaf,\r\n\tcalendar:\t    \t\t\t\t\t\t 0xeab0,\r\n\tcaseSensitive:\t    \t\t\t\t\t 0xeab1,\r\n\tcheck:\t    \t\t\t\t\t\t\t 0xeab2,\r\n\tchecklist:\t    \t\t\t\t\t\t 0xeab3,\r\n\tchevronDown:\t    \t\t\t\t\t 0xeab4,\r\n\tchevronLeft:\t    \t\t\t\t\t 0xeab5,\r\n\tchevronRight:\t    \t\t\t\t\t 0xeab6,\r\n\tchevronUp:\t    \t\t\t\t\t\t 0xeab7,\r\n\tchromeClose:\t    \t\t\t\t\t 0xeab8,\r\n\tchromeMaximize:\t    \t\t\t\t\t 0xeab9,\r\n\tchromeMinimize:\t    \t\t\t\t\t 0xeaba,\r\n\tchromeRestore:\t    \t\t\t\t\t 0xeabb,\r\n\tcircle:\t    \t\t\t\t\t\t\t 0xeabc,\r\n\tcircleSlash:\t    \t\t\t\t\t 0xeabd,\r\n\tcircuitBoard:\t    \t\t\t\t\t 0xeabe,\r\n\tclearAll:\t    \t\t\t\t\t\t 0xeabf,\r\n\tclippy:\t    \t\t\t\t\t\t\t 0xeac0,\r\n\tcloseAll:\t    \t\t\t\t\t\t 0xeac1,\r\n\tcloudDownload:\t    \t\t\t\t\t 0xeac2,\r\n\tcloudUpload:\t    \t\t\t\t\t 0xeac3,\r\n\tcode:\t    \t\t\t\t\t\t\t 0xeac4,\r\n\tcollapseAll:\t    \t\t\t\t\t 0xeac5,\r\n\tcolorMode:\t    \t\t\t\t\t\t 0xeac6,\r\n\tcommentDiscussion:\t    \t\t\t\t 0xeac7,\r\n\tcreditCard:\t    \t\t\t\t\t\t 0xeac9,\r\n\tdash:\t    \t\t\t\t\t\t\t 0xeacc,\r\n\tdashboard:\t    \t\t\t\t\t\t 0xeacd,\r\n\tdatabase:\t    \t\t\t\t\t\t 0xeace,\r\n\tdebugContinue:\t    \t\t\t\t\t 0xeacf,\r\n\tdebugDisconnect:\t    \t\t\t\t 0xead0,\r\n\tdebugPause:\t    \t\t\t\t\t\t 0xead1,\r\n\tdebugRestart:\t    \t\t\t\t\t 0xead2,\r\n\tdebugStart:\t    \t\t\t\t\t\t 0xead3,\r\n\tdebugStepInto:\t    \t\t\t\t\t 0xead4,\r\n\tdebugStepOut:\t    \t\t\t\t\t 0xead5,\r\n\tdebugStepOver:\t    \t\t\t\t\t 0xead6,\r\n\tdebugStop:\t    \t\t\t\t\t\t 0xead7,\r\n\tdebug:\t    \t\t\t\t\t\t\t 0xead8,\r\n\tdeviceCameraVideo:\t    \t\t\t\t 0xead9,\r\n\tdeviceCamera:\t    \t\t\t\t\t 0xeada,\r\n\tdeviceMobile:\t    \t\t\t\t\t 0xeadb,\r\n\tdiffAdded:\t    \t\t\t\t\t\t 0xeadc,\r\n\tdiffIgnored:\t    \t\t\t\t\t 0xeadd,\r\n\tdiffModified:\t    \t\t\t\t\t 0xeade,\r\n\tdiffRemoved:\t    \t\t\t\t\t 0xeadf,\r\n\tdiffRenamed:\t    \t\t\t\t\t 0xeae0,\r\n\tdiff:\t    \t\t\t\t\t\t\t 0xeae1,\r\n\tdiscard:\t    \t\t\t\t\t\t 0xeae2,\r\n\teditorLayout:\t    \t\t\t\t\t 0xeae3,\r\n\temptyWindow:\t    \t\t\t\t\t 0xeae4,\r\n\texclude:\t    \t\t\t\t\t\t 0xeae5,\r\n\textensions:\t    \t\t\t\t\t\t 0xeae6,\r\n\teyeClosed:\t    \t\t\t\t\t\t 0xeae7,\r\n\tfileBinary:\t    \t\t\t\t\t\t 0xeae8,\r\n\tfileCode:\t    \t\t\t\t\t\t 0xeae9,\r\n\tfileMedia:\t    \t\t\t\t\t\t 0xeaea,\r\n\tfilePdf:\t    \t\t\t\t\t\t 0xeaeb,\r\n\tfileSubmodule:\t    \t\t\t\t\t 0xeaec,\r\n\tfileSymlinkDirectory:\t    \t\t\t 0xeaed,\r\n\tfileSymlinkFile:\t    \t\t\t\t 0xeaee,\r\n\tfileZip:\t    \t\t\t\t\t\t 0xeaef,\r\n\tfiles:\t    \t\t\t\t\t\t\t 0xeaf0,\r\n\tfilter:\t    \t\t\t\t\t\t\t 0xeaf1,\r\n\tflame:\t    \t\t\t\t\t\t\t 0xeaf2,\r\n\tfoldDown:\t    \t\t\t\t\t\t 0xeaf3,\r\n\tfoldUp:\t    \t\t\t\t\t\t\t 0xeaf4,\r\n\tfold:\t    \t\t\t\t\t\t\t 0xeaf5,\r\n\tfolderActive:\t    \t\t\t\t\t 0xeaf6,\r\n\tfolderOpened:\t    \t\t\t\t\t 0xeaf7,\r\n\tgear:\t    \t\t\t\t\t\t\t 0xeaf8,\r\n\tgift:\t    \t\t\t\t\t\t\t 0xeaf9,\r\n\tgistSecret:\t    \t\t\t\t\t\t 0xeafa,\r\n\tgist:\t    \t\t\t\t\t\t\t 0xeafb,\r\n\tgitCommit:\t    \t\t\t\t\t\t 0xeafc,\r\n\tcompareChanges:\t    \t\t\t\t\t 0xeafd,\r\n\tgitMerge:\t    \t\t\t\t\t\t 0xeafe,\r\n\tgithubAction:\t    \t\t\t\t\t 0xeaff,\r\n\tgithubAlt:\t    \t\t\t\t\t\t 0xeb00,\r\n\tglobe:\t    \t\t\t\t\t\t\t 0xeb01,\r\n\tgrabber:\t    \t\t\t\t\t\t 0xeb02,\r\n\tgraph:\t    \t\t\t\t\t\t\t 0xeb03,\r\n\tgripper:\t    \t\t\t\t\t\t 0xeb04,\r\n\theart:\t    \t\t\t\t\t\t\t 0xeb05,\r\n\thome:\t    \t\t\t\t\t\t\t 0xeb06,\r\n\thorizontalRule:\t    \t\t\t\t\t 0xeb07,\r\n\thubot:\t    \t\t\t\t\t\t\t 0xeb08,\r\n\tinbox:\t    \t\t\t\t\t\t\t 0xeb09,\r\n\tissueReopened:\t    \t\t\t\t\t 0xeb0b,\r\n\tissues:\t    \t\t\t\t\t\t\t 0xeb0c,\r\n\titalic:\t    \t\t\t\t\t\t\t 0xeb0d,\r\n\tjersey:\t    \t\t\t\t\t\t\t 0xeb0e,\r\n\tbracket:\t    \t\t\t\t\t\t 0xeb0f,\r\n\tkebabVertical:\t    \t\t\t\t\t 0xeb10,\r\n\tkey:\t    \t\t\t\t\t\t\t 0xeb11,\r\n\tlaw:\t    \t\t\t\t\t\t\t 0xeb12,\r\n\tlightbulbAutofix:\t    \t\t\t\t 0xeb13,\r\n\tlinkExternal:\t    \t\t\t\t\t 0xeb14,\r\n\tlink:\t    \t\t\t\t\t\t\t 0xeb15,\r\n\tlistOrdered:\t    \t\t\t\t\t 0xeb16,\r\n\tlistUnordered:\t    \t\t\t\t\t 0xeb17,\r\n\tliveShare:\t    \t\t\t\t\t\t 0xeb18,\r\n\tloading:\t    \t\t\t\t\t\t 0xeb19,\r\n\tlocation:\t    \t\t\t\t\t\t 0xeb1a,\r\n\tmailRead:\t    \t\t\t\t\t\t 0xeb1b,\r\n\tmail:\t    \t\t\t\t\t\t\t 0xeb1c,\r\n\tmarkdown:\t    \t\t\t\t\t\t 0xeb1d,\r\n\tmegaphone:\t    \t\t\t\t\t\t 0xeb1e,\r\n\tmention:\t    \t\t\t\t\t\t 0xeb1f,\r\n\tmilestone:\t    \t\t\t\t\t\t 0xeb20,\r\n\tmortarBoard:\t    \t\t\t\t\t 0xeb21,\r\n\tmove:\t    \t\t\t\t\t\t\t 0xeb22,\r\n\tmultipleWindows:\t    \t\t\t\t 0xeb23,\r\n\tmute:\t    \t\t\t\t\t\t\t 0xeb24,\r\n\tnoNewline:\t    \t\t\t\t\t\t 0xeb25,\r\n\tnote:\t    \t\t\t\t\t\t\t 0xeb26,\r\n\toctoface:\t    \t\t\t\t\t\t 0xeb27,\r\n\topenPreview:\t    \t\t\t\t\t 0xeb28,\r\n\tpackage:\t    \t\t\t\t\t\t 0xeb29,\r\n\tpaintcan:\t    \t\t\t\t\t\t 0xeb2a,\r\n\tpin:\t    \t\t\t\t\t\t\t 0xeb2b,\r\n\tplay:\t    \t\t\t\t\t\t\t 0xeb2c,\r\n\tplug:\t    \t\t\t\t\t\t\t 0xeb2d,\r\n\tpreserveCase:\t    \t\t\t\t\t 0xeb2e,\r\n\tpreview:\t    \t\t\t\t\t\t 0xeb2f,\r\n\tproject:\t    \t\t\t\t\t\t 0xeb30,\r\n\tpulse:\t    \t\t\t\t\t\t\t 0xeb31,\r\n\tquestion:\t    \t\t\t\t\t\t 0xeb32,\r\n\tquote:\t    \t\t\t\t\t\t\t 0xeb33,\r\n\tradioTower:\t    \t\t\t\t\t\t 0xeb34,\r\n\treactions:\t    \t\t\t\t\t\t 0xeb35,\r\n\treferences:\t    \t\t\t\t\t\t 0xeb36,\r\n\trefresh:\t    \t\t\t\t\t\t 0xeb37,\r\n\tregex:\t    \t\t\t\t\t\t\t 0xeb38,\r\n\tremoteExplorer:\t    \t\t\t\t\t 0xeb39,\r\n\tremote:\t    \t\t\t\t\t\t\t 0xeb3a,\r\n\tremove:\t    \t\t\t\t\t\t\t 0xeb3b,\r\n\treplaceAll:\t    \t\t\t\t\t\t 0xeb3c,\r\n\treplace:\t    \t\t\t\t\t\t 0xeb3d,\r\n\trepoClone:\t    \t\t\t\t\t\t 0xeb3e,\r\n\trepoForcePush:\t    \t\t\t\t\t 0xeb3f,\r\n\trepoPull:\t    \t\t\t\t\t\t 0xeb40,\r\n\trepoPush:\t    \t\t\t\t\t\t 0xeb41,\r\n\treport:\t    \t\t\t\t\t\t\t 0xeb42,\r\n\trequestChanges:\t    \t\t\t\t\t 0xeb43,\r\n\trocket:\t    \t\t\t\t\t\t\t 0xeb44,\r\n\trootFolderOpened:\t    \t\t\t\t 0xeb45,\r\n\trootFolder:\t    \t\t\t\t\t\t 0xeb46,\r\n\trss:\t    \t\t\t\t\t\t\t 0xeb47,\r\n\truby:\t    \t\t\t\t\t\t\t 0xeb48,\r\n\tsaveAll:\t    \t\t\t\t\t\t 0xeb49,\r\n\tsaveAs:\t    \t\t\t\t\t\t\t 0xeb4a,\r\n\tsave:\t    \t\t\t\t\t\t\t 0xeb4b,\r\n\tscreenFull:\t    \t\t\t\t\t\t 0xeb4c,\r\n\tscreenNormal:\t    \t\t\t\t\t 0xeb4d,\r\n\tsearchStop:\t    \t\t\t\t\t\t 0xeb4e,\r\n\tserver:\t    \t\t\t\t\t\t\t 0xeb50,\r\n\tsettingsGear:\t    \t\t\t\t\t 0xeb51,\r\n\tsettings:\t    \t\t\t\t\t\t 0xeb52,\r\n\tshield:\t    \t\t\t\t\t\t\t 0xeb53,\r\n\tsmiley:\t    \t\t\t\t\t\t\t 0xeb54,\r\n\tsortPrecedence:\t    \t\t\t\t\t 0xeb55,\r\n\tsplitHorizontal:\t    \t\t\t\t 0xeb56,\r\n\tsplitVertical:\t    \t\t\t\t\t 0xeb57,\r\n\tsquirrel:\t    \t\t\t\t\t\t 0xeb58,\r\n\tstarFull:\t    \t\t\t\t\t\t 0xeb59,\r\n\tstarHalf:\t    \t\t\t\t\t\t 0xeb5a,\r\n\tsymbolClass:\t    \t\t\t\t\t 0xeb5b,\r\n\tsymbolColor:\t    \t\t\t\t\t 0xeb5c,\r\n\tsymbolConstant:\t    \t\t\t\t\t 0xeb5d,\r\n\tsymbolEnumMember:\t    \t\t\t\t 0xeb5e,\r\n\tsymbolField:\t    \t\t\t\t\t 0xeb5f,\r\n\tsymbolFile:\t    \t\t\t\t\t\t 0xeb60,\r\n\tsymbolInterface:\t    \t\t\t\t 0xeb61,\r\n\tsymbolKeyword:\t    \t\t\t\t\t 0xeb62,\r\n\tsymbolMisc:\t    \t\t\t\t\t\t 0xeb63,\r\n\tsymbolOperator:\t    \t\t\t\t\t 0xeb64,\r\n\tsymbolProperty:\t    \t\t\t\t\t 0xeb65,\r\n\tsymbolSnippet:\t    \t\t\t\t\t 0xeb66,\r\n\ttasklist:\t    \t\t\t\t\t\t 0xeb67,\r\n\ttelescope:\t    \t\t\t\t\t\t 0xeb68,\r\n\ttextSize:\t    \t\t\t\t\t\t 0xeb69,\r\n\tthreeBars:\t    \t\t\t\t\t\t 0xeb6a,\r\n\tthumbsdown:\t    \t\t\t\t\t\t 0xeb6b,\r\n\tthumbsup:\t    \t\t\t\t\t\t 0xeb6c,\r\n\ttools:\t    \t\t\t\t\t\t\t 0xeb6d,\r\n\ttriangleDown:\t    \t\t\t\t\t 0xeb6e,\r\n\ttriangleLeft:\t    \t\t\t\t\t 0xeb6f,\r\n\ttriangleRight:\t    \t\t\t\t\t 0xeb70,\r\n\ttriangleUp:\t    \t\t\t\t\t\t 0xeb71,\r\n\ttwitter:\t    \t\t\t\t\t\t 0xeb72,\r\n\tunfold:\t    \t\t\t\t\t\t\t 0xeb73,\r\n\tunlock:\t    \t\t\t\t\t\t\t 0xeb74,\r\n\tunmute:\t    \t\t\t\t\t\t\t 0xeb75,\r\n\tunverified:\t    \t\t\t\t\t\t 0xeb76,\r\n\tverified:\t    \t\t\t\t\t\t 0xeb77,\r\n\tversions:\t    \t\t\t\t\t\t 0xeb78,\r\n\tvmActive:\t    \t\t\t\t\t\t 0xeb79,\r\n\tvmOutline:\t    \t\t\t\t\t\t 0xeb7a,\r\n\tvmRunning:\t    \t\t\t\t\t\t 0xeb7b,\r\n\twatch:\t    \t\t\t\t\t\t\t 0xeb7c,\r\n\twhitespace:\t    \t\t\t\t\t\t 0xeb7d,\r\n\twholeWord:\t    \t\t\t\t\t\t 0xeb7e,\r\n\twindow:\t    \t\t\t\t\t\t\t 0xeb7f,\r\n\twordWrap:\t    \t\t\t\t\t\t 0xeb80,\r\n\tzoomIn:\t    \t\t\t\t\t\t\t 0xeb81,\r\n\tzoomOut:\t    \t\t\t\t\t\t 0xeb82,\r\n\tlistFilter:\t    \t\t\t\t\t\t 0xeb83,\r\n\tlistFlat:\t    \t\t\t\t\t\t 0xeb84,\r\n\tlistSelection:\t    \t\t\t\t\t 0xeb85,\r\n\tlistTree:\t    \t\t\t\t\t\t 0xeb86,\r\n\tdebugBreakpointFunctionUnverified:\t     0xeb87,\r\n\tdebugBreakpointFunction:\t    \t\t 0xeb88,\r\n\tdebugStackframeActive:\t    \t\t\t 0xeb89,\r\n\tcircleSmallFilled:\t    \t\t\t\t 0xeb8a,\r\n\tdebugStackframe:\t    \t\t\t\t 0xeb8b,\r\n\tdebugBreakpointUnsupported:\t    \t\t 0xeb8c,\r\n\tsymbolString:\t    \t\t\t\t\t 0xeb8d,\r\n\tdebugReverseContinue:\t    \t\t\t 0xeb8e,\r\n\tdebugStepBack:\t    \t\t\t\t\t 0xeb8f,\r\n\tdebugRestartFrame:\t    \t\t\t\t 0xeb90,\r\n\tdebugAlt:\t    \t\t\t\t\t\t 0xeb91,\r\n\tcallIncoming:\t    \t\t\t\t\t 0xeb92,\r\n\tcallOutgoing:\t    \t\t\t\t\t 0xeb93,\r\n\tmenu:\t    \t\t\t\t\t\t\t 0xeb94,\r\n\texpandAll:\t    \t\t\t\t\t\t 0xeb95,\r\n\tfeedback:\t    \t\t\t\t\t\t 0xeb96,\r\n\tgroupByRefType:\t    \t\t\t\t\t 0xeb97,\r\n\tungroupByRefType:\t    \t\t\t\t 0xeb98,\r\n\taccount:\t    \t\t\t\t\t\t 0xeb99,\r\n\tbellDot:\t    \t\t\t\t\t\t 0xeb9a,\r\n\tdebugConsole:\t    \t\t\t\t\t 0xeb9b,\r\n\tlibrary:\t    \t\t\t\t\t\t 0xeb9c,\r\n\toutput:\t    \t\t\t\t\t\t\t 0xeb9d,\r\n\trunAll:\t    \t\t\t\t\t\t\t 0xeb9e,\r\n\tsyncIgnored:\t    \t\t\t\t\t 0xeb9f,\r\n\tpinned:\t    \t\t\t\t\t\t\t 0xeba0,\r\n\tgithubInverted:\t    \t\t\t\t\t 0xeba1,\r\n\tserverProcess:\t    \t\t\t\t\t 0xeba2,\r\n\tserverEnvironment:\t    \t\t\t\t 0xeba3,\r\n\tpass:\t    \t\t\t\t\t\t\t 0xeba4,\r\n\tstopCircle:\t    \t\t\t\t\t\t 0xeba5,\r\n\tplayCircle:\t    \t\t\t\t\t\t 0xeba6,\r\n\trecord:\t    \t\t\t\t\t\t\t 0xeba7,\r\n\tdebugAltSmall:\t    \t\t\t\t\t 0xeba8,\r\n\tvmConnect:\t    \t\t\t\t\t\t 0xeba9,\r\n\tcloud:\t    \t\t\t\t\t\t\t 0xebaa,\r\n\tmerge:\t    \t\t\t\t\t\t\t 0xebab,\r\n\texport:\t    \t\t\t\t\t\t\t 0xebac,\r\n\tgraphLeft:\t    \t\t\t\t\t\t 0xebad,\r\n\tmagnet:\t    \t\t\t\t\t\t\t 0xebae,\r\n\tnotebook:\t    \t\t\t\t\t\t 0xebaf,\r\n\tredo:\t    \t\t\t\t\t\t\t 0xebb0,\r\n\tcheckAll:\t    \t\t\t\t\t\t 0xebb1,\r\n\tpinnedDirty:\t    \t\t\t\t\t 0xebb2,\r\n\tpassFilled:\t    \t\t\t\t\t\t 0xebb3,\r\n\tcircleLargeFilled:\t    \t\t\t\t 0xebb4,\r\n\tcircleLarge:\t    \t\t\t\t\t 0xebb5,\r\n\tcombine:\t    \t\t\t\t\t\t 0xebb6,\r\n\ttable:\t    \t\t\t\t\t\t\t 0xebb7,\r\n\tvariableGroup:\t    \t\t\t\t\t 0xebb8,\r\n\ttypeHierarchy:\t    \t\t\t\t\t 0xebb9,\r\n\ttypeHierarchySub:\t    \t\t\t\t 0xebba,\r\n\ttypeHierarchySuper:\t    \t\t\t\t 0xebbb,\r\n\tgitPullRequestCreate:\t    \t\t\t 0xebbc,\r\n\trunAbove:\t    \t\t\t\t\t\t 0xebbd,\r\n\trunBelow:\t    \t\t\t\t\t\t 0xebbe,\r\n\tnotebookTemplate:\t    \t\t\t\t 0xebbf,\r\n\tdebugRerun:\t    \t\t\t\t\t\t 0xebc0,\r\n\tworkspaceTrusted:\t    \t\t\t\t 0xebc1,\r\n\tworkspaceUntrusted:\t    \t\t\t\t 0xebc2,\r\n\tworkspaceUnknown:\t    \t\t\t\t 0xebc3,\r\n\tterminalCmd:\t    \t\t\t\t\t 0xebc4,\r\n\tterminalDebian:\t    \t\t\t\t\t 0xebc5,\r\n\tterminalLinux:\t    \t\t\t\t\t 0xebc6,\r\n\tterminalPowershell:\t    \t\t\t\t 0xebc7,\r\n\tterminalTmux:\t    \t\t\t\t\t 0xebc8,\r\n\tterminalUbuntu:\t    \t\t\t\t\t 0xebc9,\r\n\tterminalBash:\t    \t\t\t\t\t 0xebca,\r\n\tarrowSwap:\t    \t\t\t\t\t\t 0xebcb,\r\n\tcopy:\t    \t\t\t\t\t\t\t 0xebcc,\r\n\tpersonAdd:\t    \t\t\t\t\t\t 0xebcd,\r\n\tfilterFilled:\t    \t\t\t\t\t 0xebce,\r\n\twand:\t    \t\t\t\t\t\t\t 0xebcf,\r\n\tdebugLineByLine:\t    \t\t\t\t 0xebd0,\r\n\tinspect:\t    \t\t\t\t\t\t 0xebd1,\r\n\tlayers:\t    \t\t\t\t\t\t\t 0xebd2,\r\n\tlayersDot:\t    \t\t\t\t\t\t 0xebd3,\r\n\tlayersActive:\t    \t\t\t\t\t 0xebd4,\r\n\tcompass:\t    \t\t\t\t\t\t 0xebd5,\r\n\tcompassDot:\t    \t\t\t\t\t\t 0xebd6,\r\n\tcompassActive:\t    \t\t\t\t\t 0xebd7,\r\n\tazure:\t    \t\t\t\t\t\t\t 0xebd8,\r\n\tissueDraft:\t    \t\t\t\t\t\t 0xebd9,\r\n\tgitPullRequestClosed:\t    \t\t\t 0xebda,\r\n\tgitPullRequestDraft:\t    \t\t\t 0xebdb,\r\n\tdebugAll:\t    \t\t\t\t\t\t 0xebdc,\r\n\tdebugCoverage:\t    \t\t\t\t\t 0xebdd,\r\n\trunErrors:\t    \t\t\t\t\t\t 0xebde,\r\n\tfolderLibrary:\t    \t\t\t\t\t 0xebdf,\r\n\tdebugContinueSmall:\t    \t\t\t\t 0xebe0,\r\n\tbeakerStop:\t    \t\t\t\t\t\t 0xebe1,\r\n\tgraphLine:\t    \t\t\t\t\t\t 0xebe2,\r\n\tgraphScatter:\t    \t\t\t\t\t 0xebe3,\r\n\tpieChart:\t    \t\t\t\t\t\t 0xebe4,\r\n\tbracketDot:\t    \t\t\t\t\t\t 0xebe5,\r\n\tbracketError:\t    \t\t\t\t\t 0xebe6,\r\n\tlockSmall:\t    \t\t\t\t\t\t 0xebe7,\r\n\tazureDevops:\t    \t\t\t\t\t 0xebe8,\r\n\tverifiedFilled:\t    \t\t\t\t\t 0xebe9,\r\n\tnewline:\t    \t\t\t\t\t\t 0xebea,\r\n\tlayout:\t    \t\t\t\t\t\t\t 0xebeb,\r\n\tlayoutActivitybarLeft:\t    \t\t\t 0xebec,\r\n\tlayoutActivitybarRight:\t    \t\t\t 0xebed,\r\n\tlayoutPanelLeft:\t    \t\t\t\t 0xebee,\r\n\tlayoutPanelCenter:\t    \t\t\t\t 0xebef,\r\n\tlayoutPanelJustify:\t    \t\t\t\t 0xebf0,\r\n\tlayoutPanelRight:\t    \t\t\t\t 0xebf1,\r\n\tlayoutPanel:\t    \t\t\t\t\t 0xebf2,\r\n\tlayoutSidebarLeft:\t    \t\t\t\t 0xebf3,\r\n\tlayoutSidebarRight:\t    \t\t\t\t 0xebf4,\r\n\tlayoutStatusbar:\t    \t\t\t\t 0xebf5,\r\n\tlayoutMenubar:\t    \t\t\t\t\t 0xebf6,\r\n\tlayoutCentered:\t    \t\t\t\t\t 0xebf7,\r\n\ttarget:\t    \t\t\t\t\t\t\t 0xebf8,\r\n\tindent:\t    \t\t\t\t\t\t\t 0xebf9,\r\n\trecordSmall:\t    \t\t\t\t\t 0xebfa,\r\n\terrorSmall:\t    \t\t\t\t\t\t 0xebfb,\r\n\tarrowCircleDown:\t    \t\t\t\t 0xebfc,\r\n\tarrowCircleLeft:\t    \t\t\t\t 0xebfd,\r\n\tarrowCircleRight:\t    \t\t\t\t 0xebfe,\r\n\tarrowCircleUp:\t    \t\t\t\t\t 0xebff,\r\n\tlayoutSidebarRightOff:\t    \t\t\t 0xec00,\r\n\tlayoutPanelOff:\t    \t\t\t\t\t 0xec01,\r\n\tlayoutSidebarLeftOff:\t    \t\t\t 0xec02,\r\n\tblank:\t    \t\t\t\t\t\t\t 0xec03,\r\n\theartFilled:\t    \t\t\t\t\t 0xec04,\r\n\tfoldHorizontal:\t    \t\t\t\t\t 0xec05,\r\n\tfoldHorizontalFilled:\t    \t\t\t 0xec06,\r\n\tcircleSmall:\t    \t\t\t\t\t 0xec07,\r\n\tbellSlash:\t    \t\t\t\t\t\t 0xec08,\r\n\tbellSlashDot:\t    \t\t\t\t\t 0xec09,\r\n\tcommentUnresolved:\t    \t\t\t\t 0xec0a,\r\n\tgitPullRequestGoToChanges:\t    \t\t 0xec0b,\r\n\tgitPullRequestNewChanges:\t    \t\t 0xec0c,\r\n\tsearchFuzzy:\t    \t\t\t\t\t 0xec0d,\r\n\tcommentDraft:\t    \t\t\t\t\t 0xec0e,\r\n\tsend:\t    \t\t\t\t\t\t\t 0xec0f,\r\n\tsparkle:\t    \t\t\t\t\t\t 0xec10,\r\n\tinsert:\t    \t\t\t\t\t\t\t 0xec11,\r\n\tmic:\t    \t\t\t\t\t\t\t 0xec12,\r\n\tthumbsdownFilled:\t    \t\t\t\t 0xec13,\r\n\tthumbsupFilled:\t    \t\t\t\t\t 0xec14,\r\n\tcoffee:\t    \t\t\t\t\t\t\t 0xec15,\r\n\tsnake:\t    \t\t\t\t\t\t\t 0xec16,\r\n\tgame:\t    \t\t\t\t\t\t\t 0xec17,\r\n\tvr:\t    \t\t\t\t\t\t\t\t 0xec18,\r\n\tchip:\t    \t\t\t\t\t\t\t 0xec19,\r\n\tpiano:\t    \t\t\t\t\t\t\t 0xec1a,\r\n\tmusic:\t    \t\t\t\t\t\t\t 0xec1b,\r\n\tmicFilled:\t    \t\t\t\t\t\t 0xec1c,\r\n\trepoFetch:\t    \t\t\t\t\t\t 0xec1d,\r\n\tcopilot:\t    \t\t\t\t\t\t 0xec1e,\r\n\tlightbulbSparkle:\t    \t\t\t\t 0xec1f,\r\n\trobot:\t    \t\t\t\t\t\t\t 0xec20,\r\n\tsparkleFilled:\t    \t\t\t\t\t 0xec21,\r\n\tdiffSingle:\t    \t\t\t\t\t\t 0xec22,\r\n\tdiffMultiple:\t    \t\t\t\t\t 0xec23,\r\n\tsurroundWith:\t    \t\t\t\t\t 0xec24,\r\n\tshare:\t    \t\t\t\t\t\t\t 0xec25,\r\n\tgitStash:\t    \t\t\t\t\t\t 0xec26,\r\n\tgitStashApply:\t    \t\t\t\t\t 0xec27,\r\n\tgitStashPop:\t    \t\t\t\t\t 0xec28,\r\n\tvscode:\t    \t\t\t\t\t\t\t 0xec29,\r\n\tvscodeInsiders:\t    \t\t\t\t\t 0xec2a,\r\n\tcodeOss:\t    \t\t\t\t\t\t 0xec2b,\r\n\trunCoverage:\t    \t\t\t\t\t 0xec2c,\r\n\trunAllCoverage:\t    \t\t\t\t\t 0xec2d,\r\n\tcoverage:\t    \t\t\t\t\t\t 0xec2e,\r\n\tgithubProject:\t    \t\t\t\t\t 0xec2f,\r\n\tfoldVertical:\t    \t\t\t\t\t 0xec30,\r\n\tfoldVerticalFilled:\t    \t\t\t\t 0xec31,\r\n\tgoToSearch:\t    \t\t\t\t\t\t 0xec32,\r\n\tpercentage:\t    \t\t\t\t\t\t 0xec33,\r\n\tattach:\t    \t\t\t\t\t\t\t 0xec34,\r\n} as const;\r\n\r\nexport function Icon(props: {code:number}) {\r\n\treturn <span class=\"codicon\">&#x{props.code.toString(16)};</span>;\r\n}\r\nexport function ClickableIcon(props: {code:number, id:string}) {\r\n\treturn <button class=\"codicon\" id={props.id}>&#x{props.code.toString(16)};</button>;\r\n}\r\nexport function Button(props: {text:string, id:string}) {\r\n\treturn <button id={props.id}>{props.text}</button>;\r\n}\r\n\r\nexport function Label(props: {id: string, display: string}) {\r\n\treturn <label for={props.id}>{props.display}</label>;\r\n}","\r\nexport class Lazy<T> {\r\n\tprivate _value: T | undefined;\r\n\tconstructor(private factory: () => T) {}\r\n\tget value() {\r\n\t\tif (this._value === undefined)\r\n\t\t\tthis._value = this.factory();\r\n\t\treturn this._value;\r\n\t}\r\n}\r\n\r\nexport class AsyncLazy<T> {\r\n\tprivate _value: T | null | undefined;\r\n\tconstructor(private factory: () => Promise<T>) {}\r\n\tget value() {\r\n\t\tif (this._value === undefined) {\r\n\t\t\tthis._value = null;\r\n\t\t\tthis.factory().then(v => this._value = v);\r\n\t\t}\r\n\t\treturn this._value;\r\n\t}\r\n}\r\n\r\nexport class CallCombiner {\r\n\tprivate timeout:\tReturnType<typeof setTimeout> | null = null;\r\n\tconstructor(public func:()=>void, public delay:number) {}\r\n\ttrigger() {\r\n\t\tif (this.timeout)\r\n\t\t\tclearTimeout(this.timeout);\r\n\t\tthis.timeout = setTimeout(this.func, this.delay);\r\n\t}\r\n}\r\n\r\nexport function makeCache<T>(load: (key: string)=>T) {\r\n\tconst cache: Record<string, T> = {};\r\n\treturn {\r\n\t\tget: (fullpath: string) => {\r\n\t\t\tif (!cache[fullpath])\r\n\t\t\t\tcache[fullpath] = load(fullpath);\r\n\t\t\treturn cache[fullpath];\r\n\t\t},\r\n\t\tremove: (fullpath: string) => {\r\n\t\t\tdelete cache[fullpath];\r\n\t\t},\r\n\t};\r\n}\r\n\r\nexport function compare<T>(a: T, b: T) : number {\r\n\treturn a < b ? -1 : a > b ? 1 : 0;\r\n}\r\n\r\nexport function reverse_compare<T>(a: T, b: T) : number {\r\n\treturn compare(b, a);\r\n}\r\n\r\nexport function reverse<T,R>(func: (a: T, b: T) => R) {\r\n\treturn (a: T, b: T) => func(b, a);\r\n}\r\n\r\nexport function merge(...list: Record<string, any>[]) {\r\n\tfunction isT(value: any): value is Record<string, any> {\r\n\t\treturn typeof value === 'object' && value !== null;\r\n\t}\r\n\r\n\tfunction recurse(target: Record<string, any>, source: Record<string, any>) {\r\n\t\tfor (const key in source) {\r\n\t\t\tif (isT(source[key]) && isT(target[key]))\r\n\t\t\t\trecurse(target[key], source[key]);\r\n\t\t\telse\r\n\t\t\t\ttarget[key] = source[key];\r\n\t\t}\r\n\t\treturn target;\r\n\t}\r\n\t\r\n\treturn list.reduce((merged, r) => recurse(merged, r), {});\r\n}\r\n\r\ntype PartitionIndex<U> = U extends boolean ? 'true'|'false' : U;\r\n\r\nexport function partition<T, U extends keyof any | boolean>(array: Iterable<T>, func: (v: T) => U) : Record<PartitionIndex<U>, T[]> {\r\n\tconst partitions = {} as Record<PartitionIndex<U>, T[]>;\r\n\tfor (const i of array)\r\n\t\t(partitions[func(i) as unknown as PartitionIndex<U>] ??= []).push(i);\r\n\treturn partitions;\r\n}\r\n\r\n //-----------------------------------------------------------------------------\r\n//\titerator\r\n//-----------------------------------------------------------------------------\r\n\r\nexport type SpreadType<T> = T extends Iterable<infer U> ? U[] : never;\r\n\r\nexport function array_add<T, U extends Iterable<T>>(array: T[], items: U) {\r\n\tfor (const i of items)\r\n\t\tarray.push(i);\r\n}\r\n\r\nexport function array_remove<T>(array: T[], item: T) {\r\n\tconst index = array.indexOf(item);\r\n\tif (index === -1)\r\n\t\treturn false;\r\n\tarray.splice(index, 1);\r\n\treturn true;\r\n}\r\n\r\nexport function array_make<T>(n: number, constructor: new () => T): T[] {\r\n\treturn Array.from({length: n}, () => new constructor);\r\n}\r\n\r\nexport function eachIterable<T, U>(iterable: Iterable<T>|undefined, func: (v: T, i: number) => void) {\r\n\tif (iterable) {\r\n\t\tlet i = 0;\r\n\t\tfor (const v of iterable)\r\n\t\t\tfunc(v, i++);\r\n\t}\r\n}\r\n\r\nexport function mapIterable<T, U>(iterable: Iterable<T>|undefined, func: (v: T, i: number) => U): U[] {\r\n\treturn iterable ? Array.from(iterable, func) : [];\r\n}\r\n\r\nexport async function asyncMap<T,U>(iterable: Iterable<T>|undefined, func:(v: T, i:number) => Promise<U>): Promise<U[]> {\r\n\treturn Promise.all(mapIterable(iterable, func));\r\n}\r\n\r\nexport async function asyncReduce<T, U>(array: T[], func: (acc: U, v: T, i: number, array: T[]) => Promise<U>, initialValue: U) {\r\n\treturn array.reduce<Promise<U>>(\r\n\t\tasync (promise, v, i, array) => func(await promise, v, i, array),\r\n\t\tPromise.resolve(initialValue)\r\n\t);\r\n}\r\n\r\nexport async function parallel(...fns: (()=>any)[]): Promise<any[]> {\r\n\treturn asyncMap(fns, f => f());\r\n}\r\nexport async function serial(...fns: (()=>any)[]): Promise<any[]> {\r\n\tconst results = [];\r\n\tfor (const f of fns)\r\n\t\tresults.push(await f());\r\n\treturn results;\r\n}\r\n\r\nexport function filterIterable<T>(iterable: Iterable<T>, func:(v: T, i: number)=>boolean) {\r\n\tconst array: T[] = [];\r\n\tlet i = 0;\r\n\tfor (const v of iterable)\r\n\t\tif (func(v, i++))\r\n\t\t\tarray.push(v);\r\n\treturn array;\r\n}\r\n\r\nexport async function asyncFilter<T>(iterable: Iterable<T>, func:(v: T) => Promise<boolean>) {\r\n\tconst filters = await Promise.all(mapIterable(iterable, func));\r\n\treturn filterIterable(iterable, (_, i) => filters[i]);\r\n}\r\n\r\nexport function mapObject<T, U>(obj: Record<string, T>, func:(x:[k:string, v:T])=>[k:string, v:U]) : Record<string, U> {\r\n\treturn Object.fromEntries(Object.entries(obj).map(x => func(x)));\r\n}\r\n\r\nexport function filterObject<T>(obj: Record<string, T>, func:(x:[k:string, v:T])=>boolean) : Record<string, T> {\r\n\treturn Object.fromEntries(Object.entries(obj).filter(x => func(x)));\r\n}\r\n\r\n//-----------------------------------------------------------------------------\r\n//\tbit stuff\r\n//-----------------------------------------------------------------------------\r\n\r\nexport function is_pow2(n: number) {\r\n\treturn (n & (n - 1)) === 0;\r\n}\r\n\r\nexport function highestSetIndex32(n: number) {\r\n\treturn 31 - Math.clz32(n);\r\n}\r\nexport function highestSetIndex(n: number|bigint): number {\r\n\treturn typeof n === 'bigint'\r\n\t\t? n.toString(2).length - 1\r\n\t\t: highestSetIndex32(n);\r\n}\r\n\r\nexport function lowestSetIndex32(n: number) {\r\n    return n ? 31 - Math.clz32(n & -n) : 32;\r\n}\r\n\r\nexport function lowestSetIndex(n: number|bigint): number {\r\n\tif (typeof n === 'bigint') {\r\n\t\tconst i = Number(n & 0xffffffffn);\r\n\t\treturn i ? lowestSetIndex32(i) : 32 + lowestSetIndex(n >> 32n);\r\n\t}\r\n\treturn lowestSetIndex32(n);\r\n}\r\n\r\nexport function clearLowest(n: number|bigint)\t{\r\n\treturn typeof n === 'bigint'\r\n\t\t? n & (n - 1n)\r\n\t\t: n & (n - 1);\r\n}\r\n\r\nfunction bitCount32(n: number) {\r\n\tn = n - ((n >> 1) & 0x55555555);\r\n\tn = (n & 0x33333333) + ((n >> 2) & 0x33333333);\r\n\treturn ((n + (n >> 4) & 0xF0F0F0F) * 0x1010101) >> 24;\r\n}\r\nexport function bitCount(n: number|bigint) : number {\r\n\treturn typeof n === 'bigint'\r\n\t\t? bitCount32(Number(n & 0xFFFFFFFFn)) + bitCount(n >> 32n)\r\n\t\t: bitCount32(n);\r\n}\r\n\r\nexport function splitBinary(value : number, splits : number[]) {\r\n    let b = 0;\r\n    return splits.map(s => {\r\n        const r = (value >> b) & ((1 << s) - 1);\r\n        b += s;\r\n        return r;\r\n    });\r\n}\r\n\r\n\r\n//-----------------------------------------------------------------------------\r\n//\tstrings\r\n//-----------------------------------------------------------------------------\r\n\r\nexport function firstOf(value: string, find: string): number {\r\n\tlet index = value.length;\r\n\tfor (const c of find) {\r\n\t\tconst i = value.indexOf(c);\r\n\t\tif (i >= 0)\r\n\t\t\tindex = Math.min(i);\r\n\t}\r\n\treturn index;\r\n}\r\n\r\nexport function lastOf(value: string, find: string): number {\r\n\tlet index = -1;\r\n\tfor (const c of find)\r\n\t\tindex = Math.max(value.indexOf(c));\r\n\treturn index;\r\n}\r\n\r\nexport function replace(value: string, re: RegExp, process: (match: RegExpExecArray)=>string): string {\r\n\tlet m: RegExpExecArray | null;\r\n\tlet result = \"\";\r\n\tlet i = 0;\r\n\twhile ((m = re.exec(value))) {\r\n\t\tresult += value.substring(i, m.index) + process(m);\r\n\t\ti = re.lastIndex;\r\n\t}\r\n\treturn result + value.substring(i);\r\n}\r\n\r\nexport async function async_replace(value: string, re: RegExp, process: (match: RegExpExecArray)=>Promise<string>): Promise<string> {\r\n\tlet m: RegExpExecArray | null;\r\n\tlet result = \"\";\r\n\tlet i = 0;\r\n\twhile ((m = re.exec(value))) {\r\n\t\tresult += value.substring(i, m.index) + await process(m);\r\n\t\ti = re.lastIndex;\r\n\t}\r\n\treturn result + value.substring(i);\r\n}\r\n\r\nexport function replace_back(value: string, re: RegExp, process: (match: RegExpExecArray, right:string)=>string): string {\r\n\tconst start\t= re.lastIndex;\r\n\tconst m\t\t= re.exec(value);\r\n\tif (m) {\r\n\t\tconst right\t= replace_back(value, re, process);\r\n\t\treturn value.substring(start, m.index) + process(m, right);\r\n\t}\r\n\tre.lastIndex = value.length;\r\n\treturn value.substring(start);\r\n}\r\n\r\nexport async function async_replace_back(value: string, re: RegExp, process: (match: RegExpExecArray, right:string)=>Promise<string>): Promise<string> {\r\n\tconst start\t= re.lastIndex;\r\n\tconst m\t\t= re.exec(value);\r\n\tif (m) {\r\n\t\tconst right\t= await async_replace_back(value, re, process);\r\n\t\treturn value.substring(start, m.index) + await process(m, right);\r\n\t}\r\n\tre.lastIndex = value.length;\r\n\treturn value.substring(start);\r\n}\r\n\r\nexport function splitEvery(s : string, n : number) {\r\n\treturn Array.from(\r\n\t\t{length: Math.ceil(s.length / n)},\r\n\t\t(_, i) => s.slice(i * n, (i + 1) * n)\r\n\t);\r\n}\r\n\r\nexport function tag(strings: TemplateStringsArray, ...keys: any[]) {\r\n    return ((...values: any[]) => {\r\n        const dict\t= values.at(-1) || {};\r\n\t\treturn keys.map((key, i) => (Number.isInteger(key) ? values[key] : dict[key]) + strings[i + 1]).join('');\r\n    });\r\n}\r\n\r\n//-----------------------------------------------------------------------------\r\n//\ttext\r\n//-----------------------------------------------------------------------------\r\n\r\nexport type TextEncoding = 'utf8' | 'utf16le' | 'utf16be';\r\n\r\nexport const isLittleEndian = (new Uint8Array(new Uint16Array([0x1234]).buffer))[0] === 0x34;\r\n\r\nfunction byteSwap(buf: Uint8Array) {\r\n\tfor (let i = 0; i < buf.length; i += 2) {\r\n\t\tconst t = buf[i];\r\n\t\tbuf[i]\t= buf[i + 1];\r\n\t\tbuf[i + 1] = t;\r\n\t}\r\n}\r\n\r\nfunction _encodeText16Into(str: string, into: Uint8Array, encoding: TextEncoding) {\r\n\tif (encoding === 'utf8') {\r\n\t\tinto.set(Buffer.from(str, encoding));\r\n\r\n\t} else {\r\n\t\tconst len\t= str.length;\r\n\t\tconst view\t= new Uint16Array(into.buffer, into.byteOffset, into.byteLength / 2);\r\n\t\tfor (let i = 0; i < len; i++)\r\n\t\t\tview[i] = str.charCodeAt(i);\r\n\r\n\t\tif ((encoding === 'utf16be') === isLittleEndian)\r\n\t\t\tbyteSwap(into);\r\n\t}\r\n}\r\n\r\nexport function encodeTextInto(str: string, into: Uint8Array, encoding: TextEncoding, bom = false) {\r\n\tif (bom)\r\n\t\tstr = String.fromCharCode(0xfeff) + str;\r\n\r\n\tif (encoding === 'utf8')\r\n\t\tinto.set(Buffer.from(str, encoding));\r\n\telse\r\n\t\t_encodeText16Into(str, into, encoding);\r\n}\r\n\r\nexport function encodeText(str: string, encoding: TextEncoding, bom = false): Uint8Array {\r\n\tif (bom)\r\n\t\tstr = String.fromCharCode(0xfeff) + str;\r\n\r\n\tif (encoding === 'utf8')\r\n\t\treturn Buffer.from(str, encoding);\r\n\t\r\n\tconst buf \t= new Uint8Array(str.length * 2);\r\n\t_encodeText16Into(str, buf, encoding);\r\n\treturn buf;\r\n}\r\n\r\nexport function decodeText(buf: Uint8Array, encoding: TextEncoding): string {\r\n\tif (encoding === 'utf8')\r\n\t\treturn new TextDecoder(encoding).decode(buf);\r\n\r\n\tif ((encoding === 'utf16be') === isLittleEndian)\r\n\t\tbyteSwap(buf);\r\n\r\n\tconst view\t= new Uint16Array(buf.buffer, buf.byteOffset, buf.byteLength / 2);\r\n\tlet result = '';\r\n\tfor (let i = view[0] === 0xfeff ? 1 : 0; i < view.length; i += 1024)\r\n\t\tresult += String.fromCharCode(...view.subarray(i, i + 1024));\r\n\treturn result;\r\n}\r\n\r\nexport function getTextEncoding(bytes: Uint8Array): TextEncoding {\r\n\treturn\tbytes.length >= 3 && bytes[0] === 0xEF && bytes[1] === 0xBB && bytes[2] === 0xBF ?'utf8'\r\n\t\t:\tbytes.length >= 2 && bytes[0] === 0xFE && bytes[1] === 0xFF ? 'utf16be'\r\n\t\t:\tbytes.length >= 2 && bytes[0] === 0xFF && bytes[1] === 0xFE ? 'utf16le'\r\n\t\t:\tbytes.length >= 2 && bytes[0] === 0 && bytes[1] !== 0 ? 'utf16be'\r\n\t\t:\tbytes.length >= 2 && bytes[0] !== 0 && bytes[1] === 0 ? 'utf16le'\r\n\t\t: \t'utf8';\r\n}\r\n","module.exports = require(\"vscode\");","module.exports = require(\"https\");","module.exports = require(\"os\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(4265);\n"],"names":["defaultConfig","endpointUrl","S","propertyStorageOverride","isVal","getProperty","setProperty","_super","AppInsightsCore","_this","call","this","_self","_base","config","extensions","logger","notificationManager","cfg","e","logger_1","message","track","item","telemetryItem","trackStart","latency","itemExt","ext","sdk","ver","baseData","itemProperties","pluginVersionString","eventName","__ieDyn","ValueKind","NotSet","Pii_DistinguishedName","Pii_GenericData","Pii_IPV4Address","Pii_IPv6Address","Pii_MailSubject","Pii_PhoneNumber","Pii_QueryString","Pii_SipAddress","Pii_SmtpAddress","Pii_Identity","Pii_Uri","Pii_Fqdn","Pii_IPV4AddressLegacy","Pii_IPv6ScrubLastHextets","Pii_DropValue","CustomerContent_GenericContent","EventLatency","Normal","CostDeferred","RealTime","Immediate","EventPropertyType","Unspecified","String","Int32","UInt32","Int64","UInt64","Double","Bool","Guid","DateTime","EventPersistence","Critical","TraceLevel","NONE","ERROR","WARNING","INFORMATION","ValueSanitizer","fieldSanitizerProvider","_sanitizerMap","_sanitizers","_fieldSanitizers","_getFieldSanitizer","path","name","result","fieldLookup","lp","canHandle","fieldHandler","handler","_handleProperty","mapValue","fieldType","property","stringifyObjects","toString","_callFieldSanitizer","_convertToProperty","value","fieldProvider","theType","sanitizer","getSanitizer","propertyType","newValue_1","propValue","propKey","theValue","newPath","newProp","details","type","prop","push","clearCache","addSanitizer","newSanitizer","addFieldSanitizer","fieldSanitizer","theSanitizer","idx","splice","theFieldSanitizer","isEmpty","JSON","stringify","subType","getFieldType","MinChannelPriorty","LoggingSeverity","DISABLED","CRITICAL","DEBUG","STR_EMPTY","STR_DEFAULT_ENDPOINT_URL","STR_VERSION","STR_PROPERTIES","_a","Version","FullVersionString","ObjHasOwnProperty","hasOwnProperty","strDisabledPropertyName","strWithCredentials","strTimeout","_fieldTypeEventPropMap","uInt8ArraySupported","isDocumentObjectAvailable","isWindowObjectAvailable","isValueAssigned","getTenantId","apiKey","indexTenantId","isUint8ArrayAvailable","Uint8Array","nav","userAgent","ua","toLowerCase","isSafariOrFirefox","isLatency","sanitizeProperty","propType","isArrayValid","isValueKind","getCommonSchemaMetaData","kind","encodedTypeValue","isDataType","getFieldValueType","getCookieValue","cookieMgr","decode","cookieValue","get","decodeURIComponent","createGuid","style","theGuid","replace","extend","obj","obj2","obj3","obj4","obj5","extended","deep","i","length","arguments","theArgs","arrayValue","arrayIndex","getTime","setProcessTelemetryTimings","event","identifier","evt","objType","isChromium","openXhr","method","urlString","withCredentials","disabled","isSync","timeout","_wrapSetXhrProp","xhr","XMLHttpRequest","open","isGreaterThanZero","_DYN_INITIALIZE","_DYN_LOGGER","_DYN_INDEX_OF","_DYN_TIMINGS","_DYN_POLL_INTERNAL_LOGS","_DYN_VALUE","_DYN_KIND","_DYN_LENGTH","_DYN_PROCESS_TELEMETRY_ST0","_DYN_HANDLE_FIELD","_DYN_RM_SANITIZER","_DYN_RM_FIELD_SANITIZER","_DYN_CAN_HANDLE","RT_PROFILE","NRT_PROFILE","BE_PROFILE","STR_DROPPED","STR_REQUEUE","DEFAULT_CACHE_CONTROL","DEFAULT_CONTENT_TYPE","STR_CACHE_CONTROL","STR_CONTENT_TYPE_HEADER","STR_CLIENT_VERSION","STR_CLIENT_ID","STR_TIME_DELTA_TO_APPLY","STR_UPLOAD_TIME","STR_API_KEY","STR_MSA_DEVICE_TICKET","STR_AUTH_WEB_TOKEN","STR_AUTH_XTOKEN","STR_MSFPC","STR_TRACE","STR_USER","_DYN_ALLOW_REQUEST_SENDIN0","_DYN_FIRST_REQUEST_SENT","_DYN_SHOULD_ADD_CLOCK_SKE1","_DYN_GET_CLOCK_SKEW_HEADE2","_DYN_SET_CLOCK_SKEW","_DYN_CONCAT","_DYN_I_KEY","_DYN_COUNT","_DYN_EVENTS","_DYN_PUSH","_DYN_SPLIT","_DYN_SPLICE","_DYN_TO_LOWER_CASE","_DYN_HDRS","_DYN_USE_HDRS","_DYN_SET_TIMEOUT_OVERRIDE","_DYN_CLEAR_TIMEOUT_OVERRI3","_DYN_OVERRIDE_ENDPOINT_UR4","_DYN_AVOID_OPTIONS","_DYN_ENABLE_COMPOUND_KEY","_DYN_DISABLE_XHR_SYNC","_DYN_DISABLE_FETCH_KEEP_A6","_DYN_USE_SEND_BEACON","_DYN_FETCH_CREDENTIALS","_DYN_ALWAYS_USE_XHR_OVERR7","_DYN_SERIALIZE_OFFLINE_EV8","_DYN_GET_OFFLINE_REQUEST_9","_DYN_CREATE_PAYLOAD","_DYN_CREATE_ONE_DSPAYLOAD","_DYN_PAYLOAD_BLOB","_DYN_HEADERS","_DYN__THE_PAYLOAD","_DYN_URL_STRING","_DYN_BATCHES","_DYN_SEND_TYPE","_DYN_ADD_HEADER","_DYN_CAN_SEND_REQUEST","_DYN_SEND_QUEUED_REQUESTS","_DYN_IS_COMPLETELY_IDLE","_DYN_SET_UNLOADING","_DYN_RESUME","_DYN_SEND_SYNCHRONOUS_BAT10","_DYN__TRANSPORT","_DYN_GET_WPARAM","_DYN_IS_BEACON","_DYN_IS_TEARDOWN","_DYN_IS_SYNC","_DYN_DATA","_DYN__SEND_REASON","_DYN_SET_KILL_SWITCH_TENA11","_DYN__BACK_OFF_TRANSMISSI12","_DYN_IDENTIFIER","_DYN_EVENTS_LIMIT_IN_MEM","_DYN_AUTO_FLUSH_EVENTS_LI14","_DYN_BASE_DATA","_DYN_SEND_ATTEMPT","_DYN_LATENCY","_DYN_SYNC","_getEventMsfpc","theEvent","intWeb","_getMsfpc","theEvents","msfpc","EventBatch","iKey","addEvents","events","_msfpc","Msfpc","addEvent","fromEvent","numEvents","cnt","create","ClockSkewManager","_allowRequestSending","_shouldAddClockSkewHeaders","_isFirstRequest","_clockSkewHeaderValue","_clockSkewSet","timeDeltaInMillis","KillSwitch","_killedTokenDictionary","killTokens","killDuration","killedTokens","values","durationMs","parseInt","ex","tenantToken","killDictionary","undefined","retryPolicyGetMillisToBackoffForRetry","retriesSoFar","waitDuration","randomBackoff","Math","floor","random","BaseBackoff","pow","min","MaxRecordSize","MaxBeaconRecordSize","metadata","f","rCheckDot","Serializer","perfManager","valueSanitizer","enableCompoundKey","getEncodedTypeOverride","excludeCsMetaData","strData","strBaseData","_checkForCompoundkey","_processSubKeys","_theSanitizer","_isReservedCache","_excludeCsMetaData","_getEncodedType","_processPathKeys","srcObj","target","thePath","checkReserved","metadataPathKeys","metadataCallback","processSubKeys","key","srcValue","name_1","theMetaPathKeys","destObj","test","subKeys","split","keyLen","slice","subKey","isReserved","_isReservedField","handleField","newValue","createPayload","retryCnt","isTeardown","isReducedPayload","sendReason","sendType","apiKeys","payloadBlob","overflow","sizeExceed","failedEvts","batches","isBeacon","appendPayload","payload","theBatch","maxEventsPerBatch","canAddEvents","payloadEvents","eventsAdded","sizeExceeded","isBeaconPayload","requestMaxSize","recordMaxSize","joinCount","eventBlob","getEventBlob","blobLength","evts","max","eventData","serializedEvent","time","_addMetadataCallback","serializedExt","pathKeys","getEncodedType","json","propKeys","propertyValue","metaData","metaTarget","newTarget","t","_addJSONPropertyMetaData","eventExt","serializedData","baseType","serializedBaseData","data","createTimeoutWrapper","argSetTimeout","argClearTimeout","set","callback","ms","args","_i","strSendAttempt","UrlQueryString","_eventActionMap","_collectorQsHeaders","_collectorHeaderToQs","_addCollectorHeaderQsMapping","qsName","headerName","allowQs","_hasHeader","headers","header","hasHeader","keys","lowerHeader","_addRequestDetails","useHeaders","url","HttpManager","maxConnections","maxRequestRetriesBeforeBackoff","actions","_urlString","_killSwitch","_paused","_clockSkewManager","_outstandingRequests","_postManager","_logger","_sendInterfaces","_core","_customHttpInterface","_queryStringParameters","_headers","_batchQueue","_serializer","_enableEventTimings","_cookieMgr","_isUnloading","_useHeaders","_xhrTimeout","_disableXhrSync","_disableFetchKeepAlive","_canHaveReducedPayload","_addNoResponse","_unloadHooks","_sendHook","_sendListener","_responseHandlers","_isInitialized","_timeoutWrapper","_sendPostMgr","_fetchCredentials","_useBeacons","_getSenderInterface","transports","syncSupport","getSenderInst","_getSendPostMgrConfig","enableSendPromise","isOneDs","disableCredentials","fetchCredentials","disableXhr","disableBeacon","disableBeaconSync","disableFetchKeepAlive","timeWrapper","addNoResponse","senderOnCompleteCallBack","xdrOnComplete","_xdrOncomplete","fetchOnComplete","_fetchOnComplete","xhrOnComplete","_xhrOnComplete","beaconOnRetry","_onBeaconRetry","xdr","oncomplete","response","_doOnComplete","_handleCollectorResponse","onComplete","resValue","headerMap","status","responseText","handleResponse","request","canSend","thePayload","theUrl","nav_1","persistStorage","getPlugin","droppedBatches_1","sentBatches_1","sendBeacon","sentEvts","_sendBatchesNotification","_isBeaconPayload","_adjustSendType","_hasIdleConnection","_clearQueue","theQueue","_canSendPayload","theBatches","_createDebugBatches","_sendBatches","retryCount","orgBatches_1","isSynchronous_1","perfEvt","droppedBatches","serializationStart","sendInterface","sendTransport","_isSync","shift","isTenantKilled","_doPayloadSend","isSynchronous","useSendBeacon","_buildRequestDetails","requestDetails","hdrs","useHdrs","apiQsKeys","encodeURIComponent","wParam","_setTimingValue","timings","serializationCompleted","useSendHook_1","sendInterface_1","useHeaders_1","requestDetails_1","sendEventStart_1","batchLp","evtLp","orgPayloadData","_thePayload","_sendReason","disableXhrSync","sender","httpStatusCode","reason","isRetrying","backOffTrans","shouldRetry","killToken","removedEvents","retryCount_1","_doAction","batchReason","_clearBackOff","sendEventCompleted_1","sendEventCompleted","_addEventCompletedTimings","_addCompleteTimings","sendQueuedRequests","_handleRequestFinished","_retryRequestIfNeeded","sendPOST","hookData_1","senderCalled_1","cb","interval","responseHandlers","parse","webResult","sendSync","theAction_1","action","isSyncRequest_1","undefValue","_initDefaults","theConfig","core","postChannel","getCookieMgr","diagLog","coreConfig","channelConfig","extensionConfig","anonCookieName","qsParams","_addQueryStringParameter","_removeQueryStringParameter","payloadListener","httpInterface","httpXHROverride","xhrTimeout","sendPostConfig","SetConfig","SenderPostManager","syncHttpInterface","beaconHttpInterface","fetchSyncHttpInterface","beaconUnloadTransports","theTransports","addResponseHandler","responseHandler","rm","index","indexOf","optimize","theBatches_1","batch","payloadData","removeHeader","addBatch","teardown","hook","pause","MaxEventsLimitInMem","strEventsDiscarded","defaultPostChannelConfig","eventsLimitInMem","v","immediateEventLimit","autoFlushEventsLimit","disableAutoBatchFlushLimit","overrideInstrumentationKey","overrideEndpointUrl","disableTelemetry","ignoreMc1Ms0CookieProcessing","setTimeoutOverride","clearTimeoutOverride","payloadPreprocessor","disableEventTimings","disableOptimizeObj","unloadTransports","avoidOptions","alwaysUseXhrOverride","maxEventRetryAttempts","maxUnloadEventRetryAttempts","PostChannel","_postConfig","priority","version","_flushCallbackTimer","_immediateQueueSizeLimit","_queueSizeLimit","_scheduledTimer","_immediateTimer","_currentBackoffCount","_timerCount","_httpManager","_batchQueues","_autoFlushEventsLimit","_autoFlushBatchLimit","_delayedBatchSendLatency","_delayedBatchReason","_optimizeObject","_isPageUnloadTriggered","_maxEventSendAttempts","_maxUnloadEventSendAttempts","_evtNamespace","_ignoreMc1Ms0CookieProcessing","_disableAutoBatchFlushLimit","_notificationManager","_unloadHandlersAdded","_overrideInstrumentationKey","_disableTelemetry","_isTeardownCalled","_flushCallbackQueue","_immediateQueueSize","_queueSize","_profiles","_currentProfile","_removeUnloadHandlers","_batch","arr","rlt","_serialize","_cleanEvent","_handleUnloadEvents","_releaseAllQueues","_handleShowEvents","_addEventToQueues","append","evtLatency","queueSize","queueLimit","eventDropped","_addEventToProperQueue","dropLatency","dropNumber","currentLatency","eventBatch","_getEventBatch","droppedEvents","droppedCount","_notifyBatchEvents","EventsDiscardedReason","QueueFull","_resetQueueCounts","_dropEventWithLatencyOrLess","_notifyEvents","_sendEventsForLatencyAndAbove","queued","_queueBatches","_hasEvents","_scheduleTimer","immediateTimeOut","_createTimer","timeOut","requeue","_requeueEvents","send","_sendingEvent","sent","_eventsSentEvent","drop","_eventsDropped","rspFail","_eventsResponseFail","oth","_otherEvent","_initializeProfiles","iKeyMap","_setAutoLimits","theTimerFunc","timerMultiplier","_clearScheduledTimer","cancel","batchQueue","_performAutoFlush","isAsync","doFlush","flush","sync","immediateQueue","normalQueue","_loop_1","eventsQueued","latencyToProcess","_flushImpl","_waitForIdleManager","maxSendAttempts","NonRetryableStatus","_callNotification","evtName","manager","notifyFunc","apply","extraArgs","isSyncRequest","Unknown","MaxNumberEventPerBatch","getNotifyMgr","evtNamespace","_addHook","ctx","getExtCfg","existingGetWParamMethod","wparam","_hookWParam","excludePageUnloadEvents","disablePageUnloadEvents","disablePageShowEvents","setInitialized","processTelemetry","ev","itemCtx","_getTelCtx","processNext","getOfflineSupport","details_1","getUrl","serialize","shouldProcess","createOneDSPayload","_doTeardown","unloadCtx","unloadState","setEventQueueLimits","eventLimit","autoFlushLimit","_loadTransmitProfiles","profiles","profileName","profileValue","profLen","directValue","ceil","async","resolve","cleared","setMsaAuthTicket","ticket","setAuthPluginHeader","token","removeAuthPluginHeader","hasEvents","_setTransmitProfile","BaseTelemetryPlugin","_FIELDS_SEPARATOR","_FIELD_KEY_VALUE_SEPARATOR","parseConnectionString","connectionString","kvPairs","fields","kv","kvParts","endpointsuffix","locationPrefix","location","ConnectionStringParser","DisabledPropertyName","SampleRate","ProcessLegacy","HttpMethod","DEFAULT_BREEZE_ENDPOINT","DEFAULT_BREEZE_PATH","strNotSpecified","strIkey","StorageType","LocalStorage","SessionStorage","DistributedTracingModes","AI","AI_AND_W3C","W3C","strEmpty","stringToBoolOrDefault","str","defaultValue","msToTimeSpan","totalms","isNaN","round","sec","hour","days","getExtensionByName","extension","isCrossOriginError","lineNumber","columnNumber","error","_aiNameFunc","baseName","aiName","_aiApplication","_aiDevice","_aiLocation","_aiOperation","_aiSession","_aiUser","_aiCloud","_aiInternal","ContextTagKeys","applicationVersion","applicationBuild","applicationTypeId","applicationId","applicationLayer","deviceId","deviceIp","deviceLanguage","deviceLocale","deviceModel","deviceFriendlyName","deviceNetwork","deviceNetworkName","deviceOEMName","deviceOS","deviceOSVersion","deviceRoleInstance","deviceRoleName","deviceScreenResolution","deviceType","deviceMachineName","deviceVMName","deviceBrowser","deviceBrowserVersion","locationIp","locationCountry","locationProvince","locationCity","operationId","operationName","operationParentId","operationRootId","operationSyntheticSource","operationCorrelationVector","sessionId","sessionIsFirst","sessionIsNew","userAccountAcquisitionDate","userAccountId","userId","userStoreRegion","userAuthUserId","userAnonymousUserAcquisitionDate","userAuthenticatedUserAcquisitionDate","cloudName","cloudRole","cloudRoleVer","cloudRoleInstance","cloudEnvironment","cloudLocation","cloudDeploymentUnit","internalNodeName","internalSdkVersion","internalAgentVersion","internalSnippet","internalSdkSrc","SeverityLevel","Verbose","Information","Warning","Error","Extensions","UserExt","DeviceExt","TraceExt","WebExt","AppExt","OSExt","SessionExt","SDKExt","CtxTagKeys","_disableEvents","createOfflineListener","parentEvtNamespace","_document","_navigator","_isListening","listenerList","rState","onLine","uState","_currentState","calCurrentState","_enableEvents","body","ononline","enabled","_setOnline","_setOffline","listnerNoticeCheck","newState","offlineState","isOnline","isListening","unload","win","addListener","setOnlineState","RequestHeaders","requestContextHeader","requestContextTargetKey","requestContextAppIdFormat","requestIdHeader","traceParentHeader","traceStateHeader","sdkContextHeader","sdkContextHeaderAppIdRequest","requestContextHeaderLowerCase","_canUseLocalStorage","_canUseSessionStorage","_storagePrefix","_getLocalStorageObject","utlCanUseLocalStorage","_getVerifiedStorageObject","storageType","uid","Date","storage","setItem","fail","getItem","exception","_getSessionStorageObject","utlCanUseSessionStorage","utlDisableStorage","utlSetStoragePrefix","storagePrefix","utlEnableStorage","reset","utlGetLocalStorage","utlSetLocalStorage","utlRemoveStorage","utlGetSessionStorageKeys","utlGetSessionStorage","utlSetSessionStorage","utlRemoveSessionStorage","Data","aiDataContract","dataSanitizeKeyAndAddUniqueness","map","origLength","field","dataSanitizeKey","uniqueField","dsPadNumber","nameTrunc","dataSanitizeString","maxLength","valueTrunc","dataSanitizeUrl","dataSanitizeInput","dataSanitizeMessage","messageTrunc","dataSanitizeException","exceptionTrunc","dataSanitizeProperties","properties","tempProps_1","dataSanitizeMeasurements","measurements","tempMeasurements_1","measure","dataSanitizeId","id","input","_msgId","inputTrunc","num","s","Envelope","sampleRate","tags","Event","envelopeType","dataType","strError","strStack","strStackDetails","strErrorSrc","strMessage","strDescription","_stringify","convertToString","_formatMessage","errorType","evtMessage","_isStackDetails","src","_convertStackObj","errorStack","items","_getStackFromErrorObj","errorObj","errorMessage","stack","lines","entry","_getOperaStack","_getErrorType","typeName","results","exec","constructor","_formatErrorCode","Exception","severityLevel","exceptions","_isExceptionInternal","_ExceptionDetails","CreateAutoException","errorSrc","stackDetails","CreateFromInterface","prototype","toInterface","_b","problemGroup","isManual","exceptionDetailsInterface","Array","CreateSimpleException","assembly","fileName","line","formatError","outerId","hasFullStack","parsedStack","_isExceptionDetailsInternal","frames","level_1","totalSizeInBytes_1","frame","theFrame","_StackFrame","regex","parsedFrame","left","right","size","acceptedLeft","acceptedRight","howMany","_parseStack","_formatStackTrace","sourceFrame","level","matches","match","sizeInBytes","baseSize","DataPoint","count","stdDev","Metric","metrics","dataPoint","PageView","duration","PageViewPerformance","unused","cs4BaseData","perfTotal","networkConnect","sentRequest","receivedResponse","domProcessing","RemoteDependencyData","absoluteUrl","commandName","success","resultCode","requestAPI","correlationContext","dependencyKind","dependencySource","dependencyTypeName","dependencyFields","concat","Trace","_htmlAnchorIdx","_htmlAnchorElement","urlParseUrl","anchorIdx","anchorCache","tempAnchor","createElement","host","urlParseHost","href","urlGetAbsoluteUrl","a","urlGetPathName","urlGetCompleteUrl","toUpperCase","inclPort","fullHost","urlParseFullHost","protocol","port","_internalEndpoints","_correlationIdPrefix","isInternalApplicationInsightsEndpoint","correlationIdSetPrefix","prefix","correlationIdGetPrefix","correlationIdCanIncludeCorrelationHeader","requestUrl","currentHost","disableCorrelationHeaders","correlationHeaderExcludePatterns","requestHost","enableCorsCorrelation","matchExists_1","includedDomains","correlationHeaderDomains","domain","RegExp","excludedDomains","correlationHeaderExcludedDomains","correlationIdGetCorrelationContext","responseHeader","correlationId","correlationIdGetCorrelationContextValue","keyValues","keyValue","AjaxHelperParseDependencyPath","parsedUrl","pathName","pathname","charAt","dateTimeUtilsNow","perf","now","timing","navigationStart","dateTimeUtilsDuration","start","end","createDistributedTraceContextFromTrace","telemetryTrace","parentCtx","trace","getName","setName","getTraceId","traceID","setTraceId","getSpanId","parentID","setSpanId","getTraceFlags","traceFlags","setTraceFlags","newTraceFlags","_DYN_INGESTIONENDPOINT","_DYN_TO_STRING","_DYN_REMOVE_ITEM","_DYN_NAME","_DYN_MESSAGE","_DYN_PRE_TRIGGER_DATE","_DYN_DISABLED","_DYN_INTERVAL","_DYN_DAYS_OF_MONTH","_DYN_DATE","_DYN_GET_UTCDATE","_DYN_STRINGIFY","_DYN_PATHNAME","_DYN_CORRELATION_HEADER_E0","_DYN_EXTENSION_CONFIG","_DYN_EXCEPTIONS","_DYN_PARSED_STACK","_DYN_PROPERTIES","_DYN_MEASUREMENTS","_DYN_SIZE_IN_BYTES","_DYN_TYPE_NAME","_DYN_SEVERITY_LEVEL","_DYN_PROBLEM_GROUP","_DYN_IS_MANUAL","_DYN__CREATE_FROM_INTERFA1","_DYN_ASSEMBLY","_DYN_FILE_NAME","_DYN_HAS_FULL_STACK","_DYN_LEVEL","_DYN_METHOD","_DYN_LINE","_DYN_DURATION","_DYN_RECEIVED_RESPONSE","ThrottleMgr","namePrefix","_config","_localStorageObj","_isTriggered","_namePrefix","_queue","_isReady","_isSpecificDaysGiven","_flushMessage","msgID","severity","saveUnsentMsg","isSampledIn","_getCfgByKey","limit","samplingRate","_canSampledIn","localStorageObj","_getLocalStorageObjByKey","canThrottle","_canThrottle","throttled","number","isTriggered","_isTrigger","maxSendNumber","localStorageName","_getLocalStorageName","_resetLocalStorage","_sendMessage","isThrottled","throttleNum","_getQueueByKey","_setCfgByKey","monthInterval","dayInterval","curCfg","configInterval","daysOfMonth","canUseLocalStorage","curDate","_getThrottleDate","date","monthCheck","monthExpand","getUTCFullYear","getUTCMonth","_checkInterval","dayCheck","daySpan","msgKey","fix","dateStr","getDate","storageName","current","curObj","storageObj","preTriggerDate","_getLocalStorageObj","isTrigger","_isTriggeredOnCurDate","addUnloadHook","configMgr","throttleMgrCfg","getConfig","msgId","localObj","isReady","queue","err","flushAll","result_1","isFlushed","onReadyState","sendMessage","ConfigurationManager","configValue","createTelemetryItem","envelopeName","customProperties","systemProperties","TelemetryItemCreator","createDomEvent","doc","createEvent","initEvent","PropertiesPluginIdentifier","BreezeChannelIdentifier","AnalyticsPluginIdentifier","_stringToBoolOrDefault","cfgDfMerge","mrg","cfgDfValidate","validator","fallBackName","fb","cfgDfBoolean","_isConfigDefaults","_getDefault","dynamicHandler","cfgDefaults","defValue","isDefaultValid","dfVal","fallbacks","fallback","fbValue","_resolveDefaultValue","_applyDefaultValue","isValid","setFn","mergeDf","reference","readOnly","blkDynamicValue","ref","usingDefault","cfgValue","dfName","dfValue","aggregationErrorType","arrayMethodsToPatch","_throwDynamicError","desc","_getOwnPropGetter","propDesc","_setDynamicProperty","state","getter","detail","n","h","trk","fn","clr","checkDynamic","isObjectOrArray","_getProperty","_makeDynamicObject","activeHandler","act","chng","add","g","ro","upd","isReferenced","rf","hdlr","valueState","newIsObjectOrArray","_createDynamicProperty","_setDynamicPropertyState","flags","isDynamic","inPlace","rdOnly","blkProp","blkVal","orgMethod","_patchArray","symPrefix","symPostfix","_createDynamicHandler","theState","cfgHandler","defaultValues","configHandler","use","_createAndUseHandler","_block","allowUpdate","prevUpd","c","w","dynamicPropertySymbol","dynamicPropertyReadOnly","dynamicPropertyReferenced","dynamicPropertyBlockValue","dynamicPropertyDetail","_waitingHandlers","_watcherTimer","_useHandler","prevWatcher","bind","setDf","_notifyWatchers","notifyHandlers","watcherFailures_1","sourceErrors","self","errors","theMessage","srcError","throwAggregationError","_createState","createDynamicConfig","onConfigChange","_logInvalidAccess","CFG_HANDLER_LINK","BLOCK_DYNAMIC","FORCE_DYNAMIC","_cfgDeepCopy","source","target_1","getDynamicConfigHandler","blockDynamicConversion","forceDynamicConversion","_canMakeDynamic","getFunc","throwInvalidAccess","createEnumStyle","createValueMap","InvalidEvent","SizeLimitExceeded","CleanStorage","MaxInStorageTimeExceeded","ActiveStatus","PENDING","INACTIVE","ACTIVE","TelemetryInitializerPlugin","_id","_initializers","addTelemetryInitializer","telemetryInitializer","theInitializer","remove","initializer","_addInitializer","doNotSendItem","telemetryInitializersCount","_runInitializers","strValidationError","strSdkUnloadingError","cookieCfg","loggingLevelConsole","diagnosticLogInterval","_createPerfManager","notificationMgr","PerfManager","_isPluginPresent","thePlugin","plugins","exists","plugin","_deepMergeConfig","newValues","merge","_findWatcher","listeners","newWatcher","theListener","listener","l","_configHandler","_eventQueue","_perfManager","_cfgPerfManager","_cookieManager","_pluginChain","_configExtensions","_channelConfig","_channels","_telemetryInitializerPlugin","_internalLogsEventName","_unloadHandlers","_hookContainer","_debugListener","_traceCtx","_instrumentationKey","_cfgListeners","_extensions","_pluginVersionStringArr","_pluginVersionString","_activeStatus","_endpoint","_initInMemoMaxSize","_isStatusSet","_internalLogPoller","_internalLogPollerListening","_forceStopInternalLogPoller","_setStatus","_releaseQueues","releaseQueue","_startLogPoller","alwaysStart","_addUnloadHook","isRunning","_flushInternalLogs","unref","_setPluginVersions","thePlugins","_addPluginVersions","channels","updateCfg","join","DiagnosticLogger","newLogger","cfgExtensions","_createTelCtx","theCtx","_getPluginChain","_initPluginChain","updateState","theExtensions","channelPriority","allExtensions","coreExtensions","extPriorities","extPriority","_validateExtensions","rootCtx","_doUpdate","_getPlugin","pluginIdentifier","theExt","channelHosts","getChannel","setEnabled","isEnabled","pluginState","removeCb","pluginsToRemove","_removePlugins","removed","removeComplete","unloadChain","newConfigExtensions","newChannelConfig","newQueue","channel","logMessage","_flushChannels","callBack","cbTimeout","waiting","doneIterating","cbTimer","doCallback","iterate","handled_1","updateCtx","_updateHook","_logOrThrowError","_notifyInvalidEvent","hooks","activeStatus","_setPendingStatus","prevCfgPerfMgr","rootCfg","initInMemoMaxSize","ikey","msg","promises","initTimeout","initTimeOut","allPromises","rejected","ikeyRes","endpointRes","extCfg","unloadContainer","debugListener","disableDbgExt","_initDebugListener","enablePerfMgr","createPerfMgr","teeController","unloadHdl","_registerDelayedCfgListener","getChannels","controls","NotificationManager","setCookieMgr","setPerfMgr","perfMgr","eventCnt","eventQueue","unloadComplete","flushComplete","processUnloadCtx","_doUnload","run","addPlugin","replaceExisting","addCb","existingPlugin","_addPlugin","added","removedPlugins_1","newConfig","mergeExisting","oldCfg","getTraceCtx","createNew","setTraceCtx","traceCtx","onCfgChange","unloadHook","fnd","_createUnloadHook","getWParam","enableWParam","runTargetUnload","doUnloadAll","targets","done","resolved","strGetPlugin","_isinitialized","_rootCtx","_nextPlugin","_unloadHandlerContainer","currentCtx","_setDefaults","pluginChain","nextPlugin","unloadDone","theUnloadCtx","theUnloadState","_unloadCallback","updateDone","theUpdateCtx","theUpdateState","_updateCallback","getCfg","isInitialized","next","env","ChannelControllerPriority","_doc","strToGMTString","strToUTCString","strCookie","strExpires","strIsCookieUseDisabled","strDisableCookiesUsage","strConfigCookieMgr","_supportsCookies","_allowUaSameSite","_parsedCookieValue","_cookieCache","_globalCookieConfig","rootDefaultConfig","ignoreCookies","blockedCookies","cookieDomain","cookiePath","_getDoc","_isMgrEnabled","_isIgnoredCookie","cookieMgrCfg","_isCfgEnabled","rootConfig","cookieMgrConfig","isCfgEnabled","cookieEnabled","safeGetCookieMgr","createCookieMgr","inst","_gblCookieMgr","_path","_domain","unloadHandler","_enabled","_getCookieFn","_setCookieFn","_delCookieFn","getCookie","_getCookieValue","setCookie","_setCookieValue","delCookie","areCookiesSupported","gblManager","maxAgeSec","_isBlockedCookie","_extractParts","_isIE","expireMs","expiry","setTime","_formatDate","location_1","uaDisallowsSameSiteNone","_formatCookieValue","del","purge","parts","thePart","theDate","func","theCookie","newGuid","uuid","generateW3CId","tmp","hexValues","oct","clockSequenceHi","instanceName","_dataUid","_canAcceptData","createUniqueNamespace","includeVersion","createElmNodeData","accept","addDefault","theCache","_getCache","kill","listenerFuncs","_aiNamespace","_listenerProxyFunc","dbgExt","getDebugExt","ns","getDebugListener","STR_WARN_TO_CONSOLE","loggingLevelTelemetry","maxMessageLimit","enableDebug","_logFuncs","_sanitizeDiagnosticText","text","_logToConsole","theConsole","logFunc","_InternalLogMessage","isUserAct","strProps","diagnosticText","safeGetLogger","_loggingLevelConsole","_loggingLevelTelemetry","_maxInternalMessageLimit","_enableDebug","_unloadHandler","_messageCount","_messageLogged","_logInternalMessage","messageKey","_debugExtMsg","throttleLimitMessage","throttleMessage","errorToConsole","_setDefaultsFromConfig","consoleLoggingLevel","debugToConsole","resetInternalMessageCount","_getLogger","_throwInternal","_warnToConsole","strDocumentMode","strLocation","strConsole","strJSON","strCrypto","strMsCrypto","strReactNative","strMsie","strTrident","strXMLHttpRequest","_isTrident","_navUserAgentCheck","_enableMocks","_useXDomainRequest","_beaconsSupported","_hasProperty","theClass","supported","proto","setEnableEnvMocks","getLocation","checkForMock","mockLocation","getConsole","console","hasJSON","Boolean","getJSON","getCrypto","getMsCrypto","isReactNative","product","isIE","getIEVersion","userAgentStr","navigator_1","tridentVer","isBeaconsSupported","useCached","isFetchSupported","withKeepAlive","isSupported","useXDomainRequest","XDomainRequest","isXhrSupported","_getNamedValue","findMetaTag","querySelectorAll","content","findNamedServerTiming","navPerf","getEntriesByType","serverTiming","description","strOnPrefix","strAttachEvent","strAddEventHelper","strDetachEvent","strRemoveEventListener","strEvents","strVisibilityChangeEvt","strPageHide","strPageShow","strUnload","strBeforeUnload","strPageHideNamespace","strPageShowNamespace","rRemoveEmptyNs","rRemoveTrailingEmptyNs","_guid","elmNodeData","eventNamespace","_normalizeNamespace","_getEvtNamespace","theNamespace_1","parsedEvent","sort","__getRegisteredEvents","eventCache","evtType","registeredEvents","_getRegisteredEvents","aiEvts","_doDetach","handlerRef","useCapture","_doUnregister","unRegFn","capture","mergeEvtNamespace","theNamespace","namespaces","eventOn","_doAttach","registeredEvent","guid","eventOff","evtName_1","found_1","_unregisterEvents","regEvent","attachEvent","eventNameWithoutOn","detachEvent","addEventHandler","removeEventHandler","_addEventListeners","excludeEvents","addEventListeners","removeEventListeners","addPageUnloadEventListener","removePageUnloadEventListener","addPageHideEventListener","newNamespaces","pageUnloadAdded","visibilityState","removePageHideEventListener","addPageShowEventListener","pageShowAdded","removePageShowEventListener","rCamelCase","rNormalizeInvalid","rLeadingNumeric","isNotNullOrUndefined","normalizeJsName","_all","letter","strContains","search","toISOString","getExceptionName","object","setValue","valChk","srcChk","getSetValue","_createProxyFunction","funcName","srcFunc","originalArguments","proxyAssign","chkSet","proxyFunctionAs","theFunc","overwriteTarget","proxyFunctions","functionsToProxy","theFuncName","createClassFromInterface","defaults","optimizeObject","theObject","objExtend","obj1","obj6","argLen","arg","isArgArray","isArgObj","isNewArray","clone","getResponseText","formatErrorMessageXdr","formatErrorMessageXhr","prependTransports","newTransports","Object","convertAllHeadersToMap","headersString","headersArray","headerEntry","substring","_appendHeader","theHeaders","STR_KILL_DURATION_HEADER","STR_KILL_DURATION_SECONDS_HEADER","STR_TIME_DELTA_HEADER","_getAllResponseHeaders","UNDEFINED_VALUE","STR_CHANNELS","STR_CORE","STR_CREATE_PERF_MGR","STR_DISABLED","STR_EXTENSION_CONFIG","STR_EXTENSIONS","STR_PROCESS_TELEMETRY","STR_PRIORITY","STR_EVENTS_SENT","STR_EVENTS_DISCARDED","STR_EVENTS_SEND_REQUEST","STR_PERF_EVENT","STR_OFFLINE_STORE","STR_OFFLINE_SENT","STR_OFFLINE_DROP","STR_GET_PERF_MGR","STR_DOMAIN","STR_PATH","STR_NOT_DYNAMIC_ERROR","perfEvtsSendAll","_runScheduledListeners","asyncNotifications","callbacks","_runListeners","_listeners","_asyncNotifications","perfEvent","rn_1","_finishUnload","asyncUnload","strExecutionContextKey","strParentContextKey","strChildrenContextKey","_defaultPerfManager","PerfEvent","payloadDetails","theDetails_1","childTime","childEvts","childEvt","exTime","ParentContextKey","ChildrenContextKey","fire","doPerfActiveKey","doPerf","mgrSource","getSource","currentActive","children","getGblPerfMgr","strTelemetryPluginChain","strHasRunFlags","strGetTelCtx","_chainId","_createInternalContext","telemetryChain","startAt","_nextProxy","_onComplete","proxy","createTelemetryProxyChain","_getNextProxyStart","context","_next","nextProxy","completeDetails","_getExtCfg","extConfig","hasNext","getNext","setNext","that","createIfMissing","idCfg","createProcessTelemetryContext","internalContext","createProcessTelemetryUnloadContext","createProcessTelemetryUpdateContext","firstProxy","lastProxy_1","newProxy","chainId","hasProcessTelemetry","hasSetNext","proxyChain","_processChain","hasRun","pluginCore","update","_setNext","processPluginFn","hasRunContext","nextId","hasNextRun","createTelemetryPluginProxy","ProcessTelemetryContext","UInt32Mask","MaxUInt32","SEED1","SEED2","_mwcSeeded","_mwcW","_mwcZ","_autoSeedMwc","seedValue","randomValue","maxValue","random32","signed","getRandomValues","Uint32Array","mwcRandom32","newId","chars","parseResponse","itemsAccepted","itemsReceived","_noResponseQs","STR_POST_METHOD","_enableSendPromise","_diagLog","_isOneDs","_onCompleteFuncs","_disableCredentials","_fallbackInst","_disableXhr","_disableBeacon","_disableBeaconSync","_syncFetchPayload","_sendCredentials","_onError","_onNoPayloadUrl","_doBeaconSend","plainTextBatch","Blob","_beaconSender","onRetry","_xhrSender","thePromise","resolveFunc","rejectFunc","reject","endPointUrl","_doOnReadyFunc","onReadyFunc","onreadystatechange","readyState","onload","onerror","ontimeout","_doFetchSender","requestHeaders","Headers","batchLength","ignoreResponse","responseHandled","init","credentials","keepalive","Request","_handleError","res","_onFetchComplete","onCompleteFunc","fetch","response_1","ok","resp","statusText","_xdrSender","_window","onloadFunc","onprogress","hostingProtocol","endpoint","lastIndexOf","getSyncFetchPayload","transportType","sendPostFunc","_transport","getFallbackInst","pluginStateData","_getPluginState","initializePlugins","processContext","initPlugins","lastPlugin","sortPlugins","extA","extB","bHasProcess","createDistributedTraceContext","createUnloadHandlerContainer","handlers","_maxHooks","_hookAddMonitor","_testHookMaxUnloadHooksCb","maxHooks","addMonitor","createUnloadHookContainer","_hooks","oldHooks","TRACE_PARENT_REGEX","DEFAULT_VERSION","INVALID_VERSION","INVALID_TRACE_ID","INVALID_SPAN_ID","SAMPLED_FLAG","_isValid","len","invalidValue","_formatValue","_formatFlags","createTraceParent","traceId","spanId","isValidTraceId","isValidSpanId","parseTraceParent","selectIdx","isValidTraceParent","isSampledFlag","formatTraceParent","findW3cTraceParent","traceParent","findAllScripts","scripts","getElementsByTagName","script","crossOrigin","hasAttribute","defer","referrerPolicy","info","_DYN_BLK_VAL","_DYN_RD_ONLY","_DYN_NOTIFY","_DYN_WARN_TO_CONSOLE","_DYN_THROW_INTERNAL","_DYN_SET_DF","_DYN_WATCH","_DYN_APPLY","_DYN_HDLR","_DYN_CANCEL","_DYN_REMOVE_NOTIFICATION_0","_DYN_ADD_NOTIFICATION_LIS1","_DYN_IS_INITIALIZED","_DYN_INSTRUMENTATION_KEY","_DYN__INACTIVE","_DYN_GET_NOTIFY_MGR","_DYN_GET_PLUGIN","_DYN_TIME","_DYN_PROCESS_NEXT","_DYN_GET_PROCESS_TEL_CONT2","_DYN_ENABLED","_DYN_STOP_POLLING_INTERNA3","_DYN_UNLOAD","_DYN_ON_COMPLETE","_DYN_VERSION","_DYN_LOGGING_LEVEL_CONSOL4","_DYN_CREATE_NEW","_DYN_TEARDOWN","_DYN_MESSAGE_ID","_DYN_IS_ASYNC","_DYN_DIAG_LOG","_DYN__DO_TEARDOWN","_DYN_UPDATE","_DYN_GET_NEXT","_DYN_SET_NEXT_PLUGIN","_DYN_PROTOCOL","_DYN_USER_AGENT","_DYN_NODE_TYPE","_DYN_REPLACE","_DYN_LOG_INTERNAL_MESSAGE","_DYN_TYPE","_DYN_HANDLER","_DYN_STATUS","_DYN_GET_RESPONSE_HEADER","_DYN_GET_ALL_RESPONSE_HEA5","_DYN_IS_CHILD_EVT","_DYN_GET_CTX","_DYN_SET_CTX","_DYN_COMPLETE","_DYN_ITEMS_RECEIVED","_DYN_SEND_POST","_DYN_TIMEOUT","_DYN_SET_REQUEST_HEADER","_DYN_TRACE_ID","_DYN_SPAN_ID","_DYN_TRACE_FLAGS","_DYN_GET_ATTRIBUTE","strShimFunction","strShimObject","strShimUndefined","strShimPrototype","ObjClass","ObjProto","strHasOwnProperty","__assignFn","p","extendStaticsFn","d","b","__proto__","__extendsFn","__","__spreadArrayFn","to","from","il","j","STR_DURATION","_DYN_TAGS","_DYN_DEVICE_TYPE","_DYN_DATA_TYPE","_DYN_ENVELOPE_TYPE","_DYN__GET","_DYN_ENQUEUE","_DYN_ITEM","_DYN_EMIT_LINE_DELIMITED_0","_DYN_CLEAR","_DYN_MARK_AS_SENT","_DYN_CLEAR_SENT","_DYN_BUFFER_OVERRIDE","_DYN__BUFFER__KEY","_DYN__SENT__BUFFER__KEY","_DYN__MAX__BUFFER__SIZE","_DYN_TRIGGER_SEND","_DYN__SENDER","_DYN_ENDPOINT_URL","_DYN_CUSTOM_HEADERS","_DYN_MAX_BATCH_SIZE_IN_BY1","_DYN_ONUNLOAD_DISABLE_BEA2","_DYN_IS_BEACON_API_DISABL3","_DYN_ALWAYS_USE_XHR_OVERR4","_DYN_DISABLE_XHR","_DYN_ENABLE_SESSION_STORA5","_DYN__BUFFER","_DYN_ONUNLOAD_DISABLE_FET6","_DYN_DISABLE_SEND_BEACON_7","_DYN_ENABLE_SEND_PROMISE","_DYN_GET_SENDER_INST","_DYN_UNLOAD_TRANSPORTS","_DYN_CONVERT_UNDEFINED","_DYN_MAX_BATCH_INTERVAL","_DYN_SERIALIZE","_DYN__ON_ERROR","_DYN__ON_PARTIAL_SUCCESS","_DYN__ON_SUCCESS","_DYN_ITEMS_ACCEPTED","_DYN_ORI_PAYLOAD","_DYN_BASE_TYPE","_DYN_SAMPLE_RATE","_DYN_EVENTS_SEND_REQUEST","_DYN_GET_SAMPLING_SCORE","strBaseType","strProperties","strTrue","_setValueIf","_extractPropsAndMeasurements","_convertPropsUndefinedToCustomDefinedValue","customUndefinedValue","_createEnvelope","envelope","startTime","iKeyNoDashes","envTags","itmExt","itmTags","extUser","user","authId","localId","extApp","app","sesId","extDevice","device","deviceClass","ip","model","web","browserLang","browserVer","browser","envData","envBaseData","envProps","screenRes","userConsent","extOs","os","osVer","extTrace","tgs","tg","theTags","EnvelopeCreator","_extractPartAExtensions","EnvelopeCreatorInit","EventEnvelopeCreator","customMeasurements","BaseSendBuffer","_buffer","_bufferFullMessageSent","_maxRetryCnt","maxRetryCnt","_set","buffer","getItems","batchPayloads","payloads","payloadStr_1","canUseSessionStorage","newBuffer","SessionStorageSendBuffer","ArraySendBuffer","PREVIOUS_KEYS","bufferItems","_getBuffer","itemsInSentBuffer","previousItems","_getItemsFromPreviousKey","prefixEvents","_getPreviousEvents","notDeliveredItems","_removePayloadsFromBuffer","remaining","payloadStr","_getBufferBase","bufferJson","buffer_1","_setBuffer","prefixedKey","transFormedItems_1","internalItem","BUFFER_KEY","sentElements","unsentItems","sentItems","VERSION","SENT_BUFFER_KEY","MAX_BUFFER_SIZE","_serializeObject","circularReferenceCheck","output","_serializeStringMap","_serializeArray","contract","isRequired","isHidden","isArray","isPresent","isObj","sources","expectedType","parseFloat","HashCodeScoreGenerator","getHashCodeScore","getHashCode","INT_MAX_VALUE","hash","charCodeAt","abs","SamplingScoreGenerator","hashCodeGenerator","Sample","throwInternal","samplingScoreGenerator","samplingPercentage","_getResponseText","defaultAppInsightsChannelConfig","isRetryDisabled","retryCodes","EnvelopeTypeCreator","props","currentContextId","bd","uri","refUri","pageType","isLoggedIn","pageTags","pageViewData","exData","baseMetricData","average","sampleCount","remoteDepData","responseCode","Sender","_consecutiveErrors","_retryAt","_timeoutHandle","_stamp_specific_redirects","_syncUnloadSender","_offlineListener","_endpointUrl","_orgEndpointUrl","_maxBatchSizeInBytes","_beaconSupported","_beaconOnUnloadSupported","_beaconNormalSupported","_customHeaders","_convertUndefined","_isRetryDisabled","_maxBatchInterval","_sessionStorageUsed","_bufferOverrideUsed","_alwaysUseCustomSend","_fetchKeepAlive","_xhrSend","_fallbackSend","_disableBeaconSplit","_retryCodes","_xdrOnLoad","_xhrReadyStateChange","countOfItemsInPayload","_checkResponsStatus","responseURL","_getPayloadArr","_validate","diagLogger","_sample","_getEnvelope","defaultEnvelopeIkey","aiEnvelope","constructEnvelope","valid","_createPayload","_getHeaders","_doSend","markAsSent","_getPayload","_onSuccess","_getOnComplete","_checkMaxSize","incomingPayload","incomingSize","responseUrl","_appId","appId","_checkAndUpdateEndPointUrl","_resendPayload","_isRetriable","_doUnloadSend","_isStringArr","_fetchKeepAliveSender","transport","payloadSize","linearFactor","payload_1","delayInSeconds","backOffSlot","backOffDelay","retryAfterTimeSpan","_setRetryTime","_setupTimer","retryInterval","timerValue","statusCode","resume","onunloadFlush","addHeader","senderConfig","customHeader","bufferOverride","shouldUpdate","instrumentationKey","disableValidation","disableInstrumentationKeyValidation","_validateInstrumentationKey","onCompleteFuncs","droppedPayload","customInterface","syncInterface","xhrInterface","syncTransports","filter","payloadItem","isCompletelyIdle","forcedSender","sendRequest","_notifySendRequest","ieVer","failed","retry","errors_1","reverse","extracted","_onPartialSuccess","orig","convertUndefined","_DYN_CONNECTION_STRING","_DYN_INSTRUMENTATIONKEY0","_DYN_USER_OVERRIDE_ENDPOI1","defaultConfigValues","ApplicationInsights","_track","_initialize","configCs","ikeyPromise","curCs","urlPromise","ingest","cs","initialize","Constructor","Prototype","strFunction","DynInstFuncTable","DynProxyTag","DynClassName","DynClassNamePrefix","DynInstChkTag","DynAllowInstChkTag","DynProtoDefaultOptions","UnknownValue","str__Proto","DynProtoBaseProto","DynProtoGlobalSettings","DynProtoCurrent","strUseBaseInst","strSetInstFuncs","Obj","_objGetPrototypeOf","_objGetOwnProps","_gbl","_gblInst","o","_isObjectOrArrayPrototype","_isObjectArrayOrFunctionPrototype","Function","_getObjProto","newProto","curProto","_forEachProp","_isDynamicCandidate","skipOwn","_throwTypeError","_hasVisited","_populatePrototype","className","baseInstFuncs","setInstanceFunc","instFuncTable","instFuncs_1","dynProtoProxy","instFunc","currentDynProtoProxy","canAddInst","objProto","visited","protoFunc","_getInstFunc","_getProtoFunc","_createDynamicPrototype","_getObjName","unknownValue","dynamicProto","delegateFunc","options","classProto","thisTarget","thisProto","_checkPrototype","perfOptions","useBaseInst","instFuncs","_getInstanceFuncs","baseFuncs","_instFuncProxy","funcHost","baseProto","_getBaseFuncs","_debugState","_debugResult","_debugHandled","STR_PROMISE","REJECTED","doAwaitResponse","doAwait","resolveFn","rejectFn","finallyFn","then","finally","doFinally","_hasInitEvent","_promiseDebugEnabled","STRING_STATES","DISPATCH_EVENT","_hasInitEventFn","_hasPromiseRejectionEvent","_promiseCls","_allSyncSettledCreator","_promiseCreator","NODE_UNHANDLED_REJECTION","UNHANDLED_REJECTION","_currentPromiseId","_uniquePromiseId","_unhandledRejectionTimeout","dumpFnObj","_createPromise","newPromise","processor","executor","_settledValue","_thePromise","additionalArgs","_state","_hasResolved","_parentId","_handled","_unHandledRejectionHandler","_then","onResolved","onRejected","_processQueue","pop","_strState","pending","_createSettleIfFn","allowState","_notifyUnhandledRejection","process","emit","gbl","populateEvent","useNewEvent","theEvt","emitEvent","onFinally","thenFinally","catchFinally","stateFn","_addDebugState$1","_rejectFn","_createAllPromise","values_1","pending_1","syncItemProcessor","createAsyncPromise","callbackTimeout","timeoutItemProcessor","createNativePromise","PrmCls","createSyncPromise","createSyncAllSettledPromise","processItem","createPromise","createAllPromise","_pureAssign","func1","func2","_pureRef","_primitiveTypes","UNDEF_VALUE","NULL_VALUE","EMPTY","FUNCTION","OBJECT","PROTOTYPE","__PROTO__","UNDEFINED","CONSTRUCTOR","SYMBOL","POLYFILL_TAG","LENGTH","NAME","CALL","TO_STRING","StrCls","StrProto","MathCls","ArrCls","ArrProto","ArrSlice","safe","argArray","_createIs","_createObjIs","theName","objToString","isTypeof","isUndefined","isNullOrUndefined","isDefined","isString","isFunction","isObject","isDate","isNumber","isBoolean","isError","isPromiseLike","isNotTruthy","isTruthy","objGetOwnPropertyDescriptor","objHasOwnProperty","objHasOwn","polyObjHasOwn","objForEachKey","callbackfn","thisArg","propMap","_createProp","objDefineProp","objDefineProperties","objDefineAccessors","getProp","setProp","configurable","enumerable","objDefine","_createKeyValueMap","keyType","valueType","completeFn","writable","theMap","_assignMapValue","asString","ERROR_TYPE","dumpObj","format","propertyValueDump","throwError","throwTypeError","TypeError","_objFreeze","_doNothing","_getProto","objAssign","objKeys","objDeepFreeze","objFreeze","objSeal","objGetPrototypeOf","createEnum","createEnumKeyMap","createTypeMap","mapClass","createSimpleMap","_globalCfg","_wellKnownSymbolMap","asyncIterator","hasInstance","isConcatSpreadable","iterator","matchAll","species","toPrimitive","toStringTag","unscopables","GLOBAL_CONFIG_KEY","_getGlobalValue","globalThis","window","global","_getGlobalConfig","_unwrapFunction","_unwrapFunctionWithPoly","clsProto","polyFunc","clsFn","_unwrapProp","propName","mathMax","strSlice","strSubstring","strSubstr","polyStrSubstr","strLeft","_polySymbols","_wellKnownSymbolCache","_globalLazyTestHooks","UNIQUE_REGISTRY_ID","polyNewSymbol","theSymbol","polySymbolFor","registry","gblCfg","gblSym","k","_globalSymbolRegistry","newSymbol_1","regId_1","_initTestHooks","getLazy","lazyValue","lzy","createCachedValue","toJSON","_cachedGlobal","WINDOW","_getGlobalInstFn","getFn","cachedValue","getGlobal","getInst","hasDocument","getDocument","hasWindow","getWindow","hasNavigator","getNavigator","hasHistory","getHistory","_symbol","_symbolFor","_iterSymbol$1","isNode","versions","node","_initSymbol","_getSymbolKey","hasSymbol","getSymbol","getKnownSymbol","noPoly","knownName","sym","polyGetKnownSymbol","newSymbol","symbolFor","isIterator","isIterable","isStrictNullOrUndefined","iterForOf","iter","iterResult","throw","return","fnApply","arrAppend","elms","elm","arrForEach","theArray","arrIndexOf","arrMap","arrSlice","polyArrIncludes","searchElement","fromIndex","_isProtoArray","arrIncludes","arrReduce","objCreate","polyObjCreate","tempFunc","objSetPrototypeOf","_setName","baseClass","createCustomError","constructCb","errorBase","theBaseClass","orgName","captureFn","captureStackTrace","_createCustomError","orgProto","utcNow","polyUtcNow","_createTrimFn","exp","_fnToString","_objCtrFnString","_gblWindow","strTrim","isPlainObject","_defaultDeepCopyHandler","plainObjDeepCopyHandler","defaultDeepCopyHandlers","copyTo","_deepCopy","visitMap","userHandler","newCtx","isPlain","isPrim","isPrimitiveType","origin","copy","newKey","_copyProps","theEntry","newEntry","_getSetVisited","deepExtend","theArg","objCopyProps","_doExtend","_perf","getLength","getPerformance","perfNow","strEndsWith","polyStrEndsWith","searchString","searchValue","strIndexOf","strStartsWith","polyStrStartsWith","position","pos","REF","UNREF","HAS_REF","ENABLED","_createTimeoutWith","startTimer","overrideFn","isArr","setTimeout","clearFn","clearTimeout","timerFn","dn","refreshFn","cancelFn","theTimerHandler","timerId","_unref","_cancel","_refresh","refresh","_createTimerHandler","scheduleTimeout","scheduleTimeoutWith","createTimeout","__createBinding","m","k2","getOwnPropertyDescriptor","__esModule","defineProperty","__setModuleDefault","__importStar","mod","exports","oneDataSystemClientFactory","vscodeAPI","xhrOverride","appInsightsCore","oneDs","Promise","postPlugin","collectorChannelPlugin","disableCookiesUsage","internalTesting","workspace","getConfiguration","getAICore","logEvent","completedFlush","dispose","appInsightsClientFactory","applicationinsights_common_1","util_1","machineId","replacementOptions","appInsightsClient","basicAISDK","disableAjaxTracking","disableExceptionTracking","disableFetchTracking","autoTrackPageVisitTime","emitLineDelimitedJson","TelemetryUtil","applyReplacements","BaseTelemetryReporter","telemetrySender","initializationOptions","userOptIn","errorOptIn","disposables","_onDidChangeTelemetryLevel","EventEmitter","onDidChangeTelemetryLevel","telemetryLogger","createTelemetryLogger","updateUserOptIn","onDidChangeEnableStates","isErrorsEnabled","isUsageEnabled","instantiateSender","telemetryLevel","internalSendTelemetryEvent","dangerous","sendEventData","logUsage","sendTelemetryEvent","sendRawTelemetryEvent","modifiedProperties","propertyKey","TelemetryTrustedValue","sendDangerousTelemetryEvent","internalSendTelemetryErrorEvent","logError","sendTelemetryErrorEvent","sendDangerousTelemetryErrorEvent","all","InstantiationStatus","BaseTelemetrySender","clientFactory","_instantiationStatus","NOT_INSTANTIATED","_exceptionQueue","_clientFactory","_key","_telemetryClient","INSTANTIATED","sendErrorData","errorData","errorProperties","_flushQueues","forEach","INSTANTIATING","client","catch","option","lookup","replacementString","shouldUseOneDataSystemSDK","getAdditionalCommonProperties","osShim","platform","architecture","release","getInstance","_instance","https","vscode","_1dsClientFactory_1","appInsightsClientFactory_1","baseTelemetryReporter_1","baseTelemetrySender_1","getXHROverride","Buffer","byteLength","req","on","responseData","write","TelemetryReporter","arch","super","additionalCommonProperties","descriptorBoolean","label","html","descriptorAddress","column_descriptors","vsLoadOrder","basename","addressRange","vsLoadAddress","vsModuleSize","filename","class","title","dirname","sep","vsIs64Bit","isOptimized","isUserCode","symbolFilePath","symbolStatus","dateTimeStamp","vsTimestampUTC","toUTCString","DEBUG_SOURCE_SCHEME","DebugSourceTextProvider","provideTextDocumentContent","authority","sourceReference","debug","activeDebugSession","customRequest","openPreview","document","openTextDocument","showTextDocument","preview","viewColumn","ViewColumn","Active","by_id","view","receive","utils","CallCombiner","webview","updateView","modules","address_function","address_requested","Set","nextOrder","selected_id","me","registerDebugAdapterTrackerFactory","createDebugAdapterTracker","session","registerTextDocumentContentProvider","setText","postMessage","command","addClass","selector","clss","enable","fixModuleAddresses","filtered","has","expression","frameId","memoryReference","getModuleAddressFunction","asyncMap","log","getModuleAddress","resolveWebviewView","webviewView","enableScripts","localResourceRoots","Uri","joinPath","extensionUri","onDidReceiveMessage","range","displayName","scheme","query","fromOffset","toOffset","getUriForDebugMemory","commands","executeCommand","extname","file","trigger","onWillStopSession","clear","onDidSendMessage","module","getUri","asWebviewUri","lang","has_col","reduce","cols","reporter","rows","delete","address","charset","rel","entries","subscriptions","registerWebviewViewProvider","ModuleWebViewProvider","registerCommand","sendDAPRequest","editor","activeTextEditor","bodyJSON","getText","selection","x","num_keys","isDAPRequest","activeDebugConsole","appendLine","showErrorMessage","jsx_children","flat","child","jsx","jsx_props","code","for","display","codicons","lightbulb","repo","fork","pullRequest","keyboard","tag","person","branch","mirror","star","comment","alert","logOut","logIn","eye","circleFilled","primitiveSquare","pencil","private","close","beaker","desktop","ellipsis","reply","organization","newFile","newFolder","trash","clock","folder","github","terminal","symbolEvent","variable","array","symbolModule","symbolFunction","symbolBoolean","symbolNumber","symbolStruct","symbolParameter","symbolKey","symbolReference","symbolValue","symbolUnit","activateBreakpoints","archive","arrowBoth","arrowDown","arrowLeft","arrowRight","arrowSmallDown","arrowSmallLeft","arrowSmallRight","arrowSmallUp","arrowUp","bell","bold","book","bookmark","debugBreakpointConditionalUnverified","debugBreakpointConditional","debugBreakpointDataUnverified","debugBreakpointData","debugBreakpointLogUnverified","debugBreakpointLog","briefcase","broadcast","bug","calendar","caseSensitive","check","checklist","chevronDown","chevronLeft","chevronRight","chevronUp","chromeClose","chromeMaximize","chromeMinimize","chromeRestore","circle","circleSlash","circuitBoard","clearAll","clippy","closeAll","cloudDownload","cloudUpload","collapseAll","colorMode","commentDiscussion","creditCard","dash","dashboard","database","debugContinue","debugDisconnect","debugPause","debugRestart","debugStart","debugStepInto","debugStepOut","debugStepOver","debugStop","deviceCameraVideo","deviceCamera","deviceMobile","diffAdded","diffIgnored","diffModified","diffRemoved","diffRenamed","diff","discard","editorLayout","emptyWindow","exclude","eyeClosed","fileBinary","fileCode","fileMedia","filePdf","fileSubmodule","fileSymlinkDirectory","fileSymlinkFile","fileZip","files","flame","foldDown","foldUp","fold","folderActive","folderOpened","gear","gift","gistSecret","gist","gitCommit","compareChanges","gitMerge","githubAction","githubAlt","globe","grabber","graph","gripper","heart","home","horizontalRule","hubot","inbox","issueReopened","issues","italic","jersey","bracket","kebabVertical","law","lightbulbAutofix","linkExternal","link","listOrdered","listUnordered","liveShare","loading","mailRead","mail","markdown","megaphone","mention","milestone","mortarBoard","move","multipleWindows","mute","noNewline","note","octoface","package","paintcan","pin","play","plug","preserveCase","project","pulse","question","quote","radioTower","reactions","references","remoteExplorer","remote","replaceAll","repoClone","repoForcePush","repoPull","repoPush","report","requestChanges","rocket","rootFolderOpened","rootFolder","rss","ruby","saveAll","saveAs","save","screenFull","screenNormal","searchStop","server","settingsGear","settings","shield","smiley","sortPrecedence","splitHorizontal","splitVertical","squirrel","starFull","starHalf","symbolClass","symbolColor","symbolConstant","symbolEnumMember","symbolField","symbolFile","symbolInterface","symbolKeyword","symbolMisc","symbolOperator","symbolProperty","symbolSnippet","tasklist","telescope","textSize","threeBars","thumbsdown","thumbsup","tools","triangleDown","triangleLeft","triangleRight","triangleUp","twitter","unfold","unlock","unmute","unverified","verified","vmActive","vmOutline","vmRunning","watch","whitespace","wholeWord","wordWrap","zoomIn","zoomOut","listFilter","listFlat","listSelection","listTree","debugBreakpointFunctionUnverified","debugBreakpointFunction","debugStackframeActive","circleSmallFilled","debugStackframe","debugBreakpointUnsupported","symbolString","debugReverseContinue","debugStepBack","debugRestartFrame","debugAlt","callIncoming","callOutgoing","menu","expandAll","feedback","groupByRefType","ungroupByRefType","account","bellDot","debugConsole","library","runAll","syncIgnored","pinned","githubInverted","serverProcess","serverEnvironment","pass","stopCircle","playCircle","record","debugAltSmall","vmConnect","cloud","export","graphLeft","magnet","notebook","redo","checkAll","pinnedDirty","passFilled","circleLargeFilled","circleLarge","combine","table","variableGroup","typeHierarchy","typeHierarchySub","typeHierarchySuper","gitPullRequestCreate","runAbove","runBelow","notebookTemplate","debugRerun","workspaceTrusted","workspaceUntrusted","workspaceUnknown","terminalCmd","terminalDebian","terminalLinux","terminalPowershell","terminalTmux","terminalUbuntu","terminalBash","arrowSwap","personAdd","filterFilled","wand","debugLineByLine","inspect","layers","layersDot","layersActive","compass","compassDot","compassActive","azure","issueDraft","gitPullRequestClosed","gitPullRequestDraft","debugAll","debugCoverage","runErrors","folderLibrary","debugContinueSmall","beakerStop","graphLine","graphScatter","pieChart","bracketDot","bracketError","lockSmall","azureDevops","verifiedFilled","newline","layout","layoutActivitybarLeft","layoutActivitybarRight","layoutPanelLeft","layoutPanelCenter","layoutPanelJustify","layoutPanelRight","layoutPanel","layoutSidebarLeft","layoutSidebarRight","layoutStatusbar","layoutMenubar","layoutCentered","indent","recordSmall","errorSmall","arrowCircleDown","arrowCircleLeft","arrowCircleRight","arrowCircleUp","layoutSidebarRightOff","layoutPanelOff","layoutSidebarLeftOff","blank","heartFilled","foldHorizontal","foldHorizontalFilled","circleSmall","bellSlash","bellSlashDot","commentUnresolved","gitPullRequestGoToChanges","gitPullRequestNewChanges","searchFuzzy","commentDraft","sparkle","insert","mic","thumbsdownFilled","thumbsupFilled","coffee","snake","game","vr","chip","piano","music","micFilled","repoFetch","copilot","lightbulbSparkle","robot","sparkleFilled","diffSingle","diffMultiple","surroundWith","share","gitStash","gitStashApply","gitStashPop","vscodeInsiders","codeOss","runCoverage","runAllCoverage","coverage","githubProject","foldVertical","foldVerticalFilled","goToSearch","percentage","attach","compare","mapIterable","iterable","filterIterable","highestSetIndex32","clz32","lowestSetIndex32","bitCount32","byteSwap","buf","_encodeText16Into","into","encoding","Uint16Array","byteOffset","isLittleEndian","load","cache","fullpath","list","isT","recurse","merged","r","partitions","initialValue","promise","fns","filters","_","fromEntries","lowestSetIndex","Number","bitCount","splits","find","re","lastIndex","replace_back","async_replace_back","strings","dict","at","isInteger","bom","fromCharCode","TextDecoder","subarray","bytes","factory","_value","delay","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","Symbol","__webpack_exports__"],"sourceRoot":""}